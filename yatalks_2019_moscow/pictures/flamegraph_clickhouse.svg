<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Stack " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Clickhouse queryId 1205caf2-5262-4825-85ea-521ffe9a68e2 from 2019-11-30T00:00:00+03:00 to 2019-11-30T01:00:00+03:00</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>malloc_default#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:151 (6 samples, 0.04%)</title><rect x="936.3" y="181" width="0.5" height="15.0" fill="rgb(252,35,9)" rx="2" ry="2" />
<text  x="939.32" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:526 (41 samples, 0.28%)</title><rect x="149.1" y="357" width="3.4" height="15.0" fill="rgb(232,189,18)" rx="2" ry="2" />
<text  x="152.13" y="367.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:440 (17 samples, 0.12%)</title><rect x="108.2" y="341" width="1.4" height="15.0" fill="rgb(237,180,33)" rx="2" ry="2" />
<text  x="111.24" y="351.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (2 samples, 0.01%)</title><rect x="1008.7" y="85" width="0.1" height="15.0" fill="rgb(234,211,35)" rx="2" ry="2" />
<text  x="1011.67" y="95.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71 (13 samples, 0.09%)</title><rect x="808.9" y="293" width="1.1" height="15.0" fill="rgb(214,180,20)" rx="2" ry="2" />
<text  x="811.90" y="303.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:190 (20 samples, 0.14%)</title><rect x="815.5" y="309" width="1.7" height="15.0" fill="rgb(232,214,39)" rx="2" ry="2" />
<text  x="818.54" y="319.5" ></text>
</g>
<g >
<title>DB::Aggregator::createAggregateStates(char*&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:356 (229 samples, 1.59%)</title><rect x="757.4" y="325" width="18.8" height="15.0" fill="rgb(212,210,13)" rx="2" ry="2" />
<text  x="760.45" y="335.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:124 (43 samples, 0.30%)</title><rect x="93.6" y="341" width="3.5" height="15.0" fill="rgb(205,63,37)" rx="2" ry="2" />
<text  x="96.58" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (60 samples, 0.42%)</title><rect x="1081.8" y="69" width="4.9" height="15.0" fill="rgb(208,142,11)" rx="2" ry="2" />
<text  x="1084.76" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:336 (3 samples, 0.02%)</title><rect x="266.3" y="277" width="0.3" height="15.0" fill="rgb(222,59,31)" rx="2" ry="2" />
<text  x="269.30" y="287.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (2 samples, 0.01%)</title><rect x="179.7" y="261" width="0.2" height="15.0" fill="rgb(225,229,19)" rx="2" ry="2" />
<text  x="182.70" y="271.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:198 (2 samples, 0.01%)</title><rect x="976.1" y="181" width="0.1" height="15.0" fill="rgb(234,99,47)" rx="2" ry="2" />
<text  x="979.06" y="191.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:520 (17 samples, 0.12%)</title><rect x="1080.0" y="69" width="1.4" height="15.0" fill="rgb(219,64,8)" rx="2" ry="2" />
<text  x="1083.04" y="79.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2689 (6 samples, 0.04%)</title><rect x="1007.4" y="181" width="0.5" height="15.0" fill="rgb(253,106,31)" rx="2" ry="2" />
<text  x="1010.36" y="191.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::generate()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:62 (3,304 samples, 22.94%)</title><rect x="915.8" y="293" width="270.7" height="15.0" fill="rgb(252,118,2)" rx="2" ry="2" />
<text  x="918.75" y="303.5" >DB::MergeTreeBaseSelectProcessor::ge..</text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:43 (5 samples, 0.03%)</title><rect x="1180.8" y="85" width="0.4" height="15.0" fill="rgb(206,188,48)" rx="2" ry="2" />
<text  x="1183.82" y="95.5" ></text>
</g>
<g >
<title>DB::ISource::work()#/usr/include/c++/9/bits/stl_vector.h:108 (4 samples, 0.03%)</title><rect x="1189.3" y="325" width="0.4" height="15.0" fill="rgb(219,185,45)" rx="2" ry="2" />
<text  x="1192.34" y="335.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:314 (2 samples, 0.01%)</title><rect x="1181.1" y="69" width="0.1" height="15.0" fill="rgb(252,129,11)" rx="2" ry="2" />
<text  x="1184.07" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:374 (2 samples, 0.01%)</title><rect x="673.5" y="325" width="0.2" height="15.0" fill="rgb(251,49,45)" rx="2" ry="2" />
<text  x="676.54" y="335.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:22 (4 samples, 0.03%)</title><rect x="1174.5" y="133" width="0.3" height="15.0" fill="rgb(242,64,36)" rx="2" ry="2" />
<text  x="1177.51" y="143.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:697 (9 samples, 0.06%)</title><rect x="262.9" y="213" width="0.7" height="15.0" fill="rgb(216,137,0)" rx="2" ry="2" />
<text  x="265.86" y="223.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:167 (17 samples, 0.12%)</title><rect x="1039.6" y="101" width="1.4" height="15.0" fill="rgb(242,88,9)" rx="2" ry="2" />
<text  x="1042.56" y="111.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:130 (17 samples, 0.12%)</title><rect x="902.8" y="341" width="1.4" height="15.0" fill="rgb(211,90,8)" rx="2" ry="2" />
<text  x="905.80" y="351.5" ></text>
</g>
<g >
<title>start_thread#/lib/x86_64-linux-gnu/libpthread-2.27.so (14,234 samples, 98.84%)</title><rect x="22.5" y="469" width="1166.3" height="15.0" fill="rgb(221,60,43)" rx="2" ry="2" />
<text  x="25.45" y="479.5" >start_thread#/lib/x86_64-linux-gnu/libpthread-2.27.so</text>
</g>
<g >
<title>arena_extents_dirty_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:67 (6 samples, 0.04%)</title><rect x="1007.4" y="149" width="0.5" height="15.0" fill="rgb(216,51,3)" rx="2" ry="2" />
<text  x="1010.36" y="159.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1486 (33 samples, 0.23%)</title><rect x="260.2" y="213" width="2.7" height="15.0" fill="rgb(215,30,4)" rx="2" ry="2" />
<text  x="263.16" y="223.5" ></text>
</g>
<g >
<title>extent_split_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:2066 (6 samples, 0.04%)</title><rect x="806.8" y="149" width="0.5" height="15.0" fill="rgb(229,61,14)" rx="2" ry="2" />
<text  x="809.77" y="159.5" ></text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1075 (2 samples, 0.01%)</title><rect x="1189.4" y="85" width="0.2" height="15.0" fill="rgb(214,76,1)" rx="2" ry="2" />
<text  x="1192.43" y="95.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (2 samples, 0.01%)</title><rect x="1189.4" y="101" width="0.2" height="15.0" fill="rgb(247,196,25)" rx="2" ry="2" />
<text  x="1192.43" y="111.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:520 (2 samples, 0.01%)</title><rect x="1183.0" y="37" width="0.1" height="15.0" fill="rgb(250,142,8)" rx="2" ry="2" />
<text  x="1185.95" y="47.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1409 (3 samples, 0.02%)</title><rect x="91.4" y="341" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="94.37" y="351.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:54 (3 samples, 0.02%)</title><rect x="1176.8" y="117" width="0.3" height="15.0" fill="rgb(234,66,20)" rx="2" ry="2" />
<text  x="1179.81" y="127.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:226 (37 samples, 0.26%)</title><rect x="979.2" y="181" width="3.0" height="15.0" fill="rgb(233,76,44)" rx="2" ry="2" />
<text  x="982.17" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::convertToBlockImplFinal&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:935 (1,059 samples, 7.35%)</title><rect x="245.7" y="309" width="86.7" height="15.0" fill="rgb(249,190,17)" rx="2" ry="2" />
<text  x="248.66" y="319.5" >void DB::A..</text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:107 (2 samples, 0.01%)</title><rect x="1174.5" y="101" width="0.2" height="15.0" fill="rgb(227,9,11)" rx="2" ry="2" />
<text  x="1177.51" y="111.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (2 samples, 0.01%)</title><rect x="1175.9" y="69" width="0.2" height="15.0" fill="rgb(212,104,46)" rx="2" ry="2" />
<text  x="1178.91" y="79.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:183 (2 samples, 0.01%)</title><rect x="805.5" y="261" width="0.1" height="15.0" fill="rgb(254,141,7)" rx="2" ry="2" />
<text  x="808.46" y="271.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1312 (2 samples, 0.01%)</title><rect x="242.1" y="357" width="0.1" height="15.0" fill="rgb(229,148,49)" rx="2" ry="2" />
<text  x="245.05" y="367.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:514 (10 samples, 0.07%)</title><rect x="1131.8" y="69" width="0.8" height="15.0" fill="rgb(244,21,32)" rx="2" ry="2" />
<text  x="1134.82" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (4 samples, 0.03%)</title><rect x="804.0" y="245" width="0.3" height="15.0" fill="rgb(214,191,14)" rx="2" ry="2" />
<text  x="806.99" y="255.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:215 (2 samples, 0.01%)</title><rect x="983.4" y="149" width="0.1" height="15.0" fill="rgb(218,81,27)" rx="2" ry="2" />
<text  x="986.35" y="159.5" ></text>
</g>
<g >
<title>void DB::Aggregator::convertToBlockImplFinal&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:526 (15 samples, 0.10%)</title><rect x="244.3" y="309" width="1.2" height="15.0" fill="rgb(206,121,39)" rx="2" ry="2" />
<text  x="247.26" y="319.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionHelper&lt;DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::addBatch(unsigned long, char**, unsigned long, DB::IColumn const**, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionUniq.h:175 (73 samples, 0.51%)</title><rect x="791.1" y="325" width="6.0" height="15.0" fill="rgb(237,33,39)" rx="2" ry="2" />
<text  x="794.12" y="335.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:440 (25 samples, 0.17%)</title><rect x="483.8" y="325" width="2.0" height="15.0" fill="rgb(225,82,34)" rx="2" ry="2" />
<text  x="486.77" y="335.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;)#/usr/include/c++/9/bits/stl_vector.h:1043 (2 samples, 0.01%)</title><rect x="931.5" y="213" width="0.1" height="15.0" fill="rgb(225,222,26)" rx="2" ry="2" />
<text  x="934.48" y="223.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt;::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionUniq.h:244 (7 samples, 0.05%)</title><rect x="249.3" y="293" width="0.5" height="15.0" fill="rgb(217,84,1)" rx="2" ry="2" />
<text  x="252.26" y="303.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:364 (60 samples, 0.42%)</title><rect x="221.6" y="341" width="5.0" height="15.0" fill="rgb(248,27,51)" rx="2" ry="2" />
<text  x="224.65" y="351.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:703 (11 samples, 0.08%)</title><rect x="296.0" y="277" width="0.9" height="15.0" fill="rgb(238,198,40)" rx="2" ry="2" />
<text  x="298.97" y="287.5" ></text>
</g>
<g >
<title>__memset_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:141 (12 samples, 0.08%)</title><rect x="911.4" y="309" width="1.0" height="15.0" fill="rgb(228,19,33)" rx="2" ry="2" />
<text  x="914.41" y="319.5" ></text>
</g>
<g >
<title>large_ralloc_no_move_expand#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:162 (3 samples, 0.02%)</title><rect x="460.3" y="229" width="0.2" height="15.0" fill="rgb(247,119,11)" rx="2" ry="2" />
<text  x="463.25" y="239.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::~ColumnVector()#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:104 (2 samples, 0.01%)</title><rect x="942.2" y="229" width="0.2" height="15.0" fill="rgb(246,137,0)" rx="2" ry="2" />
<text  x="945.22" y="239.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1309 (8 samples, 0.06%)</title><rect x="241.1" y="357" width="0.6" height="15.0" fill="rgb(240,180,38)" rx="2" ry="2" />
<text  x="244.07" y="367.5" ></text>
</g>
<g >
<title>large_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:112 (4 samples, 0.03%)</title><rect x="902.1" y="293" width="0.3" height="15.0" fill="rgb(244,26,40)" rx="2" ry="2" />
<text  x="905.07" y="303.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:224 (3 samples, 0.02%)</title><rect x="457.7" y="325" width="0.3" height="15.0" fill="rgb(223,188,39)" rx="2" ry="2" />
<text  x="460.71" y="335.5" ></text>
</g>
<g >
<title>DB::MergeSortingBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.h:90 (20 samples, 0.14%)</title><rect x="23.1" y="277" width="1.6" height="15.0" fill="rgb(212,134,8)" rx="2" ry="2" />
<text  x="26.11" y="287.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:438 (2 samples, 0.01%)</title><rect x="922.8" y="101" width="0.2" height="15.0" fill="rgb(215,65,21)" rx="2" ry="2" />
<text  x="925.80" y="111.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (51 samples, 0.35%)</title><rect x="100.3" y="309" width="4.2" height="15.0" fill="rgb(243,45,28)" rx="2" ry="2" />
<text  x="103.30" y="319.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:329 (17 samples, 0.12%)</title><rect x="871.3" y="309" width="1.4" height="15.0" fill="rgb(219,81,42)" rx="2" ry="2" />
<text  x="874.26" y="319.5" ></text>
</g>
<g >
<title>CRC32Hash::operator()(StringRef) const [clone .isra.0]#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:239 (2 samples, 0.01%)</title><rect x="713.9" y="325" width="0.2" height="15.0" fill="rgb(228,159,38)" rx="2" ry="2" />
<text  x="716.94" y="335.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::decompress(char*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:168 (925 samples, 6.42%)</title><rect x="1062.0" y="117" width="75.8" height="15.0" fill="rgb(237,110,47)" rx="2" ry="2" />
<text  x="1065.01" y="127.5" >DB::Comp..</text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:381 (30 samples, 0.21%)</title><rect x="937.3" y="229" width="2.5" height="15.0" fill="rgb(252,17,16)" rx="2" ry="2" />
<text  x="940.30" y="239.5" ></text>
</g>
<g >
<title>extent_merge_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:2231 (2 samples, 0.01%)</title><rect x="1007.4" y="101" width="0.1" height="15.0" fill="rgb(253,67,3)" rx="2" ry="2" />
<text  x="1010.36" y="111.5" ></text>
</g>
<g >
<title>DB::PreparedFunctionImpl::execute(DB::Block&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, unsigned long, unsigned long, bool)#/build/obj-x86_64-linux-gnu/../dbms/src/Functions/IFunction.cpp:474 (77 samples, 0.53%)</title><rect x="945.5" y="181" width="6.3" height="15.0" fill="rgb(217,155,23)" rx="2" ry="2" />
<text  x="948.49" y="191.5" ></text>
</g>
<g >
<title>DB::Aggregator::executeOnBlock(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;, unsigned long, DB::AggregatedDataVariants&amp;, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, std::vector&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;, std::allocator&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt; &gt; &gt;&amp;, bool&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:616 (6,515 samples, 45.24%)</title><rect x="376.2" y="373" width="533.8" height="15.0" fill="rgb(211,224,44)" rx="2" ry="2" />
<text  x="379.18" y="383.5" >DB::Aggregator::executeOnBlock(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_pt..</text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:521 (8 samples, 0.06%)</title><rect x="1117.2" y="69" width="0.6" height="15.0" fill="rgb(235,142,1)" rx="2" ry="2" />
<text  x="1120.16" y="79.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnVector.cpp:290 (3 samples, 0.02%)</title><rect x="935.0" y="229" width="0.3" height="15.0" fill="rgb(232,15,51)" rx="2" ry="2" />
<text  x="938.01" y="239.5" ></text>
</g>
<g >
<title>extent_split_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:2066 (3 samples, 0.02%)</title><rect x="936.6" y="85" width="0.2" height="15.0" fill="rgb(230,176,45)" rx="2" ry="2" />
<text  x="939.56" y="95.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:243 (8 samples, 0.06%)</title><rect x="219.4" y="341" width="0.7" height="15.0" fill="rgb(220,135,14)" rx="2" ry="2" />
<text  x="222.44" y="351.5" ></text>
</g>
<g >
<title>AllocatorWithStackMemory&lt;Allocator&lt;true, true&gt;, 64ul, 1ul&gt;::realloc(void*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:97 (4 samples, 0.03%)</title><rect x="810.2" y="293" width="0.3" height="15.0" fill="rgb(215,75,48)" rx="2" ry="2" />
<text  x="813.21" y="303.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:477 (6 samples, 0.04%)</title><rect x="1073.8" y="69" width="0.5" height="15.0" fill="rgb(253,81,23)" rx="2" ry="2" />
<text  x="1076.81" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:413 (4 samples, 0.03%)</title><rect x="268.5" y="277" width="0.3" height="15.0" fill="rgb(246,103,39)" rx="2" ry="2" />
<text  x="271.52" y="287.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:362 (4 samples, 0.03%)</title><rect x="221.3" y="341" width="0.3" height="15.0" fill="rgb(217,92,43)" rx="2" ry="2" />
<text  x="224.32" y="351.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (67 samples, 0.47%)</title><rect x="174.4" y="325" width="5.5" height="15.0" fill="rgb(229,74,5)" rx="2" ry="2" />
<text  x="177.37" y="335.5" ></text>
</g>
<g >
<title>ThreadPoolImpl&lt;std::thread&gt;::worker(std::_List_iterator&lt;std::thread&gt;)#/usr/include/c++/9/bits/atomic_base.h:551 (14,234 samples, 98.84%)</title><rect x="22.5" y="437" width="1166.3" height="15.0" fill="rgb(206,52,47)" rx="2" ry="2" />
<text  x="25.45" y="447.5" >ThreadPoolImpl&lt;std::thread&gt;::worker(std::_List_iterator&lt;std::thread&gt;)#/usr/include/c++/9/bits/atomic_base.h:551</text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::generate()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:62 (4 samples, 0.03%)</title><rect x="1189.3" y="309" width="0.4" height="15.0" fill="rgb(250,53,8)" rx="2" ry="2" />
<text  x="1192.34" y="319.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (4 samples, 0.03%)</title><rect x="1179.8" y="69" width="0.4" height="15.0" fill="rgb(206,34,41)" rx="2" ry="2" />
<text  x="1182.84" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:470 (7 samples, 0.05%)</title><rect x="675.4" y="325" width="0.6" height="15.0" fill="rgb(248,67,16)" rx="2" ry="2" />
<text  x="678.42" y="335.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:144 (2 samples, 0.01%)</title><rect x="954.6" y="165" width="0.2" height="15.0" fill="rgb(240,5,39)" rx="2" ry="2" />
<text  x="957.59" y="175.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (21 samples, 0.15%)</title><rect x="23.0" y="325" width="1.7" height="15.0" fill="rgb(224,86,29)" rx="2" ry="2" />
<text  x="26.03" y="335.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/sz.h:199 (9 samples, 0.06%)</title><rect x="803.2" y="277" width="0.8" height="15.0" fill="rgb(226,39,14)" rx="2" ry="2" />
<text  x="806.25" y="287.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/TwoLevelStringHashTable.h:136 (2 samples, 0.01%)</title><rect x="710.2" y="341" width="0.2" height="15.0" fill="rgb(208,67,20)" rx="2" ry="2" />
<text  x="713.25" y="351.5" ></text>
</g>
<g >
<title>DB::Aggregator::executeOnBlock(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;, unsigned long, DB::AggregatedDataVariants&amp;, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, std::vector&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;, std::allocator&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt; &gt; &gt;&amp;, bool&amp;)#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98 (4 samples, 0.03%)</title><rect x="375.7" y="373" width="0.3" height="15.0" fill="rgb(251,165,50)" rx="2" ry="2" />
<text  x="378.69" y="383.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:454 (3 samples, 0.02%)</title><rect x="269.5" y="277" width="0.2" height="15.0" fill="rgb(217,171,52)" rx="2" ry="2" />
<text  x="272.50" y="287.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1316 (3 samples, 0.02%)</title><rect x="242.6" y="357" width="0.3" height="15.0" fill="rgb(244,46,17)" rx="2" ry="2" />
<text  x="245.62" y="367.5" ></text>
</g>
<g >
<title>extent_record#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1700 (2 samples, 0.01%)</title><rect x="902.1" y="261" width="0.2" height="15.0" fill="rgb(247,52,21)" rx="2" ry="2" />
<text  x="905.15" y="271.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:80 (15 samples, 0.10%)</title><rect x="392.5" y="325" width="1.2" height="15.0" fill="rgb(230,97,20)" rx="2" ry="2" />
<text  x="395.49" y="335.5" ></text>
</g>
<g >
<title>arena_tcache_fill_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1307 (16 samples, 0.11%)</title><rect x="806.0" y="229" width="1.3" height="15.0" fill="rgb(247,73,9)" rx="2" ry="2" />
<text  x="809.03" y="239.5" ></text>
</g>
<g >
<title>extents_remove_locked.isra.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:65 (2 samples, 0.01%)</title><rect x="806.0" y="165" width="0.2" height="15.0" fill="rgb(209,212,24)" rx="2" ry="2" />
<text  x="809.03" y="175.5" ></text>
</g>
<g >
<title>tcache_bin_flush_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:121 (2 samples, 0.01%)</title><rect x="177.1" y="277" width="0.1" height="15.0" fill="rgb(221,192,39)" rx="2" ry="2" />
<text  x="180.07" y="287.5" ></text>
</g>
<g >
<title>StackTrace::StackTrace(ucontext_t const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/StackTrace.cpp:198 (106 samples, 0.74%)</title><rect x="10.0" y="453" width="8.7" height="15.0" fill="rgb(222,226,52)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:90 (11 samples, 0.08%)</title><rect x="394.9" y="325" width="0.9" height="15.0" fill="rgb(227,25,40)" rx="2" ry="2" />
<text  x="397.87" y="335.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:431 (2 samples, 0.01%)</title><rect x="376.5" y="325" width="0.2" height="15.0" fill="rgb(231,174,31)" rx="2" ry="2" />
<text  x="379.51" y="335.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:228 (2 samples, 0.01%)</title><rect x="955.2" y="165" width="0.1" height="15.0" fill="rgb(215,125,26)" rx="2" ry="2" />
<text  x="958.16" y="175.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt;::insertResultInto(char const*, DB::IColumn&amp;) const#/usr/include/c++/9/new:174 (5 samples, 0.03%)</title><rect x="255.8" y="293" width="0.4" height="15.0" fill="rgb(240,52,12)" rx="2" ry="2" />
<text  x="258.82" y="303.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:111 (18 samples, 0.12%)</title><rect x="800.5" y="309" width="1.4" height="15.0" fill="rgb(218,116,34)" rx="2" ry="2" />
<text  x="803.46" y="319.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71 (44 samples, 0.31%)</title><rect x="104.5" y="325" width="3.6" height="15.0" fill="rgb(235,126,53)" rx="2" ry="2" />
<text  x="107.48" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:448 (2 samples, 0.01%)</title><rect x="923.3" y="101" width="0.2" height="15.0" fill="rgb(244,0,23)" rx="2" ry="2" />
<text  x="926.29" y="111.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::size() const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:341 (57 samples, 0.40%)</title><rect x="250.8" y="277" width="4.7" height="15.0" fill="rgb(220,218,21)" rx="2" ry="2" />
<text  x="253.82" y="287.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:561 (2 samples, 0.01%)</title><rect x="1177.6" y="85" width="0.2" height="15.0" fill="rgb(225,165,54)" rx="2" ry="2" />
<text  x="1180.63" y="95.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:189 (13 samples, 0.09%)</title><rect x="975.0" y="181" width="1.1" height="15.0" fill="rgb(248,80,42)" rx="2" ry="2" />
<text  x="977.99" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Arena.h:283 (24 samples, 0.17%)</title><rect x="378.3" y="341" width="2.0" height="15.0" fill="rgb(242,183,22)" rx="2" ry="2" />
<text  x="381.31" y="351.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::rehash()#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:116 (3 samples, 0.02%)</title><rect x="220.9" y="325" width="0.3" height="15.0" fill="rgb(207,106,48)" rx="2" ry="2" />
<text  x="223.91" y="335.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:191 (2 samples, 0.01%)</title><rect x="810.5" y="277" width="0.2" height="15.0" fill="rgb(227,173,40)" rx="2" ry="2" />
<text  x="813.54" y="287.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:305 (2 samples, 0.01%)</title><rect x="1176.6" y="101" width="0.1" height="15.0" fill="rgb(213,125,15)" rx="2" ry="2" />
<text  x="1179.56" y="111.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::readData(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, DB::IDataType const&amp;, DB::IColumn&amp;, unsigned long, bool, unsigned long, bool)#/usr/include/c++/9/bits/basic_string.h:2855 (3 samples, 0.02%)</title><rect x="931.0" y="197" width="0.2" height="15.0" fill="rgb(251,208,32)" rx="2" ry="2" />
<text  x="933.99" y="207.5" ></text>
</g>
<g >
<title>void DB::Aggregator::destroyImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:2251 (482 samples, 3.35%)</title><rect x="335.3" y="309" width="39.5" height="15.0" fill="rgb(237,222,12)" rx="2" ry="2" />
<text  x="338.30" y="319.5" >voi..</text>
</g>
<g >
<title>#/lib/x86_64-linux-gnu/libpthread-2.27.so (106 samples, 0.74%)</title><rect x="10.0" y="485" width="8.7" height="15.0" fill="rgb(246,35,13)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>void DB::Aggregator::convertToBlockImplFinal&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:519 (3 samples, 0.02%)</title><rect x="244.0" y="309" width="0.3" height="15.0" fill="rgb(239,90,15)" rx="2" ry="2" />
<text  x="247.02" y="319.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (19 samples, 0.13%)</title><rect x="469.3" y="245" width="1.6" height="15.0" fill="rgb(251,73,46)" rx="2" ry="2" />
<text  x="472.35" y="255.5" ></text>
</g>
<g >
<title>__read#/lib/x86_64-linux-gnu/libpthread-2.27.so (3 samples, 0.02%)</title><rect x="1176.8" y="85" width="0.3" height="15.0" fill="rgb(222,90,47)" rx="2" ry="2" />
<text  x="1179.81" y="95.5" ></text>
</g>
<g >
<title>DB::Arena::alloc(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Arena.h:149 (2 samples, 0.01%)</title><rect x="909.1" y="325" width="0.2" height="15.0" fill="rgb(245,44,17)" rx="2" ry="2" />
<text  x="912.11" y="335.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:161 (2 samples, 0.01%)</title><rect x="1039.1" y="101" width="0.1" height="15.0" fill="rgb(227,101,29)" rx="2" ry="2" />
<text  x="1042.07" y="111.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:96 (4 samples, 0.03%)</title><rect x="959.5" y="165" width="0.3" height="15.0" fill="rgb(212,181,8)" rx="2" ry="2" />
<text  x="962.51" y="175.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:231 (19 samples, 0.13%)</title><rect x="866.5" y="309" width="1.6" height="15.0" fill="rgb(235,185,43)" rx="2" ry="2" />
<text  x="869.51" y="319.5" ></text>
</g>
<g >
<title>arena_dalloc_bin_junked_locked#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1585 (2 samples, 0.01%)</title><rect x="341.1" y="245" width="0.2" height="15.0" fill="rgb(218,172,43)" rx="2" ry="2" />
<text  x="344.11" y="255.5" ></text>
</g>
<g >
<title>extent_try_coalesce_impl#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1594 (2 samples, 0.01%)</title><rect x="336.4" y="181" width="0.2" height="15.0" fill="rgb(211,170,5)" rx="2" ry="2" />
<text  x="339.44" y="191.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:179 (3 samples, 0.02%)</title><rect x="156.5" y="325" width="0.3" height="15.0" fill="rgb(221,62,23)" rx="2" ry="2" />
<text  x="159.51" y="335.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (2 samples, 0.01%)</title><rect x="93.4" y="277" width="0.2" height="15.0" fill="rgb(251,154,51)" rx="2" ry="2" />
<text  x="96.41" y="287.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2466 (4 samples, 0.03%)</title><rect x="1007.0" y="181" width="0.4" height="15.0" fill="rgb(245,115,43)" rx="2" ry="2" />
<text  x="1010.03" y="191.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .constprop.0]#/usr/include/c++/9/bits/basic_string.h:179 (2 samples, 0.01%)</title><rect x="943.6" y="149" width="0.2" height="15.0" fill="rgb(253,212,4)" rx="2" ry="2" />
<text  x="946.61" y="159.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (3 samples, 0.02%)</title><rect x="263.6" y="213" width="0.2" height="15.0" fill="rgb(217,213,13)" rx="2" ry="2" />
<text  x="266.60" y="223.5" ></text>
</g>
<g >
<title>extent_split_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:2066 (2 samples, 0.01%)</title><rect x="459.4" y="181" width="0.2" height="15.0" fill="rgb(220,210,26)" rx="2" ry="2" />
<text  x="462.43" y="191.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:274 (7 samples, 0.05%)</title><rect x="220.7" y="341" width="0.6" height="15.0" fill="rgb(240,128,53)" rx="2" ry="2" />
<text  x="223.75" y="351.5" ></text>
</g>
<g >
<title>DB::FunctionComparison&lt;DB::NotEqualsOp, DB::NameNotEquals&gt;::executeImpl(DB::Block&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, unsigned long, unsigned long)#/usr/lib/debug/usr/bin/clickhouse (76 samples, 0.53%)</title><rect x="945.5" y="165" width="6.2" height="15.0" fill="rgb(230,196,35)" rx="2" ry="2" />
<text  x="948.49" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_emplace_unique&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned long&amp;&amp;)#/usr/include/c++/9/bits/stl_pair.h:342 (2 samples, 0.01%)</title><rect x="943.6" y="165" width="0.2" height="15.0" fill="rgb(212,13,4)" rx="2" ry="2" />
<text  x="946.61" y="175.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (49 samples, 0.34%)</title><rect x="175.8" y="309" width="4.1" height="15.0" fill="rgb(214,66,49)" rx="2" ry="2" />
<text  x="178.84" y="319.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:196 (8 samples, 0.06%)</title><rect x="183.3" y="341" width="0.7" height="15.0" fill="rgb(231,87,14)" rx="2" ry="2" />
<text  x="186.30" y="351.5" ></text>
</g>
<g >
<title>arena_ralloc_no_move#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:55 (20 samples, 0.14%)</title><rect x="177.5" y="277" width="1.6" height="15.0" fill="rgb(242,210,6)" rx="2" ry="2" />
<text  x="180.48" y="287.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/rtree.h:337 (2 samples, 0.01%)</title><rect x="803.1" y="277" width="0.1" height="15.0" fill="rgb(226,55,21)" rx="2" ry="2" />
<text  x="806.09" y="287.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:221 (4 samples, 0.03%)</title><rect x="457.4" y="325" width="0.3" height="15.0" fill="rgb(220,35,54)" rx="2" ry="2" />
<text  x="460.39" y="335.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (8 samples, 0.06%)</title><rect x="100.5" y="261" width="0.6" height="15.0" fill="rgb(227,63,37)" rx="2" ry="2" />
<text  x="103.46" y="271.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:193 (11 samples, 0.08%)</title><rect x="982.3" y="181" width="0.9" height="15.0" fill="rgb(232,20,33)" rx="2" ry="2" />
<text  x="985.29" y="191.5" ></text>
</g>
<g >
<title>DB::Block::cloneWithoutColumns() const#/usr/include/c++/9/bits/basic_string.h:222 (6 samples, 0.04%)</title><rect x="945.0" y="165" width="0.5" height="15.0" fill="rgb(219,18,32)" rx="2" ry="2" />
<text  x="948.00" y="175.5" ></text>
</g>
<g >
<title>DB::ExpressionBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.h:90 (11 samples, 0.08%)</title><rect x="23.1" y="213" width="0.9" height="15.0" fill="rgb(235,111,37)" rx="2" ry="2" />
<text  x="26.11" y="223.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:124 (711 samples, 4.94%)</title><rect x="388.1" y="341" width="58.3" height="15.0" fill="rgb(216,196,35)" rx="2" ry="2" />
<text  x="391.15" y="351.5" >void D..</text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::create(char*) const#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71 (2 samples, 0.01%)</title><rect x="776.0" y="309" width="0.2" height="15.0" fill="rgb(217,87,51)" rx="2" ry="2" />
<text  x="779.05" y="319.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (2 samples, 0.01%)</title><rect x="175.9" y="277" width="0.2" height="15.0" fill="rgb(253,214,27)" rx="2" ry="2" />
<text  x="178.93" y="287.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:101 (5 samples, 0.03%)</title><rect x="389.5" y="325" width="0.5" height="15.0" fill="rgb(235,138,4)" rx="2" ry="2" />
<text  x="392.54" y="335.5" ></text>
</g>
<g >
<title>__libc_calloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:62 (7 samples, 0.05%)</title><rect x="810.8" y="261" width="0.6" height="15.0" fill="rgb(238,95,45)" rx="2" ry="2" />
<text  x="813.79" y="271.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:339 (12 samples, 0.08%)</title><rect x="175.8" y="293" width="1.0" height="15.0" fill="rgb(235,46,12)" rx="2" ry="2" />
<text  x="178.84" y="303.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:237 (5 samples, 0.03%)</title><rect x="922.4" y="101" width="0.4" height="15.0" fill="rgb(212,156,3)" rx="2" ry="2" />
<text  x="925.39" y="111.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:201 (7 samples, 0.05%)</title><rect x="185.7" y="341" width="0.6" height="15.0" fill="rgb(236,68,0)" rx="2" ry="2" />
<text  x="188.68" y="351.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:215 (3 samples, 0.02%)</title><rect x="1008.4" y="149" width="0.3" height="15.0" fill="rgb(213,133,16)" rx="2" ry="2" />
<text  x="1011.42" y="159.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:332 (12 samples, 0.08%)</title><rect x="872.7" y="309" width="0.9" height="15.0" fill="rgb(247,211,52)" rx="2" ry="2" />
<text  x="875.65" y="319.5" ></text>
</g>
<g >
<title>extent_split_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:2066 (2 samples, 0.01%)</title><rect x="811.1" y="149" width="0.2" height="15.0" fill="rgb(221,193,10)" rx="2" ry="2" />
<text  x="814.12" y="159.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:135 (3 samples, 0.02%)</title><rect x="1141.7" y="149" width="0.3" height="15.0" fill="rgb(239,9,38)" rx="2" ry="2" />
<text  x="1144.74" y="159.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71 (9 samples, 0.06%)</title><rect x="179.9" y="325" width="0.7" height="15.0" fill="rgb(209,214,38)" rx="2" ry="2" />
<text  x="182.86" y="335.5" ></text>
</g>
<g >
<title>arena_decay#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:904 (2 samples, 0.01%)</title><rect x="177.1" y="261" width="0.1" height="15.0" fill="rgb(251,195,50)" rx="2" ry="2" />
<text  x="180.07" y="271.5" ></text>
</g>
<g >
<title>DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::thread(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp:109 (6,562 samples, 45.57%)</title><rect x="375.6" y="405" width="537.7" height="15.0" fill="rgb(211,115,14)" rx="2" ry="2" />
<text  x="378.61" y="415.5" >DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Hand..</text>
</g>
<g >
<title>large_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:112 (11 samples, 0.08%)</title><rect x="1187.5" y="357" width="0.9" height="15.0" fill="rgb(247,78,51)" rx="2" ry="2" />
<text  x="1190.54" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const#/usr/include/c++/9/bits/basic_string.h:2313 (2 samples, 0.01%)</title><rect x="1007.9" y="197" width="0.2" height="15.0" fill="rgb(217,36,23)" rx="2" ry="2" />
<text  x="1010.93" y="207.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (2 samples, 0.01%)</title><rect x="1137.8" y="117" width="0.2" height="15.0" fill="rgb(243,63,52)" rx="2" ry="2" />
<text  x="1140.81" y="127.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:377 (20 samples, 0.14%)</title><rect x="230.3" y="341" width="1.7" height="15.0" fill="rgb(217,2,32)" rx="2" ry="2" />
<text  x="233.33" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:438 (2 samples, 0.01%)</title><rect x="1125.8" y="69" width="0.2" height="15.0" fill="rgb(232,127,38)" rx="2" ry="2" />
<text  x="1128.84" y="79.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:179 (6 samples, 0.04%)</title><rect x="177.0" y="293" width="0.5" height="15.0" fill="rgb(213,29,29)" rx="2" ry="2" />
<text  x="179.99" y="303.5" ></text>
</g>
<g >
<title>extent_try_coalesce_impl#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:165 (2 samples, 0.01%)</title><rect x="1007.4" y="117" width="0.1" height="15.0" fill="rgb(248,88,31)" rx="2" ry="2" />
<text  x="1010.36" y="127.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::generate()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBlockReadUtils.h:56 (2 samples, 0.01%)</title><rect x="1186.6" y="293" width="0.1" height="15.0" fill="rgb(233,158,48)" rx="2" ry="2" />
<text  x="1189.56" y="303.5" ></text>
</g>
<g >
<title>DB::PartialSortingBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/PartialSortingBlockInputStream.cpp:15 (9 samples, 0.06%)</title><rect x="24.0" y="245" width="0.7" height="15.0" fill="rgb(234,226,18)" rx="2" ry="2" />
<text  x="27.01" y="255.5" ></text>
</g>
<g >
<title>large_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:55 (2 samples, 0.01%)</title><rect x="902.4" y="293" width="0.2" height="15.0" fill="rgb(215,225,39)" rx="2" ry="2" />
<text  x="905.39" y="303.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:254 (2 samples, 0.01%)</title><rect x="1069.1" y="69" width="0.2" height="15.0" fill="rgb(239,35,17)" rx="2" ry="2" />
<text  x="1072.14" y="79.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::create(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:96 (3 samples, 0.02%)</title><rect x="775.8" y="309" width="0.2" height="15.0" fill="rgb(231,170,21)" rx="2" ry="2" />
<text  x="778.80" y="319.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:167 (6 samples, 0.04%)</title><rect x="916.7" y="133" width="0.5" height="15.0" fill="rgb(220,149,1)" rx="2" ry="2" />
<text  x="919.73" y="143.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ColumnsHashing.h:85 (4 samples, 0.03%)</title><rect x="380.3" y="341" width="0.3" height="15.0" fill="rgb(237,166,2)" rx="2" ry="2" />
<text  x="383.28" y="351.5" ></text>
</g>
<g >
<title>DB::ExpressionAction::execute(DB::Block&amp;, bool) const#/usr/include/c++/9/bits/stl_vector.h:677 (91 samples, 0.63%)</title><rect x="944.3" y="197" width="7.5" height="15.0" fill="rgb(220,87,32)" rx="2" ry="2" />
<text  x="947.35" y="207.5" ></text>
</g>
<g >
<title>__libc_calloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:94 (12 samples, 0.08%)</title><rect x="911.4" y="325" width="1.0" height="15.0" fill="rgb(209,66,19)" rx="2" ry="2" />
<text  x="914.41" y="335.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionCount::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionCount.h:61 (9 samples, 0.06%)</title><rect x="245.9" y="293" width="0.7" height="15.0" fill="rgb(215,59,37)" rx="2" ry="2" />
<text  x="248.90" y="303.5" ></text>
</g>
<g >
<title>pages_purge_forced#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/pages.c:344 (2 samples, 0.01%)</title><rect x="177.1" y="197" width="0.1" height="15.0" fill="rgb(222,183,6)" rx="2" ry="2" />
<text  x="180.07" y="207.5" ></text>
</g>
<g >
<title>CRC32Hash::operator()(StringRef) const [clone .isra.0]#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:242 (3 samples, 0.02%)</title><rect x="714.1" y="325" width="0.2" height="15.0" fill="rgb(230,42,34)" rx="2" ry="2" />
<text  x="717.10" y="335.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (4 samples, 0.03%)</title><rect x="179.5" y="277" width="0.4" height="15.0" fill="rgb(230,188,18)" rx="2" ry="2" />
<text  x="182.53" y="287.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&amp;)#/usr/include/c++/9/bits/stl_vector.h:1496 (2 samples, 0.01%)</title><rect x="1007.9" y="229" width="0.2" height="15.0" fill="rgb(210,100,19)" rx="2" ry="2" />
<text  x="1010.93" y="239.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (11 samples, 0.08%)</title><rect x="23.1" y="229" width="0.9" height="15.0" fill="rgb(233,77,44)" rx="2" ry="2" />
<text  x="26.11" y="239.5" ></text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:383 (2 samples, 0.01%)</title><rect x="983.4" y="101" width="0.1" height="15.0" fill="rgb(246,149,36)" rx="2" ry="2" />
<text  x="986.35" y="111.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (2 samples, 0.01%)</title><rect x="1137.8" y="53" width="0.2" height="15.0" fill="rgb(207,205,2)" rx="2" ry="2" />
<text  x="1140.81" y="63.5" ></text>
</g>
<g >
<title>arena_decay#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:904 (31 samples, 0.22%)</title><rect x="336.4" y="245" width="2.5" height="15.0" fill="rgb(246,146,13)" rx="2" ry="2" />
<text  x="339.36" y="255.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:431 (95 samples, 0.66%)</title><rect x="100.3" y="341" width="7.8" height="15.0" fill="rgb(224,203,32)" rx="2" ry="2" />
<text  x="103.30" y="351.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:111 (2 samples, 0.01%)</title><rect x="802.9" y="293" width="0.2" height="15.0" fill="rgb(237,226,22)" rx="2" ry="2" />
<text  x="805.92" y="303.5" ></text>
</g>
<g >
<title>void DB::Aggregator::destroyImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:2252 (8 samples, 0.06%)</title><rect x="374.8" y="309" width="0.6" height="15.0" fill="rgb(234,134,26)" rx="2" ry="2" />
<text  x="377.79" y="319.5" ></text>
</g>
<g >
<title>HashTable&lt;DB::UInt128, StringHashMapCell&lt;DB::UInt128, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:432 (2 samples, 0.01%)</title><rect x="449.4" y="325" width="0.1" height="15.0" fill="rgb(207,137,13)" rx="2" ry="2" />
<text  x="452.36" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock#/lib/x86_64-linux-gnu/libpthread-2.27.so (2 samples, 0.01%)</title><rect x="1187.7" y="277" width="0.2" height="15.0" fill="rgb(218,159,19)" rx="2" ry="2" />
<text  x="1190.71" y="287.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (143 samples, 0.99%)</title><rect x="459.2" y="309" width="11.7" height="15.0" fill="rgb(227,85,8)" rx="2" ry="2" />
<text  x="462.19" y="319.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (3,340 samples, 23.19%)</title><rect x="913.5" y="389" width="273.7" height="15.0" fill="rgb(228,167,44)" rx="2" ry="2" />
<text  x="916.54" y="399.5" >DB::IBlockInputStream::read()#/usr/i..</text>
</g>
<g >
<title>__libc_calloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:94 (5 samples, 0.03%)</title><rect x="181.3" y="293" width="0.4" height="15.0" fill="rgb(208,11,53)" rx="2" ry="2" />
<text  x="184.25" y="303.5" ></text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1075 (2 samples, 0.01%)</title><rect x="459.4" y="213" width="0.2" height="15.0" fill="rgb(218,17,24)" rx="2" ry="2" />
<text  x="462.43" y="223.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:213 (2 samples, 0.01%)</title><rect x="821.0" y="309" width="0.2" height="15.0" fill="rgb(231,97,54)" rx="2" ry="2" />
<text  x="824.03" y="319.5" ></text>
</g>
<g >
<title>arena_decay_to_limit#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:820 (26 samples, 0.18%)</title><rect x="336.8" y="213" width="2.1" height="15.0" fill="rgb(210,117,26)" rx="2" ry="2" />
<text  x="339.77" y="223.5" ></text>
</g>
<g >
<title>DB::Aggregator::createAggregateStates(char*&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:374 (3 samples, 0.02%)</title><rect x="776.8" y="325" width="0.2" height="15.0" fill="rgb(229,2,24)" rx="2" ry="2" />
<text  x="779.78" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:486 (19 samples, 0.13%)</title><rect x="1106.8" y="69" width="1.6" height="15.0" fill="rgb(209,50,21)" rx="2" ry="2" />
<text  x="1109.83" y="79.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:194 (2 samples, 0.01%)</title><rect x="983.2" y="181" width="0.2" height="15.0" fill="rgb(253,182,11)" rx="2" ry="2" />
<text  x="986.19" y="191.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::seek(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:63 (7 samples, 0.05%)</title><rect x="930.3" y="133" width="0.5" height="15.0" fill="rgb(212,178,34)" rx="2" ry="2" />
<text  x="933.25" y="143.5" ></text>
</g>
<g >
<title>DB::MergeTreeReadTask::~MergeTreeReadTask()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBlockReadUtils.h:29 (2 samples, 0.01%)</title><rect x="915.6" y="261" width="0.2" height="15.0" fill="rgb(251,152,37)" rx="2" ry="2" />
<text  x="918.59" y="271.5" ></text>
</g>
<g >
<title>DB::ColumnString::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:138 (667 samples, 4.63%)</title><rect x="952.3" y="197" width="54.6" height="15.0" fill="rgb(253,130,7)" rx="2" ry="2" />
<text  x="955.30" y="207.5" >DB::C..</text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (2 samples, 0.01%)</title><rect x="1008.7" y="133" width="0.1" height="15.0" fill="rgb(237,214,31)" rx="2" ry="2" />
<text  x="1011.67" y="143.5" ></text>
</g>
<g >
<title>void DB::PODArrayBase&lt;8ul, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;::reserve&lt;&gt;(unsigned long) [clone .part.0]#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:105 (3 samples, 0.02%)</title><rect x="930.0" y="165" width="0.3" height="15.0" fill="rgb(227,89,8)" rx="2" ry="2" />
<text  x="933.01" y="175.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (2 samples, 0.01%)</title><rect x="1137.8" y="85" width="0.2" height="15.0" fill="rgb(207,128,19)" rx="2" ry="2" />
<text  x="1140.81" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const#/usr/include/c++/9/bits/basic_string.h:2313 (2 samples, 0.01%)</title><rect x="1185.9" y="229" width="0.2" height="15.0" fill="rgb(214,135,3)" rx="2" ry="2" />
<text  x="1188.90" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;DB::ReadBuffer* (std::vector&lt;DB::IDataType::Substream, std::allocator&lt;DB::IDataType::Substream&gt; &gt; const&amp;), DB::MergeTreeReader::readData(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, DB::IDataType const&amp;, DB::IColumn&amp;, unsigned long, bool, unsigned long, bool)::{lambda(bool)#1}::operator()(bool) const::{lambda(std::vector&lt;DB::IDataType::Substream, std::allocator&lt;DB::IDataType::Substream&gt; &gt; const&amp;)#1}&gt;::_M_invoke(std::_Any_data const&amp;, std::vector&lt;DB::IDataType::Substream, std::allocator&lt;DB::IDataType::Substream&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:238 (8 samples, 0.06%)</title><rect x="930.3" y="165" width="0.6" height="15.0" fill="rgb(232,169,47)" rx="2" ry="2" />
<text  x="933.25" y="175.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:554 (15 samples, 0.10%)</title><rect x="1178.9" y="85" width="1.3" height="15.0" fill="rgb(246,207,6)" rx="2" ry="2" />
<text  x="1181.94" y="95.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:43 (27 samples, 0.19%)</title><rect x="916.3" y="149" width="2.2" height="15.0" fill="rgb(242,43,6)" rx="2" ry="2" />
<text  x="919.32" y="159.5" ></text>
</g>
<g >
<title>Poco::Event::wait()#/usr/include/c++/9/bits/atomic_base.h:419 (7 samples, 0.05%)</title><rect x="23.4" y="133" width="0.6" height="15.0" fill="rgb(238,208,13)" rx="2" ry="2" />
<text  x="26.44" y="143.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt;::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:377 (59 samples, 0.41%)</title><rect x="250.7" y="293" width="4.9" height="15.0" fill="rgb(252,121,45)" rx="2" ry="2" />
<text  x="253.74" y="303.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:612 (4 samples, 0.03%)</title><rect x="987.7" y="165" width="0.3" height="15.0" fill="rgb(253,132,29)" rx="2" ry="2" />
<text  x="990.69" y="175.5" ></text>
</g>
<g >
<title>base_alloc_extent#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:232 (2 samples, 0.01%)</title><rect x="459.4" y="165" width="0.2" height="15.0" fill="rgb(240,161,49)" rx="2" ry="2" />
<text  x="462.43" y="175.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:337 (18 samples, 0.12%)</title><rect x="873.6" y="309" width="1.5" height="15.0" fill="rgb(227,45,26)" rx="2" ry="2" />
<text  x="876.63" y="319.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:111 (40 samples, 0.28%)</title><rect x="161.9" y="341" width="3.3" height="15.0" fill="rgb(224,113,51)" rx="2" ry="2" />
<text  x="164.91" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/StringHashTable.h:72 (12 samples, 0.08%)</title><rect x="709.0" y="341" width="1.0" height="15.0" fill="rgb(230,206,10)" rx="2" ry="2" />
<text  x="712.02" y="351.5" ></text>
</g>
<g >
<title>DB::ISource::prepare()#/build/obj-x86_64-linux-gnu/../dbms/src/Processors/ISource.cpp:14 (2 samples, 0.01%)</title><rect x="914.8" y="309" width="0.1" height="15.0" fill="rgb(241,228,31)" rx="2" ry="2" />
<text  x="917.77" y="319.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (2 samples, 0.01%)</title><rect x="179.5" y="261" width="0.2" height="15.0" fill="rgb(223,222,23)" rx="2" ry="2" />
<text  x="182.53" y="271.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:484 (5 samples, 0.03%)</title><rect x="1075.0" y="69" width="0.4" height="15.0" fill="rgb(228,155,54)" rx="2" ry="2" />
<text  x="1078.04" y="79.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:270 (8 samples, 0.06%)</title><rect x="870.0" y="309" width="0.7" height="15.0" fill="rgb(246,141,44)" rx="2" ry="2" />
<text  x="873.03" y="319.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:561 (119 samples, 0.83%)</title><rect x="1127.9" y="85" width="9.7" height="15.0" fill="rgb(215,94,33)" rx="2" ry="2" />
<text  x="1130.89" y="95.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (9 samples, 0.06%)</title><rect x="928.5" y="149" width="0.8" height="15.0" fill="rgb(225,53,12)" rx="2" ry="2" />
<text  x="931.53" y="159.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:260 (2 samples, 0.01%)</title><rect x="955.7" y="165" width="0.2" height="15.0" fill="rgb(206,58,42)" rx="2" ry="2" />
<text  x="958.74" y="175.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:90 (3 samples, 0.02%)</title><rect x="27.6" y="341" width="0.3" height="15.0" fill="rgb(237,34,5)" rx="2" ry="2" />
<text  x="30.62" y="351.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (3 samples, 0.02%)</title><rect x="460.3" y="213" width="0.2" height="15.0" fill="rgb(233,141,50)" rx="2" ry="2" />
<text  x="463.25" y="223.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:109 (4 samples, 0.03%)</title><rect x="161.6" y="341" width="0.3" height="15.0" fill="rgb(252,48,7)" rx="2" ry="2" />
<text  x="164.59" y="351.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:471 (4 samples, 0.03%)</title><rect x="485.8" y="325" width="0.3" height="15.0" fill="rgb(230,163,14)" rx="2" ry="2" />
<text  x="488.82" y="335.5" ></text>
</g>
<g >
<title>__read#/lib/x86_64-linux-gnu/libpthread-2.27.so (19 samples, 0.13%)</title><rect x="918.6" y="117" width="1.6" height="15.0" fill="rgb(246,113,53)" rx="2" ry="2" />
<text  x="921.62" y="127.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (138 samples, 0.96%)</title><rect x="459.6" y="277" width="11.3" height="15.0" fill="rgb(244,51,25)" rx="2" ry="2" />
<text  x="462.60" y="287.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::decompress(char*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:168 (9 samples, 0.06%)</title><rect x="1177.1" y="117" width="0.7" height="15.0" fill="rgb(247,107,46)" rx="2" ry="2" />
<text  x="1180.05" y="127.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:483 (9 samples, 0.06%)</title><rect x="1105.8" y="69" width="0.7" height="15.0" fill="rgb(233,50,50)" rx="2" ry="2" />
<text  x="1108.77" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;2&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:121 (3 samples, 0.02%)</title><rect x="1178.3" y="149" width="0.2" height="15.0" fill="rgb(226,223,34)" rx="2" ry="2" />
<text  x="1181.28" y="159.5" ></text>
</g>
<g >
<title>DB::ReadBufferFromFileDescriptor::nextImpl()#/usr/include/x86_64-linux-gnu/bits/unistd.h:44 (3 samples, 0.02%)</title><rect x="1176.8" y="101" width="0.3" height="15.0" fill="rgb(209,218,39)" rx="2" ry="2" />
<text  x="1179.81" y="111.5" ></text>
</g>
<g >
<title>DB::ParallelAggregatingBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp:100 (4 samples, 0.03%)</title><rect x="23.1" y="181" width="0.3" height="15.0" fill="rgb(249,210,16)" rx="2" ry="2" />
<text  x="26.11" y="191.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:235 (46 samples, 0.32%)</title><rect x="1062.1" y="69" width="3.8" height="15.0" fill="rgb(251,114,36)" rx="2" ry="2" />
<text  x="1065.09" y="79.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:111 (3 samples, 0.02%)</title><rect x="25.1" y="341" width="0.2" height="15.0" fill="rgb(251,199,54)" rx="2" ry="2" />
<text  x="28.08" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:484 (244 samples, 1.69%)</title><rect x="757.0" y="341" width="20.0" height="15.0" fill="rgb(229,99,23)" rx="2" ry="2" />
<text  x="760.04" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:406 (7 samples, 0.05%)</title><rect x="927.4" y="101" width="0.6" height="15.0" fill="rgb(207,128,33)" rx="2" ry="2" />
<text  x="930.39" y="111.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (390 samples, 2.71%)</title><rect x="298.9" y="277" width="32.0" height="15.0" fill="rgb(207,165,20)" rx="2" ry="2" />
<text  x="301.92" y="287.5" >me..</text>
</g>
<g >
<title>extents_evict#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:542 (4 samples, 0.03%)</title><rect x="336.4" y="197" width="0.3" height="15.0" fill="rgb(217,222,54)" rx="2" ry="2" />
<text  x="339.36" y="207.5" ></text>
</g>
<g >
<title>DB::ColumnString::insertData(char const*, unsigned long)#/usr/lib/debug/usr/bin/clickhouse (930 samples, 6.46%)</title><rect x="256.2" y="293" width="76.2" height="15.0" fill="rgb(235,15,9)" rx="2" ry="2" />
<text  x="259.23" y="303.5" >DB::Colu..</text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (68 samples, 0.47%)</title><rect x="803.1" y="293" width="5.6" height="15.0" fill="rgb(231,92,4)" rx="2" ry="2" />
<text  x="806.09" y="303.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/StringHashTable.h:159 (10 samples, 0.07%)</title><rect x="708.0" y="341" width="0.9" height="15.0" fill="rgb(249,102,25)" rx="2" ry="2" />
<text  x="711.04" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1315 (5 samples, 0.03%)</title><rect x="242.2" y="357" width="0.4" height="15.0" fill="rgb(222,38,10)" rx="2" ry="2" />
<text  x="245.21" y="367.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:484 (4 samples, 0.03%)</title><rect x="1106.5" y="69" width="0.3" height="15.0" fill="rgb(209,174,51)" rx="2" ry="2" />
<text  x="1109.50" y="79.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1287 (2 samples, 0.01%)</title><rect x="27.9" y="341" width="0.2" height="15.0" fill="rgb(245,197,32)" rx="2" ry="2" />
<text  x="30.94" y="351.5" ></text>
</g>
<g >
<title>DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::thread(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long)#/usr/include/c++/9/bits/stl_construct.h:107 (16 samples, 0.11%)</title><rect x="1187.4" y="405" width="1.3" height="15.0" fill="rgb(223,126,47)" rx="2" ry="2" />
<text  x="1190.38" y="415.5" ></text>
</g>
<g >
<title>extent_grow_retained#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1313 (2 samples, 0.01%)</title><rect x="257.9" y="165" width="0.2" height="15.0" fill="rgb(218,105,39)" rx="2" ry="2" />
<text  x="260.95" y="175.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/usr/include/c++/9/bits/stl_vector.h:110 (3 samples, 0.02%)</title><rect x="1189.4" y="261" width="0.3" height="15.0" fill="rgb(210,51,52)" rx="2" ry="2" />
<text  x="1192.43" y="271.5" ></text>
</g>
<g >
<title>large_palloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (5 samples, 0.03%)</title><rect x="459.8" y="245" width="0.4" height="15.0" fill="rgb(231,165,0)" rx="2" ry="2" />
<text  x="462.76" y="255.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:554 (5 samples, 0.03%)</title><rect x="1174.8" y="85" width="0.5" height="15.0" fill="rgb(211,140,7)" rx="2" ry="2" />
<text  x="1177.84" y="95.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:602 (4 samples, 0.03%)</title><rect x="272.4" y="277" width="0.4" height="15.0" fill="rgb(219,209,41)" rx="2" ry="2" />
<text  x="275.45" y="287.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:329 (6 samples, 0.04%)</title><rect x="265.8" y="277" width="0.5" height="15.0" fill="rgb(235,52,21)" rx="2" ry="2" />
<text  x="268.81" y="287.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:224 (8 samples, 0.06%)</title><rect x="110.4" y="357" width="0.6" height="15.0" fill="rgb(235,125,44)" rx="2" ry="2" />
<text  x="113.37" y="367.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImpl&lt;DB::AggregationMethodStringNoCache&lt;StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;&amp;, DB::Arena*, unsigned long, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, DB::Aggregator::AggregateFunctionInstruction*, bool, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:398 (10 samples, 0.07%)</title><rect x="376.2" y="357" width="0.8" height="15.0" fill="rgb(210,87,13)" rx="2" ry="2" />
<text  x="379.18" y="367.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::destroy(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:103 (10 samples, 0.07%)</title><rect x="373.8" y="293" width="0.8" height="15.0" fill="rgb(251,194,32)" rx="2" ry="2" />
<text  x="376.81" y="303.5" ></text>
</g>
<g >
<title>__libc_calloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:62 (2 samples, 0.01%)</title><rect x="911.2" y="325" width="0.2" height="15.0" fill="rgb(239,160,48)" rx="2" ry="2" />
<text  x="914.24" y="335.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:608 (2 samples, 0.01%)</title><rect x="676.8" y="325" width="0.2" height="15.0" fill="rgb(234,92,0)" rx="2" ry="2" />
<text  x="679.82" y="335.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:561 (15 samples, 0.10%)</title><rect x="927.2" y="117" width="1.3" height="15.0" fill="rgb(243,149,30)" rx="2" ry="2" />
<text  x="930.22" y="127.5" ></text>
</g>
<g >
<title>void DB::Aggregator::destroyImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:526 (2 samples, 0.01%)</title><rect x="335.0" y="309" width="0.1" height="15.0" fill="rgb(232,119,2)" rx="2" ry="2" />
<text  x="337.97" y="319.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/Hash.h:29 (20 samples, 0.14%)</title><rect x="898.4" y="309" width="1.6" height="15.0" fill="rgb(228,146,40)" rx="2" ry="2" />
<text  x="901.38" y="319.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:229 (385 samples, 2.67%)</title><rect x="186.7" y="341" width="31.6" height="15.0" fill="rgb(240,212,30)" rx="2" ry="2" />
<text  x="189.74" y="351.5" >Un..</text>
</g>
<g >
<title>tcache_bin_flush_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/tcache.c:149 (16 samples, 0.11%)</title><rect x="340.0" y="261" width="1.4" height="15.0" fill="rgb(254,184,28)" rx="2" ry="2" />
<text  x="343.05" y="271.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:43 (86 samples, 0.60%)</title><rect x="1038.7" y="117" width="7.1" height="15.0" fill="rgb(236,190,25)" rx="2" ry="2" />
<text  x="1041.74" y="127.5" ></text>
</g>
<g >
<title>DB::ExpressionAction::execute(DB::Block&amp;, bool) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/ExpressionActions.cpp:376 (7 samples, 0.05%)</title><rect x="943.4" y="197" width="0.5" height="15.0" fill="rgb(217,197,50)" rx="2" ry="2" />
<text  x="946.36" y="207.5" ></text>
</g>
<g >
<title>pthread_cond_wait#/lib/x86_64-linux-gnu/libpthread-2.27.so (7 samples, 0.05%)</title><rect x="23.4" y="101" width="0.6" height="15.0" fill="rgb(225,80,3)" rx="2" ry="2" />
<text  x="26.44" y="111.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionHelper&lt;DB::AggregateFunctionCount&gt;::addBatch(unsigned long, char**, unsigned long, DB::IColumn const**, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:173 (132 samples, 0.92%)</title><rect x="779.3" y="325" width="10.8" height="15.0" fill="rgb(236,201,34)" rx="2" ry="2" />
<text  x="782.32" y="335.5" ></text>
</g>
<g >
<title>extent_alloc_mmap#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent_mmap.c:26 (2 samples, 0.01%)</title><rect x="257.9" y="133" width="0.2" height="15.0" fill="rgb(248,221,48)" rx="2" ry="2" />
<text  x="260.95" y="143.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::readFromPartImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:115 (4 samples, 0.03%)</title><rect x="915.8" y="277" width="0.3" height="15.0" fill="rgb(224,94,51)" rx="2" ry="2" />
<text  x="918.75" y="287.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2466 (17 samples, 0.12%)</title><rect x="341.6" y="277" width="1.4" height="15.0" fill="rgb(218,111,30)" rx="2" ry="2" />
<text  x="344.61" y="287.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (25 samples, 0.17%)</title><rect x="296.9" y="277" width="2.0" height="15.0" fill="rgb(242,200,0)" rx="2" ry="2" />
<text  x="299.87" y="287.5" ></text>
</g>
<g >
<title>DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::thread(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long)#/usr/include/c++/9/bits/atomic_base.h:419 (4 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.4" height="15.0" fill="rgb(250,177,25)" rx="2" ry="2" />
<text  x="1192.34" y="431.5" ></text>
</g>
<g >
<title>DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::wait()#/usr/include/c++/9/bits/shared_ptr_base.h:758 (7 samples, 0.05%)</title><rect x="23.4" y="149" width="0.6" height="15.0" fill="rgb(249,226,50)" rx="2" ry="2" />
<text  x="26.44" y="159.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:478 (3 samples, 0.02%)</title><rect x="1104.5" y="69" width="0.2" height="15.0" fill="rgb(227,9,14)" rx="2" ry="2" />
<text  x="1107.46" y="79.5" ></text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:383 (5 samples, 0.03%)</title><rect x="459.8" y="229" width="0.4" height="15.0" fill="rgb(213,37,46)" rx="2" ry="2" />
<text  x="462.76" y="239.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::continueReadingChain(DB::MergeTreeRangeReader::ReadResult&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:219 (189 samples, 1.31%)</title><rect x="916.2" y="245" width="15.5" height="15.0" fill="rgb(206,173,35)" rx="2" ry="2" />
<text  x="919.24" y="255.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:43 (3 samples, 0.02%)</title><rect x="1176.6" y="117" width="0.2" height="15.0" fill="rgb(241,133,9)" rx="2" ry="2" />
<text  x="1179.56" y="127.5" ></text>
</g>
<g >
<title>extent_split_interior.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1021 (5 samples, 0.03%)</title><rect x="936.4" y="101" width="0.4" height="15.0" fill="rgb(253,77,37)" rx="2" ry="2" />
<text  x="939.40" y="111.5" ></text>
</g>
<g >
<title>tcache_bin_flush_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:223 (5 samples, 0.03%)</title><rect x="339.6" y="261" width="0.4" height="15.0" fill="rgb(220,80,5)" rx="2" ry="2" />
<text  x="342.56" y="271.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:270 (5 samples, 0.03%)</title><rect x="459.8" y="261" width="0.4" height="15.0" fill="rgb(250,192,53)" rx="2" ry="2" />
<text  x="462.76" y="271.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:217 (5 samples, 0.03%)</title><rect x="110.0" y="357" width="0.4" height="15.0" fill="rgb(241,109,17)" rx="2" ry="2" />
<text  x="112.97" y="367.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (5 samples, 0.03%)</title><rect x="920.9" y="101" width="0.4" height="15.0" fill="rgb(221,120,8)" rx="2" ry="2" />
<text  x="923.91" y="111.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (2 samples, 0.01%)</title><rect x="1008.7" y="101" width="0.1" height="15.0" fill="rgb(251,180,8)" rx="2" ry="2" />
<text  x="1011.67" y="111.5" ></text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:383 (2 samples, 0.01%)</title><rect x="1008.3" y="101" width="0.1" height="15.0" fill="rgb(229,94,9)" rx="2" ry="2" />
<text  x="1011.26" y="111.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::generate()#/usr/include/c++/9/bits/stl_vector.h:101 (4 samples, 0.03%)</title><rect x="1186.7" y="293" width="0.4" height="15.0" fill="rgb(240,54,8)" rx="2" ry="2" />
<text  x="1189.72" y="303.5" ></text>
</g>
<g >
<title>DB::(anonymous namespace)::writeTraceInfo(DB::TimerType, int, siginfo_t*, void*) [clone .isra.0]#/build/obj-x86_64-linux-gnu/../dbms/src/IO/BufferBase.h:81 (106 samples, 0.74%)</title><rect x="10.0" y="469" width="8.7" height="15.0" fill="rgb(217,71,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionCount::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:381 (20 samples, 0.14%)</title><rect x="247.0" y="293" width="1.7" height="15.0" fill="rgb(216,227,24)" rx="2" ry="2" />
<text  x="250.05" y="303.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::continueReadingChain(DB::MergeTreeRangeReader::ReadResult&amp;, unsigned long&amp;)#/usr/include/c++/9/bits/stl_vector.h:937 (2 samples, 0.01%)</title><rect x="932.0" y="245" width="0.1" height="15.0" fill="rgb(235,104,34)" rx="2" ry="2" />
<text  x="934.97" y="255.5" ></text>
</g>
<g >
<title>DB::ExpressionActions::execute(DB::Block&amp;, bool) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/ExpressionActions.cpp:763 (112 samples, 0.78%)</title><rect x="942.7" y="213" width="9.2" height="15.0" fill="rgb(237,75,51)" rx="2" ry="2" />
<text  x="945.71" y="223.5" ></text>
</g>
<g >
<title>DB::Block DB::Aggregator::convertOneBucketToBlock&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregatedDataVariants&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, bool, unsigned long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:742 (1,607 samples, 11.16%)</title><rect x="243.9" y="357" width="131.7" height="15.0" fill="rgb(246,186,5)" rx="2" ry="2" />
<text  x="246.94" y="367.5" >DB::Block DB::Ag..</text>
</g>
<g >
<title>CurrentMemoryTracker::alloc(long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/MemoryTracker.cpp:206 (2 samples, 0.01%)</title><rect x="810.4" y="277" width="0.1" height="15.0" fill="rgb(235,105,45)" rx="2" ry="2" />
<text  x="813.38" y="287.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::destroy(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:207 (83 samples, 0.58%)</title><rect x="336.2" y="293" width="6.8" height="15.0" fill="rgb(208,29,42)" rx="2" ry="2" />
<text  x="339.20" y="303.5" ></text>
</g>
<g >
<title>arena_dalloc_bin_junked_locked#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:258 (2 samples, 0.01%)</title><rect x="177.2" y="261" width="0.2" height="15.0" fill="rgb(217,195,15)" rx="2" ry="2" />
<text  x="180.24" y="271.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1691 (12 samples, 0.08%)</title><rect x="807.3" y="261" width="1.0" height="15.0" fill="rgb(235,208,38)" rx="2" ry="2" />
<text  x="810.35" y="271.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:462 (5 samples, 0.03%)</title><rect x="269.7" y="277" width="0.5" height="15.0" fill="rgb(211,6,53)" rx="2" ry="2" />
<text  x="272.75" y="287.5" ></text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:400 (2 samples, 0.01%)</title><rect x="257.9" y="197" width="0.2" height="15.0" fill="rgb(244,102,11)" rx="2" ry="2" />
<text  x="260.95" y="207.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:235 (2 samples, 0.01%)</title><rect x="920.6" y="101" width="0.1" height="15.0" fill="rgb(233,16,30)" rx="2" ry="2" />
<text  x="923.59" y="111.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:483 (2 samples, 0.01%)</title><rect x="1131.4" y="69" width="0.2" height="15.0" fill="rgb(211,104,17)" rx="2" ry="2" />
<text  x="1134.41" y="79.5" ></text>
</g>
<g >
<title>__read#/lib/x86_64-linux-gnu/libpthread-2.27.so (11 samples, 0.08%)</title><rect x="1181.3" y="53" width="0.9" height="15.0" fill="rgb(244,163,7)" rx="2" ry="2" />
<text  x="1184.31" y="63.5" ></text>
</g>
<g >
<title>malloc_default#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:151 (2 samples, 0.01%)</title><rect x="1189.4" y="149" width="0.2" height="15.0" fill="rgb(223,87,36)" rx="2" ry="2" />
<text  x="1192.43" y="159.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:224 (2 samples, 0.01%)</title><rect x="97.8" y="341" width="0.2" height="15.0" fill="rgb(231,162,51)" rx="2" ry="2" />
<text  x="100.84" y="351.5" ></text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:383 (3 samples, 0.02%)</title><rect x="930.0" y="101" width="0.3" height="15.0" fill="rgb(217,224,8)" rx="2" ry="2" />
<text  x="933.01" y="111.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:494 (1,508 samples, 10.47%)</title><rect x="778.4" y="341" width="123.6" height="15.0" fill="rgb(207,226,16)" rx="2" ry="2" />
<text  x="781.42" y="351.5" >void DB::Aggreg..</text>
</g>
<g >
<title>extent_heap_remove#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:289 (2 samples, 0.01%)</title><rect x="806.0" y="149" width="0.2" height="15.0" fill="rgb(245,94,3)" rx="2" ry="2" />
<text  x="809.03" y="159.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (4 samples, 0.03%)</title><rect x="958.4" y="165" width="0.4" height="15.0" fill="rgb(254,174,48)" rx="2" ry="2" />
<text  x="961.44" y="175.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:486 (2 samples, 0.01%)</title><rect x="924.1" y="101" width="0.2" height="15.0" fill="rgb(232,61,8)" rx="2" ry="2" />
<text  x="927.11" y="111.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:130 (2 samples, 0.01%)</title><rect x="1038.6" y="117" width="0.1" height="15.0" fill="rgb(215,187,38)" rx="2" ry="2" />
<text  x="1041.58" y="127.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:242 (16 samples, 0.11%)</title><rect x="20.3" y="485" width="1.3" height="15.0" fill="rgb(240,64,51)" rx="2" ry="2" />
<text  x="23.32" y="495.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:141 (8 samples, 0.06%)</title><rect x="1024.8" y="149" width="0.7" height="15.0" fill="rgb(234,222,4)" rx="2" ry="2" />
<text  x="1027.81" y="159.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::decompress(char*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:168 (8 samples, 0.06%)</title><rect x="1174.8" y="117" width="0.7" height="15.0" fill="rgb(229,192,18)" rx="2" ry="2" />
<text  x="1177.84" y="127.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:134 (186 samples, 1.29%)</title><rect x="916.2" y="213" width="15.3" height="15.0" fill="rgb(233,112,10)" rx="2" ry="2" />
<text  x="919.24" y="223.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:405 (3 samples, 0.02%)</title><rect x="268.3" y="277" width="0.2" height="15.0" fill="rgb(251,60,51)" rx="2" ry="2" />
<text  x="271.27" y="287.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:96 (2 samples, 0.01%)</title><rect x="295.8" y="277" width="0.2" height="15.0" fill="rgb(252,30,21)" rx="2" ry="2" />
<text  x="298.80" y="287.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:224 (24 samples, 0.17%)</title><rect x="489.2" y="341" width="1.9" height="15.0" fill="rgb(207,16,37)" rx="2" ry="2" />
<text  x="492.18" y="351.5" ></text>
</g>
<g >
<title>extent_split_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:223 (2 samples, 0.01%)</title><rect x="806.5" y="149" width="0.2" height="15.0" fill="rgb(254,193,19)" rx="2" ry="2" />
<text  x="809.53" y="159.5" ></text>
</g>
<g >
<title>extent_split_interior.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1021 (2 samples, 0.01%)</title><rect x="1189.4" y="69" width="0.2" height="15.0" fill="rgb(218,208,37)" rx="2" ry="2" />
<text  x="1192.43" y="79.5" ></text>
</g>
<g >
<title>mmap64#/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/mmap64.c:52 (2 samples, 0.01%)</title><rect x="257.9" y="101" width="0.2" height="15.0" fill="rgb(248,190,52)" rx="2" ry="2" />
<text  x="260.95" y="111.5" ></text>
</g>
<g >
<title>large_palloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (2 samples, 0.01%)</title><rect x="257.9" y="213" width="0.2" height="15.0" fill="rgb(248,13,19)" rx="2" ry="2" />
<text  x="260.95" y="223.5" ></text>
</g>
<g >
<title>DB::TreeExecutorBlockInputStream::readImpl()#/usr/include/c++/9/bits/unique_ptr.h:154 (4 samples, 0.03%)</title><rect x="1189.3" y="357" width="0.4" height="15.0" fill="rgb(209,45,19)" rx="2" ry="2" />
<text  x="1192.34" y="367.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::seek(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:63 (53 samples, 0.37%)</title><rect x="1180.8" y="117" width="4.4" height="15.0" fill="rgb(220,121,28)" rx="2" ry="2" />
<text  x="1183.82" y="127.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:305 (10 samples, 0.07%)</title><rect x="917.2" y="133" width="0.8" height="15.0" fill="rgb(236,152,22)" rx="2" ry="2" />
<text  x="920.23" y="143.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/IBlockInputStream.cpp:67 (2 samples, 0.01%)</title><rect x="913.6" y="357" width="0.2" height="15.0" fill="rgb(205,149,29)" rx="2" ry="2" />
<text  x="916.62" y="367.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:54 (178 samples, 1.24%)</title><rect x="1047.3" y="117" width="14.5" height="15.0" fill="rgb(234,84,22)" rx="2" ry="2" />
<text  x="1050.26" y="127.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:243 (3 samples, 0.02%)</title><rect x="955.4" y="165" width="0.3" height="15.0" fill="rgb(210,96,8)" rx="2" ry="2" />
<text  x="958.41" y="175.5" ></text>
</g>
<g >
<title>DB::PreparedFunctionImpl::execute(DB::Block&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, unsigned long, unsigned long, bool)#/build/obj-x86_64-linux-gnu/../dbms/src/Functions/IFunction.cpp:412 (6 samples, 0.04%)</title><rect x="945.0" y="181" width="0.5" height="15.0" fill="rgb(205,179,42)" rx="2" ry="2" />
<text  x="948.00" y="191.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:373 (4 samples, 0.03%)</title><rect x="1128.5" y="69" width="0.4" height="15.0" fill="rgb(243,15,29)" rx="2" ry="2" />
<text  x="1131.55" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;3&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:133 (2 samples, 0.01%)</title><rect x="1175.5" y="149" width="0.2" height="15.0" fill="rgb(229,106,40)" rx="2" ry="2" />
<text  x="1178.50" y="159.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:232 (6 samples, 0.04%)</title><rect x="218.5" y="341" width="0.5" height="15.0" fill="rgb(239,147,39)" rx="2" ry="2" />
<text  x="221.53" y="351.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::readBig(char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:145 (19 samples, 0.13%)</title><rect x="928.5" y="165" width="1.5" height="15.0" fill="rgb(227,214,47)" rx="2" ry="2" />
<text  x="931.45" y="175.5" ></text>
</g>
<g >
<title>CRC32Hash::operator()(StringRef) const [clone .isra.0]#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:262 (39 samples, 0.27%)</title><rect x="748.8" y="325" width="3.2" height="15.0" fill="rgb(242,210,22)" rx="2" ry="2" />
<text  x="751.84" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;DB::ReadBuffer* (std::vector&lt;DB::IDataType::Substream, std::allocator&lt;DB::IDataType::Substream&gt; &gt; const&amp;), DB::MergeTreeReader::readData(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, DB::IDataType const&amp;, DB::IColumn&amp;, unsigned long, bool, unsigned long, bool)::{lambda(bool)#1}::operator()(bool) const::{lambda(std::vector&lt;DB::IDataType::Substream, std::allocator&lt;DB::IDataType::Substream&gt; &gt; const&amp;)#1}&gt;::_M_invoke(std::_Any_data const&amp;, std::vector&lt;DB::IDataType::Substream, std::allocator&lt;DB::IDataType::Substream&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:238 (53 samples, 0.37%)</title><rect x="1180.8" y="149" width="4.4" height="15.0" fill="rgb(216,64,16)" rx="2" ry="2" />
<text  x="1183.82" y="159.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;1&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:140 (2 samples, 0.01%)</title><rect x="1175.9" y="149" width="0.2" height="15.0" fill="rgb(232,120,8)" rx="2" ry="2" />
<text  x="1178.91" y="159.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;3&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:141 (3 samples, 0.02%)</title><rect x="1174.3" y="149" width="0.2" height="15.0" fill="rgb(223,9,36)" rx="2" ry="2" />
<text  x="1177.27" y="159.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2466 (14 samples, 0.10%)</title><rect x="156.9" y="325" width="1.2" height="15.0" fill="rgb(240,16,29)" rx="2" ry="2" />
<text  x="159.92" y="335.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (4 samples, 0.03%)</title><rect x="23.1" y="165" width="0.3" height="15.0" fill="rgb(216,57,42)" rx="2" ry="2" />
<text  x="26.11" y="175.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock#/lib/x86_64-linux-gnu/libpthread-2.27.so (3 samples, 0.02%)</title><rect x="21.7" y="485" width="0.3" height="15.0" fill="rgb(250,178,19)" rx="2" ry="2" />
<text  x="24.72" y="495.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionCountData, DB::AggregateFunctionCount&gt;::create(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:202 (2 samples, 0.01%)</title><rect x="757.9" y="309" width="0.2" height="15.0" fill="rgb(214,108,50)" rx="2" ry="2" />
<text  x="760.94" y="319.5" ></text>
</g>
<g >
<title>ThreadFromGlobalPool::ThreadFromGlobalPool&lt;void (DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::*)(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long), DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;*, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long&amp;&gt;(void (DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::*&amp;&amp;)(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long), DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;*&amp;&amp;, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;&amp;&amp;, unsigned long&amp;)::{lambda()#1}::operator()() const#/usr/include/c++/9/bits/shared_ptr_base.h:729 (4 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.4" height="15.0" fill="rgb(245,90,14)" rx="2" ry="2" />
<text  x="1192.34" y="447.5" ></text>
</g>
<g >
<title>DB::ExpressionBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.h:90 (21 samples, 0.15%)</title><rect x="23.0" y="309" width="1.7" height="15.0" fill="rgb(220,172,19)" rx="2" ry="2" />
<text  x="26.03" y="319.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&amp;)#/usr/include/c++/9/bits/stl_iterator.h:807 (679 samples, 4.71%)</title><rect x="952.3" y="229" width="55.6" height="15.0" fill="rgb(252,214,4)" rx="2" ry="2" />
<text  x="955.30" y="239.5" >DB::M..</text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:221 (12 samples, 0.08%)</title><rect x="821.4" y="309" width="1.0" height="15.0" fill="rgb(231,9,48)" rx="2" ry="2" />
<text  x="824.44" y="319.5" ></text>
</g>
<g >
<title>DB::ExpressionAction::execute(DB::Block&amp;, bool) const#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:138 (4 samples, 0.03%)</title><rect x="942.7" y="197" width="0.3" height="15.0" fill="rgb(247,168,33)" rx="2" ry="2" />
<text  x="945.71" y="207.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::filterColumns(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;) const#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ref_counter.hpp:173 (11 samples, 0.08%)</title><rect x="1006.9" y="213" width="1.0" height="15.0" fill="rgb(254,43,6)" rx="2" ry="2" />
<text  x="1009.95" y="223.5" ></text>
</g>
<g >
<title>DB::TreeExecutorBlockInputStream::execute()#/build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/TreeExecutorBlockInputStream.cpp:100 (5 samples, 0.03%)</title><rect x="914.7" y="325" width="0.4" height="15.0" fill="rgb(234,168,35)" rx="2" ry="2" />
<text  x="917.69" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:374 (10 samples, 0.07%)</title><rect x="1128.9" y="69" width="0.8" height="15.0" fill="rgb(250,50,24)" rx="2" ry="2" />
<text  x="1131.87" y="79.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:379 (95 samples, 0.66%)</title><rect x="232.0" y="341" width="7.8" height="15.0" fill="rgb(238,22,27)" rx="2" ry="2" />
<text  x="234.97" y="351.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:134 (7 samples, 0.05%)</title><rect x="1023.2" y="149" width="0.5" height="15.0" fill="rgb(211,47,23)" rx="2" ry="2" />
<text  x="1026.17" y="159.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/usr/include/c++/9/bits/stl_vector.h:110 (2,168 samples, 15.05%)</title><rect x="1008.2" y="245" width="177.6" height="15.0" fill="rgb(217,141,28)" rx="2" ry="2" />
<text  x="1011.18" y="255.5" >DB::MergeTreeRangeReade..</text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (21 samples, 0.15%)</title><rect x="23.0" y="293" width="1.7" height="15.0" fill="rgb(208,6,13)" rx="2" ry="2" />
<text  x="26.03" y="303.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:184 (9 samples, 0.06%)</title><rect x="974.1" y="181" width="0.7" height="15.0" fill="rgb(208,49,52)" rx="2" ry="2" />
<text  x="977.09" y="191.5" ></text>
</g>
<g >
<title>DB::MergeTreeReaderStream::seekToMark(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReaderStream.cpp:200 (8 samples, 0.06%)</title><rect x="930.3" y="149" width="0.6" height="15.0" fill="rgb(229,26,44)" rx="2" ry="2" />
<text  x="933.25" y="159.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:554 (803 samples, 5.58%)</title><rect x="1062.1" y="85" width="65.8" height="15.0" fill="rgb(235,13,47)" rx="2" ry="2" />
<text  x="1065.09" y="95.5" >LZ4::de..</text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1075 (2 samples, 0.01%)</title><rect x="911.2" y="245" width="0.2" height="15.0" fill="rgb(220,148,11)" rx="2" ry="2" />
<text  x="914.24" y="255.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:137 (2 samples, 0.01%)</title><rect x="1008.7" y="149" width="0.1" height="15.0" fill="rgb(232,160,0)" rx="2" ry="2" />
<text  x="1011.67" y="159.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (6 samples, 0.04%)</title><rect x="179.4" y="293" width="0.5" height="15.0" fill="rgb(222,61,12)" rx="2" ry="2" />
<text  x="182.37" y="303.5" ></text>
</g>
<g >
<title>extent_dalloc_wrapper#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1808 (24 samples, 0.17%)</title><rect x="336.8" y="197" width="1.9" height="15.0" fill="rgb(250,56,30)" rx="2" ry="2" />
<text  x="339.77" y="207.5" ></text>
</g>
<g >
<title>__madvise#/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/syscall-template.S:78 (24 samples, 0.17%)</title><rect x="336.8" y="165" width="1.9" height="15.0" fill="rgb(232,194,40)" rx="2" ry="2" />
<text  x="339.77" y="175.5" ></text>
</g>
<g >
<title>DB::MergeTreeReaderStream::seekToMark(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReaderStream.cpp:200 (53 samples, 0.37%)</title><rect x="1180.8" y="133" width="4.4" height="15.0" fill="rgb(231,41,11)" rx="2" ry="2" />
<text  x="1183.82" y="143.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:96 (7 samples, 0.05%)</title><rect x="677.5" y="325" width="0.5" height="15.0" fill="rgb(254,124,13)" rx="2" ry="2" />
<text  x="680.47" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:477 (13 samples, 0.09%)</title><rect x="1103.4" y="69" width="1.1" height="15.0" fill="rgb(216,51,23)" rx="2" ry="2" />
<text  x="1106.39" y="79.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:237 (3 samples, 0.02%)</title><rect x="1182.3" y="37" width="0.2" height="15.0" fill="rgb(238,149,20)" rx="2" ry="2" />
<text  x="1185.30" y="47.5" ></text>
</g>
<g >
<title>malloc_default#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:151 (3 samples, 0.02%)</title><rect x="1008.4" y="133" width="0.3" height="15.0" fill="rgb(236,226,1)" rx="2" ry="2" />
<text  x="1011.42" y="143.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (23 samples, 0.16%)</title><rect x="940.3" y="229" width="1.8" height="15.0" fill="rgb(247,32,28)" rx="2" ry="2" />
<text  x="943.25" y="239.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionCount::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionCount.h:64 (2 samples, 0.01%)</title><rect x="246.6" y="293" width="0.2" height="15.0" fill="rgb(238,177,13)" rx="2" ry="2" />
<text  x="249.64" y="303.5" ></text>
</g>
<g >
<title>__madvise#/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/syscall-template.S:78 (2 samples, 0.01%)</title><rect x="177.1" y="181" width="0.1" height="15.0" fill="rgb(223,93,38)" rx="2" ry="2" />
<text  x="180.07" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:482 (7 samples, 0.05%)</title><rect x="756.5" y="341" width="0.5" height="15.0" fill="rgb(245,111,29)" rx="2" ry="2" />
<text  x="759.46" y="351.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:470 (2 samples, 0.01%)</title><rect x="270.2" y="277" width="0.1" height="15.0" fill="rgb(212,167,7)" rx="2" ry="2" />
<text  x="273.16" y="287.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:215 (4 samples, 0.03%)</title><rect x="97.3" y="341" width="0.3" height="15.0" fill="rgb(246,118,44)" rx="2" ry="2" />
<text  x="100.26" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::convertToBlockImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;DB::PODArray&lt;char*, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;*, std::allocator&lt;DB::PODArray&lt;char*, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;*&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, bool) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:904 (1,606 samples, 11.15%)</title><rect x="243.9" y="325" width="131.6" height="15.0" fill="rgb(243,127,43)" rx="2" ry="2" />
<text  x="246.94" y="335.5" >void DB::Aggrega..</text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:217 (3 samples, 0.02%)</title><rect x="983.6" y="181" width="0.2" height="15.0" fill="rgb(208,67,14)" rx="2" ry="2" />
<text  x="986.60" y="191.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;3&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (3 samples, 0.02%)</title><rect x="1175.7" y="149" width="0.2" height="15.0" fill="rgb(228,191,44)" rx="2" ry="2" />
<text  x="1178.66" y="159.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:287 (3 samples, 0.02%)</title><rect x="258.1" y="229" width="0.3" height="15.0" fill="rgb(247,219,12)" rx="2" ry="2" />
<text  x="261.11" y="239.5" ></text>
</g>
<g >
<title>DB::ICompressionCodec::decompress(char const*, unsigned int, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/ICompressionCodec.cpp:54 (8 samples, 0.06%)</title><rect x="1174.8" y="101" width="0.7" height="15.0" fill="rgb(246,110,36)" rx="2" ry="2" />
<text  x="1177.84" y="111.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (100 samples, 0.69%)</title><rect x="964.4" y="165" width="8.2" height="15.0" fill="rgb(218,2,26)" rx="2" ry="2" />
<text  x="967.42" y="175.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::readBig(char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:141 (96 samples, 0.67%)</title><rect x="920.6" y="165" width="7.9" height="15.0" fill="rgb(230,141,19)" rx="2" ry="2" />
<text  x="923.59" y="175.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:221 (3 samples, 0.02%)</title><rect x="97.6" y="341" width="0.2" height="15.0" fill="rgb(231,128,41)" rx="2" ry="2" />
<text  x="100.59" y="351.5" ></text>
</g>
<g >
<title>__read#/lib/x86_64-linux-gnu/libpthread-2.27.so (6 samples, 0.04%)</title><rect x="930.3" y="69" width="0.5" height="15.0" fill="rgb(223,171,41)" rx="2" ry="2" />
<text  x="933.34" y="79.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (14 samples, 0.10%)</title><rect x="1005.5" y="165" width="1.1" height="15.0" fill="rgb(209,114,30)" rx="2" ry="2" />
<text  x="1008.47" y="175.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:232 (3 samples, 0.02%)</title><rect x="868.1" y="309" width="0.2" height="15.0" fill="rgb(239,146,30)" rx="2" ry="2" />
<text  x="871.06" y="319.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:733 (3 samples, 0.02%)</title><rect x="952.0" y="229" width="0.2" height="15.0" fill="rgb(227,4,29)" rx="2" ry="2" />
<text  x="954.97" y="239.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1311 (43 samples, 0.30%)</title><rect x="93.6" y="325" width="3.5" height="15.0" fill="rgb(217,1,9)" rx="2" ry="2" />
<text  x="96.58" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:483 (4 samples, 0.03%)</title><rect x="1074.7" y="69" width="0.3" height="15.0" fill="rgb(234,98,34)" rx="2" ry="2" />
<text  x="1077.71" y="79.5" ></text>
</g>
<g >
<title>DB::ColumnConst::cloneResized(unsigned long) const#/usr/include/c++/9/bits/atomic_base.h:541 (2 samples, 0.01%)</title><rect x="942.9" y="181" width="0.1" height="15.0" fill="rgb(226,10,49)" rx="2" ry="2" />
<text  x="945.87" y="191.5" ></text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:383 (2 samples, 0.01%)</title><rect x="459.4" y="245" width="0.2" height="15.0" fill="rgb(235,155,25)" rx="2" ry="2" />
<text  x="462.43" y="255.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:608 (6 samples, 0.04%)</title><rect x="957.8" y="165" width="0.5" height="15.0" fill="rgb(245,209,29)" rx="2" ry="2" />
<text  x="960.79" y="175.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::filterColumns(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;) const#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ref_counter.hpp:173 (2 samples, 0.01%)</title><rect x="942.2" y="245" width="0.2" height="15.0" fill="rgb(217,11,37)" rx="2" ry="2" />
<text  x="945.22" y="255.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:525 (7 samples, 0.05%)</title><rect x="148.6" y="357" width="0.5" height="15.0" fill="rgb(250,14,31)" rx="2" ry="2" />
<text  x="151.56" y="367.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (2 samples, 0.01%)</title><rect x="1137.8" y="101" width="0.2" height="15.0" fill="rgb(251,128,33)" rx="2" ry="2" />
<text  x="1140.81" y="111.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:385 (16 samples, 0.11%)</title><rect x="239.8" y="341" width="1.3" height="15.0" fill="rgb(220,145,32)" rx="2" ry="2" />
<text  x="242.76" y="351.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2689 (9 samples, 0.06%)</title><rect x="902.1" y="309" width="0.7" height="15.0" fill="rgb(251,27,2)" rx="2" ry="2" />
<text  x="905.07" y="319.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:520 (2 samples, 0.01%)</title><rect x="925.9" y="101" width="0.2" height="15.0" fill="rgb(231,176,32)" rx="2" ry="2" />
<text  x="928.91" y="111.5" ></text>
</g>
<g >
<title>arena_bin_malloc_hard#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1169 (2 samples, 0.01%)</title><rect x="811.1" y="213" width="0.2" height="15.0" fill="rgb(229,175,10)" rx="2" ry="2" />
<text  x="814.12" y="223.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:235 (2 samples, 0.01%)</title><rect x="1179.2" y="69" width="0.1" height="15.0" fill="rgb(231,34,23)" rx="2" ry="2" />
<text  x="1182.18" y="79.5" ></text>
</g>
<g >
<title>large_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (6 samples, 0.04%)</title><rect x="936.3" y="165" width="0.5" height="15.0" fill="rgb(228,36,44)" rx="2" ry="2" />
<text  x="939.32" y="175.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:381 (9 samples, 0.06%)</title><rect x="984.8" y="181" width="0.8" height="15.0" fill="rgb(234,225,34)" rx="2" ry="2" />
<text  x="987.83" y="191.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (2 samples, 0.01%)</title><rect x="1185.0" y="37" width="0.2" height="15.0" fill="rgb(252,168,0)" rx="2" ry="2" />
<text  x="1188.00" y="47.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:172 (2 samples, 0.01%)</title><rect x="672.6" y="325" width="0.1" height="15.0" fill="rgb(235,168,48)" rx="2" ry="2" />
<text  x="675.56" y="335.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:137 (29 samples, 0.20%)</title><rect x="904.2" y="341" width="2.4" height="15.0" fill="rgb(244,212,27)" rx="2" ry="2" />
<text  x="907.20" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:447 (12 samples, 0.08%)</title><rect x="1071.3" y="69" width="1.0" height="15.0" fill="rgb(219,151,40)" rx="2" ry="2" />
<text  x="1074.27" y="79.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (96 samples, 0.67%)</title><rect x="257.9" y="261" width="7.9" height="15.0" fill="rgb(216,79,10)" rx="2" ry="2" />
<text  x="260.95" y="271.5" ></text>
</g>
<g >
<title>malloc_default#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:151 (3 samples, 0.02%)</title><rect x="930.0" y="133" width="0.3" height="15.0" fill="rgb(209,218,54)" rx="2" ry="2" />
<text  x="933.01" y="143.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:304 (2 samples, 0.01%)</title><rect x="1041.0" y="101" width="0.2" height="15.0" fill="rgb(206,25,1)" rx="2" ry="2" />
<text  x="1044.04" y="111.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/Hash.h:25 (10 samples, 0.07%)</title><rect x="875.1" y="309" width="0.8" height="15.0" fill="rgb(229,66,12)" rx="2" ry="2" />
<text  x="878.11" y="319.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (35 samples, 0.24%)</title><rect x="460.7" y="245" width="2.8" height="15.0" fill="rgb(226,79,37)" rx="2" ry="2" />
<text  x="463.66" y="255.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:389 (4 samples, 0.03%)</title><rect x="267.7" y="277" width="0.3" height="15.0" fill="rgb(226,225,14)" rx="2" ry="2" />
<text  x="270.70" y="287.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:236 (9 samples, 0.06%)</title><rect x="1092.7" y="69" width="0.8" height="15.0" fill="rgb(254,155,21)" rx="2" ry="2" />
<text  x="1095.74" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:389 (3 samples, 0.02%)</title><rect x="673.8" y="325" width="0.2" height="15.0" fill="rgb(206,90,19)" rx="2" ry="2" />
<text  x="676.79" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:490 (4 samples, 0.03%)</title><rect x="1075.7" y="69" width="0.3" height="15.0" fill="rgb(214,66,54)" rx="2" ry="2" />
<text  x="1078.70" y="79.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:440 (4 samples, 0.03%)</title><rect x="1130.1" y="69" width="0.3" height="15.0" fill="rgb(207,111,10)" rx="2" ry="2" />
<text  x="1133.10" y="79.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:229 (538 samples, 3.74%)</title><rect x="822.4" y="309" width="44.1" height="15.0" fill="rgb(219,81,17)" rx="2" ry="2" />
<text  x="825.42" y="319.5" >Uniq..</text>
</g>
<g >
<title>DB::AggregatedDataVariants::sizeWithoutOverflowRow() const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/StringHashTable.h:389 (12 samples, 0.08%)</title><rect x="910.1" y="357" width="1.0" height="15.0" fill="rgb(218,163,37)" rx="2" ry="2" />
<text  x="913.10" y="367.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:108 (41 samples, 0.28%)</title><rect x="158.2" y="341" width="3.4" height="15.0" fill="rgb(219,102,25)" rx="2" ry="2" />
<text  x="161.23" y="351.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:405 (4 samples, 0.03%)</title><rect x="674.3" y="325" width="0.3" height="15.0" fill="rgb(239,56,7)" rx="2" ry="2" />
<text  x="677.28" y="335.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:336 (2 samples, 0.01%)</title><rect x="983.8" y="181" width="0.2" height="15.0" fill="rgb(231,179,41)" rx="2" ry="2" />
<text  x="986.84" y="191.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:111 (5 samples, 0.03%)</title><rect x="390.4" y="325" width="0.5" height="15.0" fill="rgb(210,76,30)" rx="2" ry="2" />
<text  x="393.44" y="335.5" ></text>
</g>
<g >
<title>DB::ColumnString::~ColumnString()#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:104 (13 samples, 0.09%)</title><rect x="1187.5" y="389" width="1.0" height="15.0" fill="rgb(253,7,25)" rx="2" ry="2" />
<text  x="1190.46" y="399.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (2 samples, 0.01%)</title><rect x="1137.8" y="69" width="0.2" height="15.0" fill="rgb(219,125,37)" rx="2" ry="2" />
<text  x="1140.81" y="79.5" ></text>
</g>
<g >
<title>DB::ReadBufferFromFileDescriptor::nextImpl()#/usr/include/x86_64-linux-gnu/bits/unistd.h:44 (11 samples, 0.08%)</title><rect x="1181.3" y="69" width="0.9" height="15.0" fill="rgb(243,151,49)" rx="2" ry="2" />
<text  x="1184.31" y="79.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:242 (5 samples, 0.03%)</title><rect x="219.0" y="341" width="0.4" height="15.0" fill="rgb(205,87,1)" rx="2" ry="2" />
<text  x="222.03" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:217 (14 samples, 0.10%)</title><rect x="486.7" y="341" width="1.2" height="15.0" fill="rgb(246,66,53)" rx="2" ry="2" />
<text  x="489.72" y="351.5" ></text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1075 (2 samples, 0.01%)</title><rect x="460.0" y="197" width="0.2" height="15.0" fill="rgb(227,130,3)" rx="2" ry="2" />
<text  x="463.01" y="207.5" ></text>
</g>
<g >
<title>DB::DataTypeNumberBase&lt;unsigned long&gt;::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeNumberBase.cpp:203 (167 samples, 1.16%)</title><rect x="916.3" y="181" width="13.7" height="15.0" fill="rgb(233,127,49)" rx="2" ry="2" />
<text  x="919.32" y="191.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (2 samples, 0.01%)</title><rect x="1175.9" y="117" width="0.2" height="15.0" fill="rgb(245,213,31)" rx="2" ry="2" />
<text  x="1178.91" y="127.5" ></text>
</g>
<g >
<title>DB::AggregatedDataVariants::sizeWithoutOverflowRow() const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.h:643 (2 samples, 0.01%)</title><rect x="911.1" y="357" width="0.1" height="15.0" fill="rgb(217,103,34)" rx="2" ry="2" />
<text  x="914.08" y="367.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:199 (31 samples, 0.22%)</title><rect x="818.2" y="309" width="2.5" height="15.0" fill="rgb(240,32,32)" rx="2" ry="2" />
<text  x="821.16" y="319.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (21 samples, 0.15%)</title><rect x="23.0" y="357" width="1.7" height="15.0" fill="rgb(251,92,2)" rx="2" ry="2" />
<text  x="26.03" y="367.5" ></text>
</g>
<g >
<title>DB::DataTypeString::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:207 (23 samples, 0.16%)</title><rect x="1174.0" y="165" width="1.9" height="15.0" fill="rgb(248,17,12)" rx="2" ry="2" />
<text  x="1177.02" y="175.5" ></text>
</g>
<g >
<title>large_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (2 samples, 0.01%)</title><rect x="983.4" y="117" width="0.1" height="15.0" fill="rgb(239,5,40)" rx="2" ry="2" />
<text  x="986.35" y="127.5" ></text>
</g>
<g >
<title>tcache_bin_flush_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:121 (31 samples, 0.22%)</title><rect x="336.4" y="261" width="2.5" height="15.0" fill="rgb(224,211,32)" rx="2" ry="2" />
<text  x="339.36" y="271.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:109 (7 samples, 0.05%)</title><rect x="799.9" y="309" width="0.6" height="15.0" fill="rgb(244,10,28)" rx="2" ry="2" />
<text  x="802.89" y="319.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:121 (59 samples, 0.41%)</title><rect x="1016.7" y="149" width="4.8" height="15.0" fill="rgb(247,39,2)" rx="2" ry="2" />
<text  x="1019.70" y="159.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:454 (2 samples, 0.01%)</title><rect x="1130.9" y="69" width="0.2" height="15.0" fill="rgb(225,83,43)" rx="2" ry="2" />
<text  x="1133.92" y="79.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::readFromPartImpl()#/usr/include/c++/9/bits/unique_ptr.h:154 (2 samples, 0.01%)</title><rect x="1186.3" y="277" width="0.2" height="15.0" fill="rgb(206,191,15)" rx="2" ry="2" />
<text  x="1189.31" y="287.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:514 (45 samples, 0.31%)</title><rect x="1076.4" y="69" width="3.6" height="15.0" fill="rgb(240,118,23)" rx="2" ry="2" />
<text  x="1079.35" y="79.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:215 (3 samples, 0.02%)</title><rect x="1008.2" y="149" width="0.2" height="15.0" fill="rgb(247,139,3)" rx="2" ry="2" />
<text  x="1011.18" y="159.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:157 (2 samples, 0.01%)</title><rect x="672.4" y="325" width="0.2" height="15.0" fill="rgb(208,205,36)" rx="2" ry="2" />
<text  x="675.39" y="335.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/Hash.h:28 (4 samples, 0.03%)</title><rect x="898.1" y="309" width="0.3" height="15.0" fill="rgb(219,123,10)" rx="2" ry="2" />
<text  x="901.05" y="319.5" ></text>
</g>
<g >
<title>tcache_alloc_small_hard#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/cache_bin.h:91 (7 samples, 0.05%)</title><rect x="810.8" y="245" width="0.6" height="15.0" fill="rgb(227,140,40)" rx="2" ry="2" />
<text  x="813.79" y="255.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::destroy(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:207 (19 samples, 0.13%)</title><rect x="156.5" y="341" width="1.6" height="15.0" fill="rgb(221,196,42)" rx="2" ry="2" />
<text  x="159.51" y="351.5" ></text>
</g>
<g >
<title>DB::MergingAndConvertingBlockInputStream::readImpl()#/usr/include/c++/9/bits/unique_lock.h:105 (4 samples, 0.03%)</title><rect x="23.1" y="149" width="0.3" height="15.0" fill="rgb(220,82,46)" rx="2" ry="2" />
<text  x="26.11" y="159.5" ></text>
</g>
<g >
<title>DB::Block::insert(DB::ColumnWithTypeAndName&amp;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.cpp:88 (2 samples, 0.01%)</title><rect x="943.4" y="181" width="0.1" height="15.0" fill="rgb(240,160,19)" rx="2" ry="2" />
<text  x="946.36" y="191.5" ></text>
</g>
<g >
<title>DB::ColumnString::~ColumnString()#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:104 (10 samples, 0.07%)</title><rect x="1007.0" y="197" width="0.9" height="15.0" fill="rgb(249,78,21)" rx="2" ry="2" />
<text  x="1010.03" y="207.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1326 (2 samples, 0.01%)</title><rect x="242.9" y="357" width="0.1" height="15.0" fill="rgb(207,156,27)" rx="2" ry="2" />
<text  x="245.87" y="367.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (2 samples, 0.01%)</title><rect x="1175.9" y="85" width="0.2" height="15.0" fill="rgb(237,196,19)" rx="2" ry="2" />
<text  x="1178.91" y="95.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:80 (3 samples, 0.02%)</title><rect x="25.7" y="341" width="0.2" height="15.0" fill="rgb(249,191,27)" rx="2" ry="2" />
<text  x="28.65" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:479 (2 samples, 0.01%)</title><rect x="1074.5" y="69" width="0.2" height="15.0" fill="rgb(232,71,5)" rx="2" ry="2" />
<text  x="1077.55" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (10 samples, 0.07%)</title><rect x="988.0" y="165" width="0.8" height="15.0" fill="rgb(254,54,40)" rx="2" ry="2" />
<text  x="991.02" y="175.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:93 (4 samples, 0.03%)</title><rect x="958.8" y="165" width="0.3" height="15.0" fill="rgb(253,194,2)" rx="2" ry="2" />
<text  x="961.77" y="175.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/TwoLevelStringHashTable.h:82 (7 samples, 0.05%)</title><rect x="752.9" y="341" width="0.6" height="15.0" fill="rgb(239,36,14)" rx="2" ry="2" />
<text  x="755.94" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:237 (42 samples, 0.29%)</title><rect x="1093.5" y="69" width="3.4" height="15.0" fill="rgb(214,35,18)" rx="2" ry="2" />
<text  x="1096.48" y="79.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::DelayedStream::finalize(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:34 (2,164 samples, 15.03%)</title><rect x="1008.2" y="213" width="177.3" height="15.0" fill="rgb(243,3,51)" rx="2" ry="2" />
<text  x="1011.18" y="223.5" >DB::MergeTreeRangeReade..</text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::generate()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:57 (7 samples, 0.05%)</title><rect x="915.2" y="293" width="0.6" height="15.0" fill="rgb(218,100,17)" rx="2" ry="2" />
<text  x="918.18" y="303.5" ></text>
</g>
<g >
<title>__memset_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:141 (6 samples, 0.04%)</title><rect x="179.9" y="309" width="0.5" height="15.0" fill="rgb(245,24,34)" rx="2" ry="2" />
<text  x="182.86" y="319.5" ></text>
</g>
<g >
<title>DB::DataTypeNumberBase&lt;unsigned long&gt;::createColumn() const#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:138 (2 samples, 0.01%)</title><rect x="931.5" y="197" width="0.1" height="15.0" fill="rgb(209,194,5)" rx="2" ry="2" />
<text  x="934.48" y="207.5" ></text>
</g>
<g >
<title>void DB::Aggregator::convertToBlockImplFinal&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:937 (4 samples, 0.03%)</title><rect x="333.2" y="309" width="0.4" height="15.0" fill="rgb(230,169,4)" rx="2" ry="2" />
<text  x="336.25" y="319.5" ></text>
</g>
<g >
<title>arena_maybe_decay#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:556 (2 samples, 0.01%)</title><rect x="177.1" y="245" width="0.1" height="15.0" fill="rgb(215,109,31)" rx="2" ry="2" />
<text  x="180.07" y="255.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:440 (12 samples, 0.08%)</title><rect x="1097.6" y="69" width="1.0" height="15.0" fill="rgb(249,203,24)" rx="2" ry="2" />
<text  x="1100.57" y="79.5" ></text>
</g>
<g >
<title>arena_maybe_decay#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:556 (31 samples, 0.22%)</title><rect x="336.4" y="229" width="2.5" height="15.0" fill="rgb(207,140,20)" rx="2" ry="2" />
<text  x="339.36" y="239.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::ReadResult::optimize()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:271 (3 samples, 0.02%)</title><rect x="952.0" y="213" width="0.2" height="15.0" fill="rgb(241,221,14)" rx="2" ry="2" />
<text  x="954.97" y="223.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (191 samples, 1.33%)</title><rect x="989.0" y="165" width="15.7" height="15.0" fill="rgb(215,227,46)" rx="2" ry="2" />
<text  x="992.00" y="175.5" ></text>
</g>
<g >
<title>ThreadFromGlobalPool::ThreadFromGlobalPool&lt;ThreadPoolImpl&lt;ThreadFromGlobalPool&gt;::scheduleImpl&lt;void&gt;(std::function&lt;void ()&gt;, int, std::optional&lt;unsigned long&gt;)::{lambda()#3}&gt;(ThreadPoolImpl&lt;ThreadFromGlobalPool&gt;::scheduleImpl&lt;void&gt;(std::function&lt;void ()&gt;, int, std::optional&lt;unsigned long&gt;)::{lambda()#3}&amp;&amp;)::{lambda()#1}::operator()() const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ThreadPool.h:155 (4,310 samples, 29.93%)</title><rect x="22.5" y="421" width="353.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="25.45" y="431.5" >ThreadFromGlobalPool::ThreadFromGlobalPool&lt;Thre..</text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (254 samples, 1.76%)</title><rect x="985.8" y="181" width="20.8" height="15.0" fill="rgb(217,95,33)" rx="2" ry="2" />
<text  x="988.81" y="191.5" ></text>
</g>
<g >
<title>void DB::PODArrayBase&lt;8ul, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;::reserve&lt;&gt;(unsigned long) [clone .part.0]#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:105 (6 samples, 0.04%)</title><rect x="936.3" y="213" width="0.5" height="15.0" fill="rgb(221,178,29)" rx="2" ry="2" />
<text  x="939.32" y="223.5" ></text>
</g>
<g >
<title>DB::LimitBlockInputStream::readImpl()#/usr/include/c++/9/bits/stl_vector.h:108 (21 samples, 0.15%)</title><rect x="23.0" y="341" width="1.7" height="15.0" fill="rgb(231,170,2)" rx="2" ry="2" />
<text  x="26.03" y="351.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (10 samples, 0.07%)</title><rect x="103.7" y="261" width="0.8" height="15.0" fill="rgb(228,86,31)" rx="2" ry="2" />
<text  x="106.66" y="271.5" ></text>
</g>
<g >
<title>DB::DataTypeNumberBase&lt;unsigned long&gt;::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:59 (3 samples, 0.02%)</title><rect x="930.0" y="181" width="0.3" height="15.0" fill="rgb(208,212,12)" rx="2" ry="2" />
<text  x="933.01" y="191.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:22 (7 samples, 0.05%)</title><rect x="930.3" y="117" width="0.5" height="15.0" fill="rgb(235,217,40)" rx="2" ry="2" />
<text  x="933.25" y="127.5" ></text>
</g>
<g >
<title>DB::ICompressionCodec::decompress(char const*, unsigned int, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/ICompressionCodec.cpp:54 (9 samples, 0.06%)</title><rect x="1177.1" y="101" width="0.7" height="15.0" fill="rgb(241,18,3)" rx="2" ry="2" />
<text  x="1180.05" y="111.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:213 (15 samples, 0.10%)</title><rect x="810.7" y="277" width="1.2" height="15.0" fill="rgb(225,207,17)" rx="2" ry="2" />
<text  x="813.71" y="287.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (53 samples, 0.37%)</title><rect x="1133.3" y="69" width="4.3" height="15.0" fill="rgb(210,85,37)" rx="2" ry="2" />
<text  x="1136.30" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:659 (20 samples, 0.14%)</title><rect x="258.5" y="213" width="1.7" height="15.0" fill="rgb(216,114,53)" rx="2" ry="2" />
<text  x="261.52" y="223.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:22 (286 samples, 1.99%)</title><rect x="1038.6" y="133" width="23.4" height="15.0" fill="rgb(246,22,3)" rx="2" ry="2" />
<text  x="1041.58" y="143.5" >D..</text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (2 samples, 0.01%)</title><rect x="1175.9" y="101" width="0.2" height="15.0" fill="rgb(238,64,49)" rx="2" ry="2" />
<text  x="1178.91" y="111.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:489 (16 samples, 0.11%)</title><rect x="777.1" y="341" width="1.3" height="15.0" fill="rgb(242,5,24)" rx="2" ry="2" />
<text  x="780.11" y="351.5" ></text>
</g>
<g >
<title>DB::MergeTreeBlockSizePredictor::startBlock()#/usr/include/c++/9/bits/stl_iterator.h:807 (2 samples, 0.01%)</title><rect x="915.8" y="261" width="0.1" height="15.0" fill="rgb(213,65,35)" rx="2" ry="2" />
<text  x="918.75" y="271.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:124 (815 samples, 5.66%)</title><rect x="24.8" y="357" width="66.8" height="15.0" fill="rgb(230,95,17)" rx="2" ry="2" />
<text  x="27.83" y="367.5" >void DB..</text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:383 (6 samples, 0.04%)</title><rect x="936.3" y="149" width="0.5" height="15.0" fill="rgb(228,83,48)" rx="2" ry="2" />
<text  x="939.32" y="159.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (96 samples, 0.67%)</title><rect x="257.9" y="277" width="7.9" height="15.0" fill="rgb(224,75,29)" rx="2" ry="2" />
<text  x="260.95" y="287.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:117 (2 samples, 0.01%)</title><rect x="391.3" y="325" width="0.1" height="15.0" fill="rgb(243,104,43)" rx="2" ry="2" />
<text  x="394.26" y="335.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:221 (16 samples, 0.11%)</title><rect x="487.9" y="341" width="1.3" height="15.0" fill="rgb(251,33,21)" rx="2" ry="2" />
<text  x="490.87" y="351.5" ></text>
</g>
<g >
<title>extent_split_interior.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1021 (2 samples, 0.01%)</title><rect x="460.0" y="181" width="0.2" height="15.0" fill="rgb(224,176,24)" rx="2" ry="2" />
<text  x="463.01" y="191.5" ></text>
</g>
<g >
<title>tcache_bin_flush_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:55 (8 samples, 0.06%)</title><rect x="338.9" y="261" width="0.7" height="15.0" fill="rgb(223,91,54)" rx="2" ry="2" />
<text  x="341.90" y="271.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:505 (7 samples, 0.05%)</title><rect x="271.8" y="277" width="0.6" height="15.0" fill="rgb(219,161,50)" rx="2" ry="2" />
<text  x="274.79" y="287.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::create(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:95 (212 samples, 1.47%)</title><rect x="758.4" y="309" width="17.4" height="15.0" fill="rgb(214,158,20)" rx="2" ry="2" />
<text  x="761.43" y="319.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:554 (7 samples, 0.05%)</title><rect x="1177.1" y="85" width="0.5" height="15.0" fill="rgb(228,211,16)" rx="2" ry="2" />
<text  x="1180.05" y="95.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (16 samples, 0.11%)</title><rect x="806.0" y="197" width="1.3" height="15.0" fill="rgb(206,150,22)" rx="2" ry="2" />
<text  x="809.03" y="207.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1305 (1,063 samples, 7.38%)</title><rect x="154.0" y="357" width="87.1" height="15.0" fill="rgb(251,115,23)" rx="2" ry="2" />
<text  x="156.97" y="367.5" >void DB::A..</text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1075 (5 samples, 0.03%)</title><rect x="936.4" y="117" width="0.4" height="15.0" fill="rgb(241,113,54)" rx="2" ry="2" />
<text  x="939.40" y="127.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:219 (3 samples, 0.02%)</title><rect x="976.5" y="181" width="0.2" height="15.0" fill="rgb(232,27,15)" rx="2" ry="2" />
<text  x="979.47" y="191.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:358 (2 samples, 0.01%)</title><rect x="673.3" y="325" width="0.2" height="15.0" fill="rgb(238,150,30)" rx="2" ry="2" />
<text  x="676.29" y="335.5" ></text>
</g>
<g >
<title>large_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (2 samples, 0.01%)</title><rect x="1189.4" y="133" width="0.2" height="15.0" fill="rgb(217,167,34)" rx="2" ry="2" />
<text  x="1192.43" y="143.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:187 (134 samples, 0.93%)</title><rect x="170.8" y="341" width="10.9" height="15.0" fill="rgb(254,215,4)" rx="2" ry="2" />
<text  x="173.76" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (4 samples, 0.03%)</title><rect x="1183.1" y="37" width="0.3" height="15.0" fill="rgb(211,45,14)" rx="2" ry="2" />
<text  x="1186.12" y="47.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:82 (5 samples, 0.03%)</title><rect x="393.7" y="325" width="0.4" height="15.0" fill="rgb(228,23,20)" rx="2" ry="2" />
<text  x="396.72" y="335.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::decompress(char*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:168 (17 samples, 0.12%)</title><rect x="1178.9" y="117" width="1.4" height="15.0" fill="rgb(216,53,20)" rx="2" ry="2" />
<text  x="1181.94" y="127.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:201 (8 samples, 0.06%)</title><rect x="809.2" y="277" width="0.7" height="15.0" fill="rgb(217,80,6)" rx="2" ry="2" />
<text  x="812.23" y="287.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionCount::merge(char*, char const*, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionCount.h:48 (20 samples, 0.14%)</title><rect x="154.2" y="341" width="1.7" height="15.0" fill="rgb(225,33,19)" rx="2" ry="2" />
<text  x="157.21" y="351.5" ></text>
</g>
<g >
<title>arena_extent_alloc_large#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:383 (2 samples, 0.01%)</title><rect x="1189.4" y="117" width="0.2" height="15.0" fill="rgb(210,68,29)" rx="2" ry="2" />
<text  x="1192.43" y="127.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:188 (2 samples, 0.01%)</title><rect x="974.8" y="181" width="0.2" height="15.0" fill="rgb(213,134,50)" rx="2" ry="2" />
<text  x="977.83" y="191.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::readBig(char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:89 (49 samples, 0.34%)</title><rect x="916.3" y="165" width="4.0" height="15.0" fill="rgb(212,88,49)" rx="2" ry="2" />
<text  x="919.32" y="175.5" ></text>
</g>
<g >
<title>AllocatorWithStackMemory&lt;Allocator&lt;true, true&gt;, 64ul, 1ul&gt;::realloc(void*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:322 (3 samples, 0.02%)</title><rect x="180.6" y="325" width="0.2" height="15.0" fill="rgb(208,198,43)" rx="2" ry="2" />
<text  x="183.60" y="335.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:378 (7 samples, 0.05%)</title><rect x="936.3" y="229" width="0.6" height="15.0" fill="rgb(208,114,38)" rx="2" ry="2" />
<text  x="939.32" y="239.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:313 (2 samples, 0.01%)</title><rect x="1043.7" y="101" width="0.2" height="15.0" fill="rgb(240,42,14)" rx="2" ry="2" />
<text  x="1046.74" y="111.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;1&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:381 (2 samples, 0.01%)</title><rect x="1176.1" y="149" width="0.1" height="15.0" fill="rgb(212,111,23)" rx="2" ry="2" />
<text  x="1179.07" y="159.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:181 (224 samples, 1.56%)</title><rect x="954.3" y="181" width="18.4" height="15.0" fill="rgb(209,206,19)" rx="2" ry="2" />
<text  x="957.34" y="191.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:144 (34 samples, 0.24%)</title><rect x="1025.5" y="149" width="2.8" height="15.0" fill="rgb(243,131,15)" rx="2" ry="2" />
<text  x="1028.47" y="159.5" ></text>
</g>
<g >
<title>ThreadPoolImpl&lt;std::thread&gt;::worker(std::_List_iterator&lt;std::thread&gt;)#/usr/include/c++/9/bits/atomic_base.h:551 (4 samples, 0.03%)</title><rect x="1189.3" y="453" width="0.4" height="15.0" fill="rgb(241,212,38)" rx="2" ry="2" />
<text  x="1192.34" y="463.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2689 (12 samples, 0.08%)</title><rect x="1187.5" y="373" width="1.0" height="15.0" fill="rgb(229,62,21)" rx="2" ry="2" />
<text  x="1190.54" y="383.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:215 (6 samples, 0.04%)</title><rect x="456.9" y="325" width="0.5" height="15.0" fill="rgb(241,3,25)" rx="2" ry="2" />
<text  x="459.89" y="335.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:215 (479 samples, 3.33%)</title><rect x="447.5" y="341" width="39.2" height="15.0" fill="rgb(219,34,49)" rx="2" ry="2" />
<text  x="450.47" y="351.5" >voi..</text>
</g>
<g >
<title>DB::MergeTreeReader::readData(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, DB::IDataType const&amp;, DB::IColumn&amp;, unsigned long, bool, unsigned long, bool)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:258 (3 samples, 0.02%)</title><rect x="1189.4" y="197" width="0.3" height="15.0" fill="rgb(231,168,24)" rx="2" ry="2" />
<text  x="1192.43" y="207.5" ></text>
</g>
<g >
<title>DB::ParallelAggregatingBlockInputStream::execute()#/build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp:170 (7 samples, 0.05%)</title><rect x="23.4" y="165" width="0.6" height="15.0" fill="rgb(240,39,14)" rx="2" ry="2" />
<text  x="26.44" y="175.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock#/lib/x86_64-linux-gnu/libpthread-2.27.so (2 samples, 0.01%)</title><rect x="810.8" y="213" width="0.2" height="15.0" fill="rgb(247,226,36)" rx="2" ry="2" />
<text  x="813.79" y="223.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:703 (23 samples, 0.16%)</title><rect x="678.1" y="325" width="1.9" height="15.0" fill="rgb(243,79,29)" rx="2" ry="2" />
<text  x="681.13" y="335.5" ></text>
</g>
<g >
<title>extent_try_coalesce_impl#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1594 (2 samples, 0.01%)</title><rect x="1007.5" y="117" width="0.2" height="15.0" fill="rgb(247,145,2)" rx="2" ry="2" />
<text  x="1010.52" y="127.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/TwoLevelStringHashTable.h:146 (517 samples, 3.59%)</title><rect x="710.6" y="341" width="42.3" height="15.0" fill="rgb(208,47,1)" rx="2" ry="2" />
<text  x="713.58" y="351.5" >voi..</text>
</g>
<g >
<title>DB::ISource::work()#/usr/include/c++/9/bits/stl_vector.h:108 (3,319 samples, 23.05%)</title><rect x="915.1" y="309" width="272.0" height="15.0" fill="rgb(252,130,24)" rx="2" ry="2" />
<text  x="918.10" y="319.5" >DB::ISource::work()#/usr/include/c++..</text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1310 (4 samples, 0.03%)</title><rect x="241.7" y="357" width="0.4" height="15.0" fill="rgb(220,173,37)" rx="2" ry="2" />
<text  x="244.72" y="367.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:204 (3 samples, 0.02%)</title><rect x="983.4" y="181" width="0.2" height="15.0" fill="rgb(248,51,24)" rx="2" ry="2" />
<text  x="986.35" y="191.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::readFromPartImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:155 (2 samples, 0.01%)</title><rect x="916.1" y="277" width="0.1" height="15.0" fill="rgb(213,140,52)" rx="2" ry="2" />
<text  x="919.08" y="287.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:213 (9 samples, 0.06%)</title><rect x="181.0" y="309" width="0.7" height="15.0" fill="rgb(213,166,3)" rx="2" ry="2" />
<text  x="184.01" y="319.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:502 (194 samples, 1.35%)</title><rect x="916.2" y="261" width="15.9" height="15.0" fill="rgb(245,134,4)" rx="2" ry="2" />
<text  x="919.24" y="271.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:469 (2 samples, 0.01%)</title><rect x="1102.8" y="69" width="0.2" height="15.0" fill="rgb(254,109,19)" rx="2" ry="2" />
<text  x="1105.82" y="79.5" ></text>
</g>
<g >
<title>arena_slab_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:67 (2 samples, 0.01%)</title><rect x="340.7" y="229" width="0.2" height="15.0" fill="rgb(235,83,16)" rx="2" ry="2" />
<text  x="343.70" y="239.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:487 (5 samples, 0.03%)</title><rect x="271.0" y="277" width="0.4" height="15.0" fill="rgb(211,136,4)" rx="2" ry="2" />
<text  x="273.97" y="287.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:231 (3 samples, 0.02%)</title><rect x="218.3" y="341" width="0.2" height="15.0" fill="rgb(240,77,28)" rx="2" ry="2" />
<text  x="221.29" y="351.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:128 (23 samples, 0.16%)</title><rect x="952.4" y="181" width="1.9" height="15.0" fill="rgb(254,67,33)" rx="2" ry="2" />
<text  x="955.38" y="191.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:479 (13 samples, 0.09%)</title><rect x="1104.7" y="69" width="1.1" height="15.0" fill="rgb(248,189,48)" rx="2" ry="2" />
<text  x="1107.70" y="79.5" ></text>
</g>
<g >
<title>DB::Arena::alloc(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Arena.h:145 (11 samples, 0.08%)</title><rect x="377.0" y="341" width="0.9" height="15.0" fill="rgb(239,111,31)" rx="2" ry="2" />
<text  x="380.00" y="351.5" ></text>
</g>
<g >
<title>DB::ColumnConst::cloneResized(unsigned long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/COW.h:227 (2 samples, 0.01%)</title><rect x="942.7" y="181" width="0.2" height="15.0" fill="rgb(209,216,26)" rx="2" ry="2" />
<text  x="945.71" y="191.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:87 (8 samples, 0.06%)</title><rect x="394.2" y="325" width="0.7" height="15.0" fill="rgb(207,214,23)" rx="2" ry="2" />
<text  x="397.21" y="335.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (71 samples, 0.49%)</title><rect x="463.5" y="245" width="5.8" height="15.0" fill="rgb(245,87,43)" rx="2" ry="2" />
<text  x="466.53" y="255.5" ></text>
</g>
<g >
<title>extents_remove_locked.isra.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:340 (2 samples, 0.01%)</title><rect x="806.2" y="165" width="0.2" height="15.0" fill="rgb(236,168,23)" rx="2" ry="2" />
<text  x="809.20" y="175.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:292 (2 samples, 0.01%)</title><rect x="109.8" y="341" width="0.2" height="15.0" fill="rgb(227,161,28)" rx="2" ry="2" />
<text  x="112.80" y="351.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:573 (799 samples, 5.55%)</title><rect x="942.6" y="245" width="65.5" height="15.0" fill="rgb(222,127,21)" rx="2" ry="2" />
<text  x="945.63" y="255.5" >DB::Mer..</text>
</g>
<g >
<title>DB::AggregateFunctionCount::merge(char*, char const*, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionCount.h:49 (7 samples, 0.05%)</title><rect x="155.9" y="341" width="0.5" height="15.0" fill="rgb(239,61,16)" rx="2" ry="2" />
<text  x="158.85" y="351.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:62 (21 samples, 0.15%)</title><rect x="805.6" y="261" width="1.7" height="15.0" fill="rgb(235,119,12)" rx="2" ry="2" />
<text  x="808.63" y="271.5" ></text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:55 (2 samples, 0.01%)</title><rect x="460.3" y="197" width="0.1" height="15.0" fill="rgb(251,78,16)" rx="2" ry="2" />
<text  x="463.25" y="207.5" ></text>
</g>
<g >
<title>base_alloc_extent#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:232 (4 samples, 0.03%)</title><rect x="806.8" y="133" width="0.3" height="15.0" fill="rgb(241,182,8)" rx="2" ry="2" />
<text  x="809.77" y="143.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:430 (2 samples, 0.01%)</title><rect x="674.9" y="325" width="0.2" height="15.0" fill="rgb(211,16,38)" rx="2" ry="2" />
<text  x="677.93" y="335.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)#/usr/lib/debug/usr/bin/clickhouse (7 samples, 0.05%)</title><rect x="22.5" y="389" width="0.5" height="15.0" fill="rgb(206,46,46)" rx="2" ry="2" />
<text  x="25.45" y="399.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:196 (12 samples, 0.08%)</title><rect x="817.2" y="309" width="1.0" height="15.0" fill="rgb(241,128,38)" rx="2" ry="2" />
<text  x="820.18" y="319.5" ></text>
</g>
<g >
<title>operator new(unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/memory.h:45 (2 samples, 0.01%)</title><rect x="942.7" y="165" width="0.2" height="15.0" fill="rgb(239,12,52)" rx="2" ry="2" />
<text  x="945.71" y="175.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:118 (3 samples, 0.02%)</title><rect x="391.4" y="325" width="0.3" height="15.0" fill="rgb(227,104,40)" rx="2" ry="2" />
<text  x="394.42" y="335.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:697 (4 samples, 0.03%)</title><rect x="102.8" y="261" width="0.3" height="15.0" fill="rgb(215,11,20)" rx="2" ry="2" />
<text  x="105.75" y="271.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::getPermutation(bool, unsigned long, int, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;) const#/usr/include/c++/9/bits/stl_algo.h:1663 (4 samples, 0.03%)</title><rect x="24.4" y="213" width="0.3" height="15.0" fill="rgb(250,149,34)" rx="2" ry="2" />
<text  x="27.42" y="223.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:521 (2 samples, 0.01%)</title><rect x="1127.2" y="69" width="0.2" height="15.0" fill="rgb(245,65,1)" rx="2" ry="2" />
<text  x="1130.23" y="79.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:496 (4 samples, 0.03%)</title><rect x="1076.0" y="69" width="0.4" height="15.0" fill="rgb(223,0,34)" rx="2" ry="2" />
<text  x="1079.02" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:53 (1,213 samples, 8.42%)</title><rect x="1038.6" y="149" width="99.4" height="15.0" fill="rgb(208,49,45)" rx="2" ry="2" />
<text  x="1041.58" y="159.5" >void DB::des..</text>
</g>
<g >
<title>AllocatorWithStackMemory&lt;Allocator&lt;true, true&gt;, 64ul, 1ul&gt;::realloc(void*, unsigned long, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (10 samples, 0.07%)</title><rect x="180.9" y="325" width="0.8" height="15.0" fill="rgb(209,125,22)" rx="2" ry="2" />
<text  x="183.92" y="335.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (142 samples, 0.99%)</title><rect x="680.0" y="325" width="11.6" height="15.0" fill="rgb(207,158,19)" rx="2" ry="2" />
<text  x="683.01" y="335.5" ></text>
</g>
<g >
<title>CurrentMemoryTracker::alloc(long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/MemoryTracker.cpp:203 (2 samples, 0.01%)</title><rect x="810.2" y="277" width="0.2" height="15.0" fill="rgb(244,99,11)" rx="2" ry="2" />
<text  x="813.21" y="287.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (19 samples, 0.13%)</title><rect x="330.9" y="277" width="1.5" height="15.0" fill="rgb(238,124,18)" rx="2" ry="2" />
<text  x="333.87" y="287.5" ></text>
</g>
<g >
<title>extent_merge_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:223 (2 samples, 0.01%)</title><rect x="1187.7" y="293" width="0.2" height="15.0" fill="rgb(248,117,54)" rx="2" ry="2" />
<text  x="1190.71" y="303.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::decompress(char*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:168 (36 samples, 0.25%)</title><rect x="1182.2" y="85" width="3.0" height="15.0" fill="rgb(229,105,27)" rx="2" ry="2" />
<text  x="1185.22" y="95.5" ></text>
</g>
<g >
<title>DB::ThreadStatus::updatePerformanceCounters()#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ThreadProfileEvents.h:104 (2 samples, 0.01%)</title><rect x="1186.3" y="245" width="0.2" height="15.0" fill="rgb(249,149,26)" rx="2" ry="2" />
<text  x="1189.31" y="255.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (3 samples, 0.02%)</title><rect x="808.3" y="261" width="0.3" height="15.0" fill="rgb(207,40,37)" rx="2" ry="2" />
<text  x="811.33" y="271.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/usr/include/c++/9/memory:128 (2 samples, 0.01%)</title><rect x="906.6" y="341" width="0.1" height="15.0" fill="rgb(226,176,48)" rx="2" ry="2" />
<text  x="909.57" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:521 (2 samples, 0.01%)</title><rect x="926.1" y="101" width="0.1" height="15.0" fill="rgb(218,168,3)" rx="2" ry="2" />
<text  x="929.08" y="111.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (3 samples, 0.02%)</title><rect x="93.3" y="293" width="0.3" height="15.0" fill="rgb(242,122,44)" rx="2" ry="2" />
<text  x="96.33" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;DB::ColumnWithTypeAndName, std::allocator&lt;DB::ColumnWithTypeAndName&gt; &gt;::~vector()#/usr/include/c++/9/bits/shared_ptr_base.h:729 (2 samples, 0.01%)</title><rect x="944.7" y="165" width="0.1" height="15.0" fill="rgb(233,120,5)" rx="2" ry="2" />
<text  x="947.68" y="175.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:448 (4 samples, 0.03%)</title><rect x="1101.3" y="69" width="0.3" height="15.0" fill="rgb(218,179,24)" rx="2" ry="2" />
<text  x="1104.26" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:162 (28 samples, 0.19%)</title><rect x="1034.8" y="149" width="2.3" height="15.0" fill="rgb(229,124,36)" rx="2" ry="2" />
<text  x="1037.81" y="159.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt;::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionUniq.h:245 (11 samples, 0.08%)</title><rect x="249.8" y="293" width="0.9" height="15.0" fill="rgb(205,61,5)" rx="2" ry="2" />
<text  x="252.83" y="303.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;1&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (2 samples, 0.01%)</title><rect x="1178.0" y="149" width="0.1" height="15.0" fill="rgb(232,138,30)" rx="2" ry="2" />
<text  x="1180.96" y="159.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:130 (2 samples, 0.01%)</title><rect x="243.0" y="357" width="0.2" height="15.0" fill="rgb(224,132,47)" rx="2" ry="2" />
<text  x="246.03" y="367.5" ></text>
</g>
<g >
<title>arena_tcache_fill_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/ticker.h:67 (2 samples, 0.01%)</title><rect x="805.8" y="229" width="0.2" height="15.0" fill="rgb(240,36,47)" rx="2" ry="2" />
<text  x="808.79" y="239.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (20 samples, 0.14%)</title><rect x="23.1" y="261" width="1.6" height="15.0" fill="rgb(240,189,28)" rx="2" ry="2" />
<text  x="26.11" y="271.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (2 samples, 0.01%)</title><rect x="1177.6" y="69" width="0.2" height="15.0" fill="rgb(252,205,29)" rx="2" ry="2" />
<text  x="1180.63" y="79.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:214 (3 samples, 0.02%)</title><rect x="821.2" y="309" width="0.2" height="15.0" fill="rgb(224,201,6)" rx="2" ry="2" />
<text  x="824.19" y="319.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:124 (2 samples, 0.01%)</title><rect x="459.4" y="277" width="0.2" height="15.0" fill="rgb(246,87,19)" rx="2" ry="2" />
<text  x="462.43" y="287.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:561 (2 samples, 0.01%)</title><rect x="1180.2" y="85" width="0.1" height="15.0" fill="rgb(246,169,43)" rx="2" ry="2" />
<text  x="1183.17" y="95.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:374 (5 samples, 0.03%)</title><rect x="267.0" y="277" width="0.4" height="15.0" fill="rgb(252,89,53)" rx="2" ry="2" />
<text  x="269.96" y="287.5" ></text>
</g>
<g >
<title>large_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (2 samples, 0.01%)</title><rect x="1008.3" y="117" width="0.1" height="15.0" fill="rgb(206,161,43)" rx="2" ry="2" />
<text  x="1011.26" y="127.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::decompress(char*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:168 (96 samples, 0.67%)</title><rect x="920.6" y="149" width="7.9" height="15.0" fill="rgb(209,219,47)" rx="2" ry="2" />
<text  x="923.59" y="159.5" ></text>
</g>
<g >
<title>base_alloc_extent#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:232 (3 samples, 0.02%)</title><rect x="936.6" y="69" width="0.2" height="15.0" fill="rgb(234,132,30)" rx="2" ry="2" />
<text  x="939.56" y="79.5" ></text>
</g>
<g >
<title>large_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (2 samples, 0.01%)</title><rect x="459.4" y="261" width="0.2" height="15.0" fill="rgb(251,36,9)" rx="2" ry="2" />
<text  x="462.43" y="271.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (140 samples, 0.97%)</title><rect x="459.4" y="293" width="11.5" height="15.0" fill="rgb(213,128,29)" rx="2" ry="2" />
<text  x="462.43" y="303.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:397 (3 samples, 0.02%)</title><rect x="268.0" y="277" width="0.3" height="15.0" fill="rgb(212,3,0)" rx="2" ry="2" />
<text  x="271.03" y="287.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnVector.cpp:285 (29 samples, 0.20%)</title><rect x="932.5" y="229" width="2.4" height="15.0" fill="rgb(209,99,17)" rx="2" ry="2" />
<text  x="935.55" y="239.5" ></text>
</g>
<g >
<title>execute_native_thread_routine#/usr/lib/debug/usr/bin/clickhouse (14,234 samples, 98.84%)</title><rect x="22.5" y="453" width="1166.3" height="15.0" fill="rgb(228,185,48)" rx="2" ry="2" />
<text  x="25.45" y="463.5" >execute_native_thread_routine#/usr/lib/debug/usr/bin/clickhouse</text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (6 samples, 0.04%)</title><rect x="1127.4" y="69" width="0.5" height="15.0" fill="rgb(211,183,49)" rx="2" ry="2" />
<text  x="1130.40" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:608 (2 samples, 0.01%)</title><rect x="987.5" y="165" width="0.2" height="15.0" fill="rgb(246,6,18)" rx="2" ry="2" />
<text  x="990.53" y="175.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:162 (2 samples, 0.01%)</title><rect x="916.4" y="133" width="0.2" height="15.0" fill="rgb(219,151,34)" rx="2" ry="2" />
<text  x="919.41" y="143.5" ></text>
</g>
<g >
<title>DB::AggregatedDataVariants::convertToTwoLevel()#/usr/include/c++/9/bits/move.h:193 (14 samples, 0.10%)</title><rect x="911.2" y="357" width="1.2" height="15.0" fill="rgb(229,203,25)" rx="2" ry="2" />
<text  x="914.24" y="367.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:438 (2 samples, 0.01%)</title><rect x="1129.9" y="69" width="0.2" height="15.0" fill="rgb(251,131,26)" rx="2" ry="2" />
<text  x="1132.94" y="79.5" ></text>
</g>
<g >
<title>arena_ralloc_no_move#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:55 (10 samples, 0.07%)</title><rect x="807.3" y="245" width="0.9" height="15.0" fill="rgb(244,84,40)" rx="2" ry="2" />
<text  x="810.35" y="255.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (2 samples, 0.01%)</title><rect x="928.2" y="101" width="0.2" height="15.0" fill="rgb(206,175,34)" rx="2" ry="2" />
<text  x="931.21" y="111.5" ></text>
</g>
<g >
<title>arena_tcache_fill_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1307 (5 samples, 0.03%)</title><rect x="811.0" y="229" width="0.4" height="15.0" fill="rgb(245,122,18)" rx="2" ry="2" />
<text  x="813.95" y="239.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:31 (9 samples, 0.06%)</title><rect x="1177.1" y="133" width="0.7" height="15.0" fill="rgb(215,175,22)" rx="2" ry="2" />
<text  x="1180.05" y="143.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:116 (66 samples, 0.46%)</title><rect x="165.2" y="341" width="5.4" height="15.0" fill="rgb(225,67,51)" rx="2" ry="2" />
<text  x="168.19" y="351.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:134 (2,162 samples, 15.01%)</title><rect x="1008.2" y="197" width="177.1" height="15.0" fill="rgb(227,0,11)" rx="2" ry="2" />
<text  x="1011.18" y="207.5" >DB::MergeTreeReader::re..</text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:520 (26 samples, 0.18%)</title><rect x="1115.0" y="69" width="2.2" height="15.0" fill="rgb(209,50,26)" rx="2" ry="2" />
<text  x="1118.03" y="79.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (49 samples, 0.34%)</title><rect x="100.5" y="277" width="4.0" height="15.0" fill="rgb(234,167,25)" rx="2" ry="2" />
<text  x="103.46" y="287.5" ></text>
</g>
<g >
<title>DB::StringEqualsImpl&lt;false&gt;::string_vector_constant(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, unsigned long, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;)#/usr/lib/debug/usr/bin/clickhouse (74 samples, 0.51%)</title><rect x="945.7" y="133" width="6.0" height="15.0" fill="rgb(216,151,33)" rx="2" ry="2" />
<text  x="948.66" y="143.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionHelper&lt;DB::AggregateFunctionCount&gt;::addBatch(unsigned long, char**, unsigned long, DB::IColumn const**, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:174 (12 samples, 0.08%)</title><rect x="790.1" y="325" width="1.0" height="15.0" fill="rgb(231,50,1)" rx="2" ry="2" />
<text  x="793.14" y="335.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:129 (20 samples, 0.14%)</title><rect x="1021.5" y="149" width="1.7" height="15.0" fill="rgb(210,199,15)" rx="2" ry="2" />
<text  x="1024.53" y="159.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::create(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:292 (2 samples, 0.01%)</title><rect x="758.3" y="309" width="0.1" height="15.0" fill="rgb(249,52,25)" rx="2" ry="2" />
<text  x="761.26" y="319.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::readData(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, DB::IDataType const&amp;, DB::IColumn&amp;, unsigned long, bool, unsigned long, bool)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:258 (2,161 samples, 15.01%)</title><rect x="1008.2" y="181" width="177.0" height="15.0" fill="rgb(254,186,31)" rx="2" ry="2" />
<text  x="1011.18" y="191.5" >DB::MergeTreeReader::re..</text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:37 (2 samples, 0.01%)</title><rect x="156.8" y="325" width="0.1" height="15.0" fill="rgb(239,79,49)" rx="2" ry="2" />
<text  x="159.75" y="335.5" ></text>
</g>
<g >
<title>DB::Block::getPositionByName(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const#/usr/include/c++/9/bits/stl_tree.h:1015 (2 samples, 0.01%)</title><rect x="1007.9" y="213" width="0.2" height="15.0" fill="rgb(237,113,34)" rx="2" ry="2" />
<text  x="1010.93" y="223.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:438 (8 samples, 0.06%)</title><rect x="1069.4" y="69" width="0.6" height="15.0" fill="rgb(248,179,28)" rx="2" ry="2" />
<text  x="1072.39" y="79.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:554 (2 samples, 0.01%)</title><rect x="920.3" y="117" width="0.2" height="15.0" fill="rgb(244,208,27)" rx="2" ry="2" />
<text  x="923.34" y="127.5" ></text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1075 (9 samples, 0.06%)</title><rect x="806.5" y="181" width="0.8" height="15.0" fill="rgb(239,219,17)" rx="2" ry="2" />
<text  x="809.53" y="191.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:454 (2 samples, 0.01%)</title><rect x="675.3" y="325" width="0.1" height="15.0" fill="rgb(218,119,31)" rx="2" ry="2" />
<text  x="678.26" y="335.5" ></text>
</g>
<g >
<title>execute_native_thread_routine#/usr/lib/debug/usr/bin/clickhouse (4 samples, 0.03%)</title><rect x="1189.3" y="469" width="0.4" height="15.0" fill="rgb(223,169,51)" rx="2" ry="2" />
<text  x="1192.34" y="479.5" ></text>
</g>
<g >
<title>DB::TreeExecutorBlockInputStream::readImpl()#/usr/include/c++/9/bits/unique_ptr.h:154 (3,325 samples, 23.09%)</title><rect x="914.7" y="341" width="272.4" height="15.0" fill="rgb(205,95,52)" rx="2" ry="2" />
<text  x="917.69" y="351.5" >DB::TreeExecutorBlockInputStream::re..</text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:305 (31 samples, 0.22%)</title><rect x="1041.2" y="101" width="2.5" height="15.0" fill="rgb(254,21,42)" rx="2" ry="2" />
<text  x="1044.20" y="111.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/TwoLevelStringHashTable.h:125 (2 samples, 0.01%)</title><rect x="710.1" y="341" width="0.1" height="15.0" fill="rgb(216,139,4)" rx="2" ry="2" />
<text  x="713.08" y="351.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:178 (2 samples, 0.01%)</title><rect x="176.8" y="293" width="0.2" height="15.0" fill="rgb(229,127,34)" rx="2" ry="2" />
<text  x="179.83" y="303.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (2 samples, 0.01%)</title><rect x="1175.3" y="69" width="0.2" height="15.0" fill="rgb(249,224,28)" rx="2" ry="2" />
<text  x="1178.33" y="79.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:486 (2 samples, 0.01%)</title><rect x="1184.1" y="37" width="0.2" height="15.0" fill="rgb(229,70,19)" rx="2" ry="2" />
<text  x="1187.10" y="47.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:447 (33 samples, 0.23%)</title><rect x="1098.6" y="69" width="2.7" height="15.0" fill="rgb(246,65,4)" rx="2" ry="2" />
<text  x="1101.56" y="79.5" ></text>
</g>
<g >
<title>DB::ReadBufferFromFileDescriptor::nextImpl()#/usr/include/x86_64-linux-gnu/bits/unistd.h:44 (6 samples, 0.04%)</title><rect x="930.3" y="85" width="0.5" height="15.0" fill="rgb(240,14,37)" rx="2" ry="2" />
<text  x="933.34" y="95.5" ></text>
</g>
<g >
<title>pages_map#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/pages.c:83 (2 samples, 0.01%)</title><rect x="257.9" y="117" width="0.2" height="15.0" fill="rgb(217,55,52)" rx="2" ry="2" />
<text  x="260.95" y="127.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (4 samples, 0.03%)</title><rect x="804.4" y="245" width="0.3" height="15.0" fill="rgb(246,169,22)" rx="2" ry="2" />
<text  x="807.40" y="255.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/usr/lib/gcc/x86_64-linux-gnu/9/include/smmintrin.h:848 (7 samples, 0.05%)</title><rect x="909.4" y="341" width="0.6" height="15.0" fill="rgb(230,60,39)" rx="2" ry="2" />
<text  x="912.44" y="351.5" ></text>
</g>
<g >
<title>DB::IDataType::deserializeBinaryBulkWithMultipleStreams(DB::IColumn&amp;, unsigned long, DB::IDataType::DeserializeBinaryBulkSettings&amp;, std::shared_ptr&lt;DB::IDataType::DeserializeBinaryBulkState&gt;&amp;) const#/usr/include/c++/9/bits/std_function.h:690 (55 samples, 0.38%)</title><rect x="1180.7" y="165" width="4.5" height="15.0" fill="rgb(241,139,41)" rx="2" ry="2" />
<text  x="1183.74" y="175.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::rehash()#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:111 (2 samples, 0.01%)</title><rect x="870.8" y="293" width="0.2" height="15.0" fill="rgb(212,61,42)" rx="2" ry="2" />
<text  x="873.85" y="303.5" ></text>
</g>
<g >
<title>arena_tcache_fill_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:223 (2 samples, 0.01%)</title><rect x="810.8" y="229" width="0.2" height="15.0" fill="rgb(239,97,36)" rx="2" ry="2" />
<text  x="813.79" y="239.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (2 samples, 0.01%)</title><rect x="180.7" y="309" width="0.1" height="15.0" fill="rgb(233,91,35)" rx="2" ry="2" />
<text  x="183.68" y="319.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:413 (2 samples, 0.01%)</title><rect x="674.7" y="325" width="0.2" height="15.0" fill="rgb(238,79,26)" rx="2" ry="2" />
<text  x="677.69" y="335.5" ></text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:275 (4 samples, 0.03%)</title><rect x="806.0" y="181" width="0.4" height="15.0" fill="rgb(216,211,53)" rx="2" ry="2" />
<text  x="809.03" y="191.5" ></text>
</g>
<g >
<title>arena_tcache_fill_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1307 (2 samples, 0.01%)</title><rect x="911.2" y="293" width="0.2" height="15.0" fill="rgb(208,57,27)" rx="2" ry="2" />
<text  x="914.24" y="303.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1691 (23 samples, 0.16%)</title><rect x="177.5" y="293" width="1.9" height="15.0" fill="rgb(244,227,25)" rx="2" ry="2" />
<text  x="180.48" y="303.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:235 (12 samples, 0.08%)</title><rect x="921.3" y="101" width="1.0" height="15.0" fill="rgb(212,121,14)" rx="2" ry="2" />
<text  x="924.32" y="111.5" ></text>
</g>
<g >
<title>DB::ExpressionBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.h:90 (4 samples, 0.03%)</title><rect x="1189.3" y="389" width="0.4" height="15.0" fill="rgb(252,196,23)" rx="2" ry="2" />
<text  x="1192.34" y="399.5" ></text>
</g>
<g >
<title>large_ralloc_no_move#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:231 (3 samples, 0.02%)</title><rect x="258.1" y="213" width="0.3" height="15.0" fill="rgb(233,26,31)" rx="2" ry="2" />
<text  x="261.11" y="223.5" ></text>
</g>
<g >
<title>large_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:112 (6 samples, 0.04%)</title><rect x="1007.4" y="165" width="0.5" height="15.0" fill="rgb(213,110,6)" rx="2" ry="2" />
<text  x="1010.36" y="175.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::destroy(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:204 (5 samples, 0.03%)</title><rect x="335.8" y="293" width="0.4" height="15.0" fill="rgb(228,91,49)" rx="2" ry="2" />
<text  x="338.79" y="303.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:93 (4 samples, 0.03%)</title><rect x="677.1" y="325" width="0.3" height="15.0" fill="rgb(240,157,1)" rx="2" ry="2" />
<text  x="680.06" y="335.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:772 (486 samples, 3.37%)</title><rect x="667.7" y="341" width="39.8" height="15.0" fill="rgb(241,194,18)" rx="2" ry="2" />
<text  x="670.72" y="351.5" >voi..</text>
</g>
<g >
<title>DB::ParallelAggregatingBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp:60 (7 samples, 0.05%)</title><rect x="23.4" y="181" width="0.6" height="15.0" fill="rgb(251,88,27)" rx="2" ry="2" />
<text  x="26.44" y="191.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:439 (19 samples, 0.13%)</title><rect x="482.2" y="325" width="1.6" height="15.0" fill="rgb(214,0,29)" rx="2" ry="2" />
<text  x="485.21" y="335.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:215 (2 samples, 0.01%)</title><rect x="1189.4" y="165" width="0.2" height="15.0" fill="rgb(250,38,18)" rx="2" ry="2" />
<text  x="1192.43" y="175.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (7 samples, 0.05%)</title><rect x="103.1" y="261" width="0.6" height="15.0" fill="rgb(214,213,35)" rx="2" ry="2" />
<text  x="106.08" y="271.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:357 (28 samples, 0.19%)</title><rect x="98.0" y="341" width="2.3" height="15.0" fill="rgb(236,135,40)" rx="2" ry="2" />
<text  x="101.00" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2261 (2 samples, 0.01%)</title><rect x="942.7" y="149" width="0.2" height="15.0" fill="rgb(237,195,23)" rx="2" ry="2" />
<text  x="945.71" y="159.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:131 (16 samples, 0.11%)</title><rect x="1138.2" y="149" width="1.3" height="15.0" fill="rgb(222,195,46)" rx="2" ry="2" />
<text  x="1141.21" y="159.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (6 samples, 0.04%)</title><rect x="926.4" y="101" width="0.5" height="15.0" fill="rgb(220,36,50)" rx="2" ry="2" />
<text  x="929.40" y="111.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:31 (925 samples, 6.42%)</title><rect x="1062.0" y="133" width="75.8" height="15.0" fill="rgb(242,60,5)" rx="2" ry="2" />
<text  x="1065.01" y="143.5" >DB::Comp..</text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:703 (5 samples, 0.03%)</title><rect x="959.8" y="165" width="0.4" height="15.0" fill="rgb(212,68,16)" rx="2" ry="2" />
<text  x="962.83" y="175.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:204 (14 samples, 0.10%)</title><rect x="1010.6" y="149" width="1.2" height="15.0" fill="rgb(248,177,44)" rx="2" ry="2" />
<text  x="1013.64" y="159.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (3 samples, 0.02%)</title><rect x="93.3" y="325" width="0.3" height="15.0" fill="rgb(254,22,45)" rx="2" ry="2" />
<text  x="96.33" y="335.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:479 (8 samples, 0.06%)</title><rect x="270.3" y="277" width="0.7" height="15.0" fill="rgb(241,64,26)" rx="2" ry="2" />
<text  x="273.32" y="287.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:190 (19 samples, 0.13%)</title><rect x="181.7" y="341" width="1.6" height="15.0" fill="rgb(253,75,8)" rx="2" ry="2" />
<text  x="184.74" y="351.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (51 samples, 0.35%)</title><rect x="100.3" y="293" width="4.2" height="15.0" fill="rgb(232,49,13)" rx="2" ry="2" />
<text  x="103.30" y="303.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/usr/include/c++/9/memory:130 (2 samples, 0.01%)</title><rect x="906.7" y="341" width="0.2" height="15.0" fill="rgb(242,16,4)" rx="2" ry="2" />
<text  x="909.74" y="351.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:370 (46 samples, 0.32%)</title><rect x="226.6" y="341" width="3.7" height="15.0" fill="rgb(250,182,42)" rx="2" ry="2" />
<text  x="229.56" y="351.5" ></text>
</g>
<g >
<title>pow#/build/obj-x86_64-linux-gnu/../libs/libglibc-compatibility/musl/pow.c:30 (2 samples, 0.01%)</title><rect x="1189.1" y="485" width="0.2" height="15.0" fill="rgb(247,209,32)" rx="2" ry="2" />
<text  x="1192.10" y="495.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;3&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:381 (2 samples, 0.01%)</title><rect x="1174.1" y="149" width="0.2" height="15.0" fill="rgb(234,163,15)" rx="2" ry="2" />
<text  x="1177.10" y="159.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:22 (6 samples, 0.04%)</title><rect x="1176.6" y="133" width="0.5" height="15.0" fill="rgb(207,72,11)" rx="2" ry="2" />
<text  x="1179.56" y="143.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:438 (6 samples, 0.04%)</title><rect x="268.9" y="277" width="0.5" height="15.0" fill="rgb(239,83,50)" rx="2" ry="2" />
<text  x="271.93" y="287.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:193 (2 samples, 0.01%)</title><rect x="672.7" y="325" width="0.2" height="15.0" fill="rgb(212,35,18)" rx="2" ry="2" />
<text  x="675.72" y="335.5" ></text>
</g>
<g >
<title>DB::TreeExecutorBlockInputStream::readImpl()#/usr/include/c++/9/bits/alloc_traits.h:470 (2 samples, 0.01%)</title><rect x="914.2" y="341" width="0.2" height="15.0" fill="rgb(252,201,12)" rx="2" ry="2" />
<text  x="917.19" y="351.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:397 (3 samples, 0.02%)</title><rect x="674.0" y="325" width="0.3" height="15.0" fill="rgb(221,118,43)" rx="2" ry="2" />
<text  x="677.03" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:235 (2 samples, 0.01%)</title><rect x="1174.9" y="69" width="0.2" height="15.0" fill="rgb(242,87,36)" rx="2" ry="2" />
<text  x="1177.92" y="79.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (6 samples, 0.04%)</title><rect x="486.2" y="325" width="0.5" height="15.0" fill="rgb(228,141,22)" rx="2" ry="2" />
<text  x="489.23" y="335.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:22 (17 samples, 0.12%)</title><rect x="1180.8" y="101" width="1.4" height="15.0" fill="rgb(245,24,39)" rx="2" ry="2" />
<text  x="1183.82" y="111.5" ></text>
</g>
<g >
<title>extent_split_interior.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1021 (2 samples, 0.01%)</title><rect x="911.2" y="229" width="0.2" height="15.0" fill="rgb(215,29,14)" rx="2" ry="2" />
<text  x="914.24" y="239.5" ></text>
</g>
<g >
<title>void std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;::_M_realloc_insert&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt;(__gnu_cxx::__normal_iterator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;*, std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt; &gt;, COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;&amp;&amp;)#/usr/include/c++/9/ext/new_allocator.h:128 (2 samples, 0.01%)</title><rect x="375.9" y="357" width="0.1" height="15.0" fill="rgb(242,109,6)" rx="2" ry="2" />
<text  x="378.86" y="367.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt;::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionUniq.h:242 (7 samples, 0.05%)</title><rect x="248.7" y="293" width="0.6" height="15.0" fill="rgb(217,111,46)" rx="2" ry="2" />
<text  x="251.69" y="303.5" ></text>
</g>
<g >
<title>DB::MergeTreeThreadSelectBlockInputProcessor::getNewTask()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeThreadSelectBlockInputProcessor.cpp:66 (2 samples, 0.01%)</title><rect x="915.3" y="277" width="0.2" height="15.0" fill="rgb(238,138,54)" rx="2" ry="2" />
<text  x="918.34" y="287.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::fillMissingColumns(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, bool&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:286 (2 samples, 0.01%)</title><rect x="942.5" y="229" width="0.1" height="15.0" fill="rgb(231,98,18)" rx="2" ry="2" />
<text  x="945.46" y="239.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:381 (41 samples, 0.28%)</title><rect x="1013.3" y="149" width="3.4" height="15.0" fill="rgb(234,124,11)" rx="2" ry="2" />
<text  x="1016.34" y="159.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:217 (6 samples, 0.04%)</title><rect x="1011.8" y="149" width="0.5" height="15.0" fill="rgb(250,2,0)" rx="2" ry="2" />
<text  x="1014.78" y="159.5" ></text>
</g>
<g >
<title>DB::MergingAndConvertingBlockInputStream::thread(int, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;)#/usr/include/c++/9/bits/stl_vector.h:711 (1,607 samples, 11.16%)</title><rect x="243.9" y="373" width="131.7" height="15.0" fill="rgb(210,61,10)" rx="2" ry="2" />
<text  x="246.94" y="383.5" >DB::MergingAndCo..</text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:173 (111 samples, 0.77%)</title><rect x="802.9" y="309" width="9.1" height="15.0" fill="rgb(218,192,7)" rx="2" ry="2" />
<text  x="805.92" y="319.5" ></text>
</g>
<g >
<title>DB::Arena::alloc(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Arena.h:152 (2 samples, 0.01%)</title><rect x="909.3" y="325" width="0.1" height="15.0" fill="rgb(211,190,48)" rx="2" ry="2" />
<text  x="912.28" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:449 (2 samples, 0.01%)</title><rect x="1101.6" y="69" width="0.2" height="15.0" fill="rgb(236,24,26)" rx="2" ry="2" />
<text  x="1104.59" y="79.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/StringHashTable.h:16 (2 samples, 0.01%)</title><rect x="708.9" y="341" width="0.1" height="15.0" fill="rgb(231,162,34)" rx="2" ry="2" />
<text  x="711.86" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/TwoLevelStringHashTable.h:90 (6 samples, 0.04%)</title><rect x="753.5" y="341" width="0.5" height="15.0" fill="rgb(238,71,22)" rx="2" ry="2" />
<text  x="756.51" y="351.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::startReadingChain(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:219 (2,164 samples, 15.03%)</title><rect x="1008.2" y="229" width="177.3" height="15.0" fill="rgb(254,193,1)" rx="2" ry="2" />
<text  x="1011.18" y="239.5" >DB::MergeTreeRangeReade..</text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:454 (9 samples, 0.06%)</title><rect x="1073.0" y="69" width="0.7" height="15.0" fill="rgb(239,68,40)" rx="2" ry="2" />
<text  x="1075.99" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/BufferBase.h:81 (15 samples, 0.10%)</title><rect x="1037.3" y="149" width="1.3" height="15.0" fill="rgb(237,97,28)" rx="2" ry="2" />
<text  x="1040.35" y="159.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (2 samples, 0.01%)</title><rect x="920.2" y="149" width="0.1" height="15.0" fill="rgb(214,184,6)" rx="2" ry="2" />
<text  x="923.18" y="159.5" ></text>
</g>
<g >
<title>DB::StringEqualsImpl&lt;false&gt;::string_vector_constant(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, unsigned long, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;)#/usr/lib/debug/usr/bin/clickhouse (6 samples, 0.04%)</title><rect x="19.7" y="485" width="0.5" height="15.0" fill="rgb(209,194,31)" rx="2" ry="2" />
<text  x="22.67" y="495.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::startReadingChain(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:219 (3 samples, 0.02%)</title><rect x="1189.4" y="245" width="0.3" height="15.0" fill="rgb(241,85,35)" rx="2" ry="2" />
<text  x="1192.43" y="255.5" ></text>
</g>
<g >
<title>DB::Aggregator::executeOnBlock(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;, unsigned long, DB::AggregatedDataVariants&amp;, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, std::vector&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;, std::allocator&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt; &gt; &gt;&amp;, bool&amp;)#/usr/include/c++/9/bits/stl_algobase.h:758 (4 samples, 0.03%)</title><rect x="912.6" y="373" width="0.3" height="15.0" fill="rgb(208,160,43)" rx="2" ry="2" />
<text  x="915.56" y="383.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:481 (2 samples, 0.01%)</title><rect x="756.3" y="341" width="0.2" height="15.0" fill="rgb(244,58,13)" rx="2" ry="2" />
<text  x="759.30" y="351.5" ></text>
</g>
<g >
<title>CRC32Hash::operator()(StringRef) const [clone .isra.0]#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:256 (410 samples, 2.85%)</title><rect x="715.2" y="325" width="33.6" height="15.0" fill="rgb(250,178,1)" rx="2" ry="2" />
<text  x="718.25" y="335.5" >CR..</text>
</g>
<g >
<title>extent_recycle#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1075 (2 samples, 0.01%)</title><rect x="811.1" y="181" width="0.2" height="15.0" fill="rgb(230,162,14)" rx="2" ry="2" />
<text  x="814.12" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ColumnsHashing.h:87 (42 samples, 0.29%)</title><rect x="380.6" y="341" width="3.5" height="15.0" fill="rgb(249,116,36)" rx="2" ry="2" />
<text  x="383.61" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:372 (8 samples, 0.06%)</title><rect x="1127.9" y="69" width="0.6" height="15.0" fill="rgb(211,159,30)" rx="2" ry="2" />
<text  x="1130.89" y="79.5" ></text>
</g>
<g >
<title>__libc_calloc#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71 (3 samples, 0.02%)</title><rect x="811.7" y="261" width="0.2" height="15.0" fill="rgb(226,211,43)" rx="2" ry="2" />
<text  x="814.69" y="271.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:194 (22 samples, 0.15%)</title><rect x="1008.8" y="149" width="1.8" height="15.0" fill="rgb(217,8,41)" rx="2" ry="2" />
<text  x="1011.83" y="159.5" ></text>
</g>
<g >
<title>DB::Aggregator::createAggregateStates(char*&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:364 (7 samples, 0.05%)</title><rect x="776.2" y="325" width="0.6" height="15.0" fill="rgb(230,46,36)" rx="2" ry="2" />
<text  x="779.21" y="335.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:469 (11 samples, 0.08%)</title><rect x="755.2" y="341" width="0.9" height="15.0" fill="rgb(241,228,20)" rx="2" ry="2" />
<text  x="758.23" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:438 (7 samples, 0.05%)</title><rect x="1097.0" y="69" width="0.6" height="15.0" fill="rgb(241,79,7)" rx="2" ry="2" />
<text  x="1100.00" y="79.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1486 (12 samples, 0.08%)</title><rect x="101.8" y="261" width="1.0" height="15.0" fill="rgb(229,118,1)" rx="2" ry="2" />
<text  x="104.77" y="271.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:561 (4 samples, 0.03%)</title><rect x="1184.8" y="53" width="0.4" height="15.0" fill="rgb(251,3,14)" rx="2" ry="2" />
<text  x="1187.84" y="63.5" ></text>
</g>
<g >
<title>large_ralloc_no_move#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:231 (4 samples, 0.03%)</title><rect x="460.3" y="245" width="0.3" height="15.0" fill="rgb(206,157,43)" rx="2" ry="2" />
<text  x="463.25" y="255.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::DelayedStream::finalize(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:34 (3 samples, 0.02%)</title><rect x="1189.4" y="229" width="0.3" height="15.0" fill="rgb(235,55,21)" rx="2" ry="2" />
<text  x="1192.43" y="239.5" ></text>
</g>
<g >
<title>arena_decay_to_limit#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:820 (2 samples, 0.01%)</title><rect x="177.1" y="229" width="0.1" height="15.0" fill="rgb(215,20,0)" rx="2" ry="2" />
<text  x="180.07" y="239.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:496 (10 samples, 0.07%)</title><rect x="902.0" y="341" width="0.8" height="15.0" fill="rgb(242,13,48)" rx="2" ry="2" />
<text  x="904.99" y="351.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:149 (58 samples, 0.40%)</title><rect x="1028.3" y="149" width="4.7" height="15.0" fill="rgb(235,89,4)" rx="2" ry="2" />
<text  x="1031.25" y="159.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:604 (276 samples, 1.92%)</title><rect x="272.8" y="277" width="22.6" height="15.0" fill="rgb(207,19,1)" rx="2" ry="2" />
<text  x="275.78" y="287.5" >m..</text>
</g>
<g >
<title>extent_dalloc_wrapper#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1808 (2 samples, 0.01%)</title><rect x="177.1" y="213" width="0.1" height="15.0" fill="rgb(215,80,3)" rx="2" ry="2" />
<text  x="180.07" y="223.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:72 (10 samples, 0.07%)</title><rect x="446.7" y="341" width="0.8" height="15.0" fill="rgb(206,183,30)" rx="2" ry="2" />
<text  x="449.65" y="351.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:554 (3 samples, 0.02%)</title><rect x="942.4" y="245" width="0.2" height="15.0" fill="rgb(240,131,8)" rx="2" ry="2" />
<text  x="945.38" y="255.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:358 (2 samples, 0.01%)</title><rect x="266.6" y="277" width="0.1" height="15.0" fill="rgb(232,7,54)" rx="2" ry="2" />
<text  x="269.55" y="287.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:31 (36 samples, 0.25%)</title><rect x="1182.2" y="101" width="3.0" height="15.0" fill="rgb(208,143,45)" rx="2" ry="2" />
<text  x="1185.22" y="111.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:597 (4 samples, 0.03%)</title><rect x="956.8" y="165" width="0.3" height="15.0" fill="rgb(237,39,18)" rx="2" ry="2" />
<text  x="959.80" y="175.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (385 samples, 2.67%)</title><rect x="1142.5" y="149" width="31.5" height="15.0" fill="rgb(219,210,29)" rx="2" ry="2" />
<text  x="1145.48" y="159.5" >vo..</text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:133 (11 samples, 0.08%)</title><rect x="1140.8" y="149" width="0.9" height="15.0" fill="rgb(244,117,24)" rx="2" ry="2" />
<text  x="1143.84" y="159.5" ></text>
</g>
<g >
<title>extent_split_interior.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1021 (2 samples, 0.01%)</title><rect x="811.1" y="165" width="0.2" height="15.0" fill="rgb(240,205,4)" rx="2" ry="2" />
<text  x="814.12" y="175.5" ></text>
</g>
<g >
<title>arena_bin_malloc_hard#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1169 (16 samples, 0.11%)</title><rect x="806.0" y="213" width="1.3" height="15.0" fill="rgb(238,25,39)" rx="2" ry="2" />
<text  x="809.03" y="223.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:52 (6 samples, 0.04%)</title><rect x="1126.7" y="69" width="0.5" height="15.0" fill="rgb(251,196,44)" rx="2" ry="2" />
<text  x="1129.74" y="79.5" ></text>
</g>
<g >
<title>DB::SourceWithProgress::progress(DB::Progress const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Processors/Sources/SourceWithProgress.cpp:68 (2 samples, 0.01%)</title><rect x="1186.3" y="261" width="0.2" height="15.0" fill="rgb(227,143,2)" rx="2" ry="2" />
<text  x="1189.31" y="271.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (2 samples, 0.01%)</title><rect x="1081.6" y="69" width="0.2" height="15.0" fill="rgb(249,68,41)" rx="2" ry="2" />
<text  x="1084.60" y="79.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:31 (17 samples, 0.12%)</title><rect x="1178.9" y="133" width="1.4" height="15.0" fill="rgb(225,167,10)" rx="2" ry="2" />
<text  x="1181.94" y="143.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:659 (8 samples, 0.06%)</title><rect x="101.1" y="261" width="0.7" height="15.0" fill="rgb(250,202,11)" rx="2" ry="2" />
<text  x="104.12" y="271.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:314 (22 samples, 0.15%)</title><rect x="1043.9" y="101" width="1.8" height="15.0" fill="rgb(209,0,15)" rx="2" ry="2" />
<text  x="1046.90" y="111.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1311 (772 samples, 5.36%)</title><rect x="28.1" y="341" width="63.3" height="15.0" fill="rgb(239,158,4)" rx="2" ry="2" />
<text  x="31.11" y="351.5" >memequ..</text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:366 (2 samples, 0.01%)</title><rect x="266.7" y="277" width="0.2" height="15.0" fill="rgb(210,148,29)" rx="2" ry="2" />
<text  x="269.71" y="287.5" ></text>
</g>
<g >
<title>DB::CurrentThread::getMemoryTracker()#/build/obj-x86_64-linux-gnu/../dbms/src/Common/CurrentThread.cpp:49 (2 samples, 0.01%)</title><rect x="810.2" y="261" width="0.2" height="15.0" fill="rgb(246,15,15)" rx="2" ry="2" />
<text  x="813.21" y="271.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::Arena*, unsigned long, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, DB::Aggregator::AggregateFunctionInstruction*, bool, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:398 (6,505 samples, 45.17%)</title><rect x="377.0" y="357" width="533.0" height="15.0" fill="rgb(254,98,37)" rx="2" ry="2" />
<text  x="380.00" y="367.5" >void DB::Aggregator::executeImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLe..</text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:490 (7 samples, 0.05%)</title><rect x="1108.4" y="69" width="0.6" height="15.0" fill="rgb(224,161,45)" rx="2" ry="2" />
<text  x="1111.39" y="79.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:87 (18 samples, 0.12%)</title><rect x="26.1" y="341" width="1.5" height="15.0" fill="rgb(205,1,8)" rx="2" ry="2" />
<text  x="29.14" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:215 (5 samples, 0.03%)</title><rect x="376.3" y="341" width="0.4" height="15.0" fill="rgb(234,206,39)" rx="2" ry="2" />
<text  x="379.27" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:235 (74 samples, 0.51%)</title><rect x="1086.7" y="69" width="6.0" height="15.0" fill="rgb(229,124,0)" rx="2" ry="2" />
<text  x="1089.68" y="79.5" ></text>
</g>
<g >
<title>CRC32Hash::operator()(StringRef) const [clone .isra.0]#/usr/lib/gcc/x86_64-linux-gnu/9/include/smmintrin.h:848 (11 samples, 0.08%)</title><rect x="752.0" y="325" width="0.9" height="15.0" fill="rgb(232,57,44)" rx="2" ry="2" />
<text  x="755.04" y="335.5" ></text>
</g>
<g >
<title>DB::DataTypeString::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:97 (3 samples, 0.02%)</title><rect x="1008.2" y="165" width="0.2" height="15.0" fill="rgb(243,106,15)" rx="2" ry="2" />
<text  x="1011.18" y="175.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (126 samples, 0.87%)</title><rect x="460.6" y="261" width="10.3" height="15.0" fill="rgb(227,60,25)" rx="2" ry="2" />
<text  x="463.58" y="271.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (2 samples, 0.01%)</title><rect x="459.4" y="229" width="0.2" height="15.0" fill="rgb(234,10,3)" rx="2" ry="2" />
<text  x="462.43" y="239.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1311 (585 samples, 4.06%)</title><rect x="397.6" y="325" width="47.9" height="15.0" fill="rgb(242,107,25)" rx="2" ry="2" />
<text  x="400.57" y="335.5" >meme..</text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnVector.cpp:270 (4 samples, 0.03%)</title><rect x="932.1" y="229" width="0.4" height="15.0" fill="rgb(218,112,22)" rx="2" ry="2" />
<text  x="935.14" y="239.5" ></text>
</g>
<g >
<title>extent_record#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1700 (10 samples, 0.07%)</title><rect x="1187.5" y="325" width="0.9" height="15.0" fill="rgb(248,137,10)" rx="2" ry="2" />
<text  x="1190.54" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock#/lib/x86_64-linux-gnu/libpthread-2.27.so (2 samples, 0.01%)</title><rect x="936.4" y="69" width="0.2" height="15.0" fill="rgb(228,229,32)" rx="2" ry="2" />
<text  x="939.40" y="79.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:472 (5 samples, 0.03%)</title><rect x="1103.0" y="69" width="0.4" height="15.0" fill="rgb(254,27,10)" rx="2" ry="2" />
<text  x="1105.98" y="79.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:274 (6 samples, 0.04%)</title><rect x="870.8" y="309" width="0.5" height="15.0" fill="rgb(239,206,52)" rx="2" ry="2" />
<text  x="873.77" y="319.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::filterColumns(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;) const#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:115 (123 samples, 0.85%)</title><rect x="932.1" y="245" width="10.1" height="15.0" fill="rgb(244,42,38)" rx="2" ry="2" />
<text  x="935.14" y="255.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:377 (13 samples, 0.09%)</title><rect x="1012.3" y="149" width="1.0" height="15.0" fill="rgb(232,114,9)" rx="2" ry="2" />
<text  x="1015.27" y="159.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:54 (19 samples, 0.13%)</title><rect x="918.6" y="149" width="1.6" height="15.0" fill="rgb(213,132,47)" rx="2" ry="2" />
<text  x="921.62" y="159.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (3,334 samples, 23.15%)</title><rect x="913.9" y="357" width="273.2" height="15.0" fill="rgb(231,99,19)" rx="2" ry="2" />
<text  x="916.95" y="367.5" >DB::IBlockInputStream::read()#/usr/i..</text>
</g>
<g >
<title>__libc_calloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:94 (4 samples, 0.03%)</title><rect x="811.4" y="261" width="0.3" height="15.0" fill="rgb(239,186,39)" rx="2" ry="2" />
<text  x="814.36" y="271.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/StringHashMap.h:44 (2 samples, 0.01%)</title><rect x="707.9" y="341" width="0.1" height="15.0" fill="rgb(242,70,53)" rx="2" ry="2" />
<text  x="710.87" y="351.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:471 (2 samples, 0.01%)</title><rect x="756.1" y="341" width="0.2" height="15.0" fill="rgb(250,222,24)" rx="2" ry="2" />
<text  x="759.13" y="351.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:199 (21 samples, 0.15%)</title><rect x="184.0" y="341" width="1.7" height="15.0" fill="rgb(225,51,8)" rx="2" ry="2" />
<text  x="186.96" y="351.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:98 (5 samples, 0.03%)</title><rect x="396.1" y="325" width="0.4" height="15.0" fill="rgb(241,165,14)" rx="2" ry="2" />
<text  x="399.10" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:520 (6 samples, 0.04%)</title><rect x="1132.6" y="69" width="0.5" height="15.0" fill="rgb(238,25,4)" rx="2" ry="2" />
<text  x="1135.64" y="79.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:124 (86 samples, 0.60%)</title><rect x="449.5" y="325" width="7.1" height="15.0" fill="rgb(212,187,52)" rx="2" ry="2" />
<text  x="452.52" y="335.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::destroy(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:101 (376 samples, 2.61%)</title><rect x="343.0" y="293" width="30.8" height="15.0" fill="rgb(209,22,44)" rx="2" ry="2" />
<text  x="346.00" y="303.5" >DB..</text>
</g>
<g >
<title>DB::AggregateFunctionCount::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:377 (2 samples, 0.01%)</title><rect x="246.8" y="293" width="0.2" height="15.0" fill="rgb(241,90,14)" rx="2" ry="2" />
<text  x="249.80" y="303.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:28 (10 samples, 0.07%)</title><rect x="92.3" y="357" width="0.8" height="15.0" fill="rgb(205,50,19)" rx="2" ry="2" />
<text  x="95.27" y="367.5" ></text>
</g>
<g >
<title>DB::Aggregator::executeOnBlock(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;, unsigned long, DB::AggregatedDataVariants&amp;, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, std::vector&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;, std::allocator&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt; &gt; &gt;&amp;, bool&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:620 (15 samples, 0.10%)</title><rect x="910.0" y="373" width="1.2" height="15.0" fill="rgb(240,59,16)" rx="2" ry="2" />
<text  x="913.02" y="383.5" ></text>
</g>
<g >
<title>extent_split_impl.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:235 (2 samples, 0.01%)</title><rect x="936.4" y="85" width="0.2" height="15.0" fill="rgb(245,202,45)" rx="2" ry="2" />
<text  x="939.40" y="95.5" ></text>
</g>
<g >
<title>ThreadFromGlobalPool::ThreadFromGlobalPool&lt;void (DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::*)(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long), DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;*, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long&amp;&gt;(void (DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::*&amp;&amp;)(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long), DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;*&amp;&amp;, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;&amp;&amp;, unsigned long&amp;)::{lambda()#1}::operator()() const#/usr/include/c++/9/bits/shared_ptr_base.h:729 (9,924 samples, 68.91%)</title><rect x="375.6" y="421" width="813.2" height="15.0" fill="rgb(216,77,13)" rx="2" ry="2" />
<text  x="378.61" y="431.5" >ThreadFromGlobalPool::ThreadFromGlobalPool&lt;void (DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputSt..</text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (6 samples, 0.04%)</title><rect x="176.3" y="277" width="0.5" height="15.0" fill="rgb(219,102,34)" rx="2" ry="2" />
<text  x="179.34" y="287.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Arena.h:171 (2 samples, 0.01%)</title><rect x="378.2" y="341" width="0.1" height="15.0" fill="rgb(253,216,4)" rx="2" ry="2" />
<text  x="381.15" y="351.5" ></text>
</g>
<g >
<title>DB::ExpressionBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.h:90 (3,339 samples, 23.19%)</title><rect x="913.5" y="373" width="273.6" height="15.0" fill="rgb(233,30,20)" rx="2" ry="2" />
<text  x="916.54" y="383.5" >DB::ExpressionBlockInputStream::read..</text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (2 samples, 0.01%)</title><rect x="927.1" y="101" width="0.1" height="15.0" fill="rgb(213,120,14)" rx="2" ry="2" />
<text  x="930.06" y="111.5" ></text>
</g>
<g >
<title>DB::MergeTreeBlockSizePredictor::startBlock()#/usr/include/c++/9/bits/stl_iterator.h:829 (2 samples, 0.01%)</title><rect x="915.9" y="261" width="0.2" height="15.0" fill="rgb(232,51,50)" rx="2" ry="2" />
<text  x="918.91" y="271.5" ></text>
</g>
<g >
<title>DB::Aggregator::executeOnBlock(DB::Block const&amp;, DB::AggregatedDataVariants&amp;, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, std::vector&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;, std::allocator&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt; &gt; &gt;&amp;, bool&amp;)#/usr/include/c++/9/bits/stl_vector.h:677 (6,559 samples, 45.55%)</title><rect x="375.7" y="389" width="537.4" height="15.0" fill="rgb(250,63,25)" rx="2" ry="2" />
<text  x="378.69" y="399.5" >DB::Aggregator::executeOnBlock(DB::Block const&amp;, DB::AggregatedDataVarian..</text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (11 samples, 0.08%)</title><rect x="23.1" y="197" width="0.9" height="15.0" fill="rgb(226,88,32)" rx="2" ry="2" />
<text  x="26.11" y="207.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:486 (2 samples, 0.01%)</title><rect x="1179.3" y="69" width="0.2" height="15.0" fill="rgb(211,138,27)" rx="2" ry="2" />
<text  x="1182.35" y="79.5" ></text>
</g>
<g >
<title>large_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:346 (2 samples, 0.01%)</title><rect x="902.6" y="293" width="0.1" height="15.0" fill="rgb(209,73,36)" rx="2" ry="2" />
<text  x="905.56" y="303.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:357 (458 samples, 3.18%)</title><rect x="111.0" y="357" width="37.6" height="15.0" fill="rgb(223,106,42)" rx="2" ry="2" />
<text  x="114.03" y="367.5" >voi..</text>
</g>
<g >
<title>arena_dalloc_bin_junked_locked#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:165 (3 samples, 0.02%)</title><rect x="340.7" y="245" width="0.3" height="15.0" fill="rgb(254,52,53)" rx="2" ry="2" />
<text  x="343.70" y="255.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (2 samples, 0.01%)</title><rect x="258.4" y="213" width="0.1" height="15.0" fill="rgb(224,157,41)" rx="2" ry="2" />
<text  x="261.36" y="223.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::readFromPartImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:164 (3,291 samples, 22.85%)</title><rect x="916.2" y="277" width="269.7" height="15.0" fill="rgb(254,173,39)" rx="2" ry="2" />
<text  x="919.24" y="287.5" >DB::MergeTreeBaseSelectProcessor::re..</text>
</g>
<g >
<title>DB::TreeExecutorBlockInputStream::execute()#/build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/TreeExecutorBlockInputStream.cpp:154 (4 samples, 0.03%)</title><rect x="1189.3" y="341" width="0.4" height="15.0" fill="rgb(205,187,18)" rx="2" ry="2" />
<text  x="1192.34" y="351.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::destroy(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:304 (2 samples, 0.01%)</title><rect x="374.6" y="293" width="0.2" height="15.0" fill="rgb(216,166,29)" rx="2" ry="2" />
<text  x="377.63" y="303.5" ></text>
</g>
<g >
<title>DB::PartialSortingBlockInputStream::readImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/PartialSortingBlockInputStream.cpp:13 (11 samples, 0.08%)</title><rect x="23.1" y="245" width="0.9" height="15.0" fill="rgb(210,130,2)" rx="2" ry="2" />
<text  x="26.11" y="255.5" ></text>
</g>
<g >
<title>CRC32Hash::operator()(StringRef) const [clone .isra.0]#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:256 (3 samples, 0.02%)</title><rect x="376.3" y="325" width="0.2" height="15.0" fill="rgb(225,25,25)" rx="2" ry="2" />
<text  x="379.27" y="335.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:357 (15 samples, 0.10%)</title><rect x="458.0" y="325" width="1.2" height="15.0" fill="rgb(244,120,9)" rx="2" ry="2" />
<text  x="460.96" y="335.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (51 samples, 0.35%)</title><rect x="100.3" y="325" width="4.2" height="15.0" fill="rgb(247,17,33)" rx="2" ry="2" />
<text  x="103.30" y="335.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:150 (15 samples, 0.10%)</title><rect x="1033.0" y="149" width="1.2" height="15.0" fill="rgb(239,144,18)" rx="2" ry="2" />
<text  x="1036.01" y="159.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:380 (5 samples, 0.03%)</title><rect x="936.9" y="229" width="0.4" height="15.0" fill="rgb(241,197,49)" rx="2" ry="2" />
<text  x="939.89" y="239.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:440 (4 samples, 0.03%)</title><rect x="923.0" y="101" width="0.3" height="15.0" fill="rgb(206,224,18)" rx="2" ry="2" />
<text  x="925.96" y="111.5" ></text>
</g>
<g >
<title>AllocatorWithStackMemory&lt;Allocator&lt;true, true&gt;, 64ul, 1ul&gt;::realloc(void*, unsigned long, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (18 samples, 0.12%)</title><rect x="810.5" y="293" width="1.5" height="15.0" fill="rgb(208,34,3)" rx="2" ry="2" />
<text  x="813.54" y="303.5" ></text>
</g>
<g >
<title>AllocatorWithStackMemory&lt;Allocator&lt;true, true&gt;, 64ul, 1ul&gt;::realloc(void*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:322 (2 samples, 0.01%)</title><rect x="810.0" y="293" width="0.2" height="15.0" fill="rgb(211,124,44)" rx="2" ry="2" />
<text  x="813.05" y="303.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (2 samples, 0.01%)</title><rect x="811.1" y="197" width="0.2" height="15.0" fill="rgb(233,79,25)" rx="2" ry="2" />
<text  x="814.12" y="207.5" ></text>
</g>
<g >
<title>DB::Aggregator::executeOnBlock(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;, unsigned long, DB::AggregatedDataVariants&amp;, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, std::vector&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;, std::allocator&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt; &gt; &gt;&amp;, bool&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:636 (14 samples, 0.10%)</title><rect x="911.2" y="373" width="1.2" height="15.0" fill="rgb(229,160,35)" rx="2" ry="2" />
<text  x="914.24" y="383.5" ></text>
</g>
<g >
<title>clone#/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97 (14,234 samples, 98.84%)</title><rect x="22.5" y="485" width="1166.3" height="15.0" fill="rgb(234,46,37)" rx="2" ry="2" />
<text  x="25.45" y="495.5" >clone#/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97</text>
</g>
<g >
<title>DB::Aggregator::executeOnBlock(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;, unsigned long, DB::AggregatedDataVariants&amp;, std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;&amp;, std::vector&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt;, std::allocator&lt;std::vector&lt;DB::IColumn const*, std::allocator&lt;DB::IColumn const*&gt; &gt; &gt; &gt;&amp;, bool&amp;)#/usr/include/c++/9/bits/stl_vector.h:677 (2 samples, 0.01%)</title><rect x="912.9" y="373" width="0.1" height="15.0" fill="rgb(229,115,49)" rx="2" ry="2" />
<text  x="915.88" y="383.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:604 (7 samples, 0.05%)</title><rect x="957.2" y="165" width="0.6" height="15.0" fill="rgb(214,69,51)" rx="2" ry="2" />
<text  x="960.21" y="175.5" ></text>
</g>
<g >
<title>malloc_default#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:151 (3 samples, 0.02%)</title><rect x="1008.2" y="133" width="0.2" height="15.0" fill="rgb(214,204,39)" rx="2" ry="2" />
<text  x="1011.18" y="143.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:487 (6 samples, 0.04%)</title><rect x="676.1" y="325" width="0.5" height="15.0" fill="rgb(242,111,35)" rx="2" ry="2" />
<text  x="679.08" y="335.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt;::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:381 (3 samples, 0.02%)</title><rect x="255.6" y="293" width="0.2" height="15.0" fill="rgb(239,203,2)" rx="2" ry="2" />
<text  x="258.57" y="303.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:215 (6 samples, 0.04%)</title><rect x="936.3" y="197" width="0.5" height="15.0" fill="rgb(254,208,39)" rx="2" ry="2" />
<text  x="939.32" y="207.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:237 (31 samples, 0.22%)</title><rect x="1066.6" y="69" width="2.5" height="15.0" fill="rgb(238,221,33)" rx="2" ry="2" />
<text  x="1069.60" y="79.5" ></text>
</g>
<g >
<title>extent_try_coalesce_impl#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1620 (2 samples, 0.01%)</title><rect x="1188.1" y="309" width="0.2" height="15.0" fill="rgb(212,149,2)" rx="2" ry="2" />
<text  x="1191.12" y="319.5" ></text>
</g>
<g >
<title>DB::Block::insert(DB::ColumnWithTypeAndName&amp;&amp;)#/usr/include/c++/9/bits/vector.tcc:112 (3 samples, 0.02%)</title><rect x="943.5" y="181" width="0.3" height="15.0" fill="rgb(232,165,39)" rx="2" ry="2" />
<text  x="946.53" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:357 (2,155 samples, 14.96%)</title><rect x="491.1" y="341" width="176.6" height="15.0" fill="rgb(251,46,41)" rx="2" ry="2" />
<text  x="494.14" y="351.5" >void DB::Aggregator::e..</text>
</g>
<g >
<title>DB::Block::insert(DB::ColumnWithTypeAndName&amp;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.cpp:88 (3 samples, 0.02%)</title><rect x="945.0" y="149" width="0.2" height="15.0" fill="rgb(222,95,21)" rx="2" ry="2" />
<text  x="948.00" y="159.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:132 (16 samples, 0.11%)</title><rect x="1139.5" y="149" width="1.3" height="15.0" fill="rgb(205,2,46)" rx="2" ry="2" />
<text  x="1142.53" y="159.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:447 (4 samples, 0.03%)</title><rect x="1130.4" y="69" width="0.4" height="15.0" fill="rgb(208,163,15)" rx="2" ry="2" />
<text  x="1133.43" y="79.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::readFromPartImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:164 (4 samples, 0.03%)</title><rect x="1189.3" y="293" width="0.4" height="15.0" fill="rgb(213,42,49)" rx="2" ry="2" />
<text  x="1192.34" y="303.5" ></text>
</g>
<g >
<title>DB::DataTypeString::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:212 (59 samples, 0.41%)</title><rect x="1175.9" y="165" width="4.8" height="15.0" fill="rgb(246,91,21)" rx="2" ry="2" />
<text  x="1178.91" y="175.5" ></text>
</g>
<g >
<title>void DB::Aggregator::convertToBlockImplFinal&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:936 (10 samples, 0.07%)</title><rect x="332.4" y="309" width="0.8" height="15.0" fill="rgb(239,159,18)" rx="2" ry="2" />
<text  x="335.43" y="319.5" ></text>
</g>
<g >
<title>large_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (3 samples, 0.02%)</title><rect x="930.0" y="117" width="0.3" height="15.0" fill="rgb(246,124,12)" rx="2" ry="2" />
<text  x="933.01" y="127.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:215 (206 samples, 1.43%)</title><rect x="93.1" y="357" width="16.9" height="15.0" fill="rgb(207,90,17)" rx="2" ry="2" />
<text  x="96.09" y="367.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:612 (2 samples, 0.01%)</title><rect x="958.3" y="165" width="0.1" height="15.0" fill="rgb(222,20,22)" rx="2" ry="2" />
<text  x="961.28" y="175.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (192 samples, 1.33%)</title><rect x="691.6" y="325" width="15.8" height="15.0" fill="rgb(217,199,45)" rx="2" ry="2" />
<text  x="694.65" y="335.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::injectVirtualColumns(DB::Chunk&amp;, DB::MergeTreeReadTask*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)#/usr/include/c++/9/bits/stl_vector.h:552 (2 samples, 0.01%)</title><rect x="1186.9" y="277" width="0.2" height="15.0" fill="rgb(247,207,37)" rx="2" ry="2" />
<text  x="1189.89" y="287.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::allocNoTrack(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:215 (3 samples, 0.02%)</title><rect x="930.0" y="149" width="0.3" height="15.0" fill="rgb(245,13,1)" rx="2" ry="2" />
<text  x="933.01" y="159.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:107 (4 samples, 0.03%)</title><rect x="1038.7" y="101" width="0.4" height="15.0" fill="rgb(216,141,36)" rx="2" ry="2" />
<text  x="1041.74" y="111.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:527 (5 samples, 0.03%)</title><rect x="152.5" y="357" width="0.4" height="15.0" fill="rgb(209,18,50)" rx="2" ry="2" />
<text  x="155.49" y="367.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:514 (54 samples, 0.37%)</title><rect x="1110.6" y="69" width="4.4" height="15.0" fill="rgb(254,61,44)" rx="2" ry="2" />
<text  x="1113.60" y="79.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:270 (2 samples, 0.01%)</title><rect x="257.9" y="229" width="0.2" height="15.0" fill="rgb(212,218,37)" rx="2" ry="2" />
<text  x="260.95" y="239.5" ></text>
</g>
<g >
<title>all (14,401 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(249,158,53)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (57 samples, 0.40%)</title><rect x="804.0" y="277" width="4.7" height="15.0" fill="rgb(208,92,53)" rx="2" ry="2" />
<text  x="806.99" y="287.5" ></text>
</g>
<g >
<title>extent_record#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1700 (6 samples, 0.04%)</title><rect x="1007.4" y="133" width="0.5" height="15.0" fill="rgb(224,102,31)" rx="2" ry="2" />
<text  x="1010.36" y="143.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (3 samples, 0.02%)</title><rect x="93.3" y="309" width="0.3" height="15.0" fill="rgb(252,150,11)" rx="2" ry="2" />
<text  x="96.33" y="319.5" ></text>
</g>
<g >
<title>DB::MergeTreeBlockSizePredictor::update(DB::Block const&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt; const&amp;, unsigned long, double)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBlockReadUtils.cpp:190 (2 samples, 0.01%)</title><rect x="1185.9" y="261" width="0.2" height="15.0" fill="rgb(245,224,20)" rx="2" ry="2" />
<text  x="1188.90" y="271.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;3&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:53 (12 samples, 0.08%)</title><rect x="1174.5" y="149" width="1.0" height="15.0" fill="rgb(234,218,47)" rx="2" ry="2" />
<text  x="1177.51" y="159.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:561 (3 samples, 0.02%)</title><rect x="1175.3" y="85" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1178.25" y="95.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/tcache_inlines.h:179 (63 samples, 0.44%)</title><rect x="336.4" y="277" width="5.1" height="15.0" fill="rgb(221,143,20)" rx="2" ry="2" />
<text  x="339.36" y="287.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:137 (7 samples, 0.05%)</title><rect x="243.2" y="357" width="0.6" height="15.0" fill="rgb(230,32,28)" rx="2" ry="2" />
<text  x="246.20" y="367.5" ></text>
</g>
<g >
<title>large_malloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:47 (3 samples, 0.02%)</title><rect x="1008.4" y="117" width="0.3" height="15.0" fill="rgb(210,150,49)" rx="2" ry="2" />
<text  x="1011.42" y="127.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:477 (2 samples, 0.01%)</title><rect x="1183.9" y="37" width="0.1" height="15.0" fill="rgb(216,52,3)" rx="2" ry="2" />
<text  x="1186.85" y="47.5" ></text>
</g>
<g >
<title>DB::PreparedFunctionImpl::execute(DB::Block&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, unsigned long, unsigned long, bool)#/build/obj-x86_64-linux-gnu/../dbms/src/Core/Block.h:28 (5 samples, 0.03%)</title><rect x="944.4" y="181" width="0.4" height="15.0" fill="rgb(229,168,2)" rx="2" ry="2" />
<text  x="947.43" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (30 samples, 0.21%)</title><rect x="907.0" y="341" width="2.4" height="15.0" fill="rgb(224,64,31)" rx="2" ry="2" />
<text  x="909.98" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:440 (15 samples, 0.10%)</title><rect x="1070.0" y="69" width="1.3" height="15.0" fill="rgb(210,157,9)" rx="2" ry="2" />
<text  x="1073.04" y="79.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:72 (4 samples, 0.03%)</title><rect x="456.6" y="325" width="0.3" height="15.0" fill="rgb(243,56,9)" rx="2" ry="2" />
<text  x="459.57" y="335.5" ></text>
</g>
<g >
<title>extent_try_coalesce_impl#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/mutex.h:165 (4 samples, 0.03%)</title><rect x="1187.7" y="309" width="0.3" height="15.0" fill="rgb(218,80,2)" rx="2" ry="2" />
<text  x="1190.71" y="319.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:153 (7 samples, 0.05%)</title><rect x="1034.2" y="149" width="0.6" height="15.0" fill="rgb(217,81,2)" rx="2" ry="2" />
<text  x="1037.23" y="159.5" ></text>
</g>
<g >
<title>DB::ReadBufferFromFileDescriptor::nextImpl()#/usr/include/x86_64-linux-gnu/bits/unistd.h:44 (177 samples, 1.23%)</title><rect x="1047.3" y="101" width="14.5" height="15.0" fill="rgb(240,47,49)" rx="2" ry="2" />
<text  x="1050.34" y="111.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:450 (4 samples, 0.03%)</title><rect x="939.8" y="229" width="0.3" height="15.0" fill="rgb(247,72,11)" rx="2" ry="2" />
<text  x="942.76" y="239.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1703 (96 samples, 0.67%)</title><rect x="257.9" y="245" width="7.9" height="15.0" fill="rgb(252,173,49)" rx="2" ry="2" />
<text  x="260.95" y="255.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::readBig(char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:97 (3 samples, 0.02%)</title><rect x="920.3" y="165" width="0.3" height="15.0" fill="rgb(210,95,0)" rx="2" ry="2" />
<text  x="923.34" y="175.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:187 (3 samples, 0.02%)</title><rect x="181.3" y="277" width="0.3" height="15.0" fill="rgb(230,74,4)" rx="2" ry="2" />
<text  x="184.33" y="287.5" ></text>
</g>
<g >
<title>tcache_alloc_small_hard#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/cache_bin.h:91 (21 samples, 0.15%)</title><rect x="805.6" y="245" width="1.7" height="15.0" fill="rgb(242,139,25)" rx="2" ry="2" />
<text  x="808.63" y="255.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:138 (13 samples, 0.09%)</title><rect x="1023.7" y="149" width="1.1" height="15.0" fill="rgb(244,123,48)" rx="2" ry="2" />
<text  x="1026.75" y="159.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:514 (20 samples, 0.14%)</title><rect x="924.3" y="101" width="1.6" height="15.0" fill="rgb(251,203,47)" rx="2" ry="2" />
<text  x="927.27" y="111.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)#/usr/lib/debug/usr/bin/clickhouse (7 samples, 0.05%)</title><rect x="23.4" y="117" width="0.6" height="15.0" fill="rgb(213,28,13)" rx="2" ry="2" />
<text  x="26.44" y="127.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:31 (8 samples, 0.06%)</title><rect x="1174.8" y="133" width="0.7" height="15.0" fill="rgb(208,71,21)" rx="2" ry="2" />
<text  x="1177.84" y="143.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:187 (43 samples, 0.30%)</title><rect x="812.0" y="309" width="3.5" height="15.0" fill="rgb(212,149,29)" rx="2" ry="2" />
<text  x="815.02" y="319.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/IO/BufferWithOwnMemory.h:89 (2 samples, 0.01%)</title><rect x="1137.8" y="133" width="0.2" height="15.0" fill="rgb(239,10,45)" rx="2" ry="2" />
<text  x="1140.81" y="143.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;1&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:144 (2 samples, 0.01%)</title><rect x="1176.3" y="149" width="0.2" height="15.0" fill="rgb(243,204,46)" rx="2" ry="2" />
<text  x="1179.32" y="159.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:225 (30 samples, 0.21%)</title><rect x="976.7" y="181" width="2.5" height="15.0" fill="rgb(238,16,8)" rx="2" ry="2" />
<text  x="979.71" y="191.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:439 (2 samples, 0.01%)</title><rect x="108.1" y="341" width="0.1" height="15.0" fill="rgb(226,83,10)" rx="2" ry="2" />
<text  x="111.08" y="351.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:631 (3 samples, 0.02%)</title><rect x="295.4" y="277" width="0.2" height="15.0" fill="rgb(233,57,48)" rx="2" ry="2" />
<text  x="298.39" y="287.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:243 (21 samples, 0.15%)</title><rect x="868.3" y="309" width="1.7" height="15.0" fill="rgb(211,113,12)" rx="2" ry="2" />
<text  x="871.31" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock#/lib/x86_64-linux-gnu/libpthread-2.27.so (2 samples, 0.01%)</title><rect x="806.5" y="133" width="0.2" height="15.0" fill="rgb(206,214,39)" rx="2" ry="2" />
<text  x="809.53" y="143.5" ></text>
</g>
<g >
<title>operator delete(void*)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/new_delete.cpp:53 (2 samples, 0.01%)</title><rect x="944.4" y="165" width="0.2" height="15.0" fill="rgb(229,196,53)" rx="2" ry="2" />
<text  x="947.43" y="175.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:236 (9 samples, 0.06%)</title><rect x="1065.9" y="69" width="0.7" height="15.0" fill="rgb(219,66,28)" rx="2" ry="2" />
<text  x="1068.86" y="79.5" ></text>
</g>
<g >
<title>sallocx#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/sz.h:199 (2 samples, 0.01%)</title><rect x="944.4" y="149" width="0.2" height="15.0" fill="rgb(250,16,47)" rx="2" ry="2" />
<text  x="947.43" y="159.5" ></text>
</g>
<g >
<title>DB::MergingAndConvertingBlockInputStream::thread(int, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;)#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1455 (2,675 samples, 18.58%)</title><rect x="24.7" y="373" width="219.2" height="15.0" fill="rgb(252,196,40)" rx="2" ry="2" />
<text  x="27.75" y="383.5" >DB::MergingAndConvertingBloc..</text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/usr/include/c++/9/tuple:1395 (2 samples, 0.01%)</title><rect x="243.8" y="357" width="0.1" height="15.0" fill="rgb(210,21,49)" rx="2" ry="2" />
<text  x="246.77" y="367.5" ></text>
</g>
<g >
<title>__memset_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:141 (44 samples, 0.31%)</title><rect x="104.5" y="309" width="3.6" height="15.0" fill="rgb(236,185,54)" rx="2" ry="2" />
<text  x="107.48" y="319.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/usr/include/c++/9/new:174 (3 samples, 0.02%)</title><rect x="985.6" y="181" width="0.2" height="15.0" fill="rgb(225,17,25)" rx="2" ry="2" />
<text  x="988.56" y="191.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:165 (2 samples, 0.01%)</title><rect x="1039.3" y="101" width="0.2" height="15.0" fill="rgb(236,138,47)" rx="2" ry="2" />
<text  x="1042.31" y="111.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (5 samples, 0.03%)</title><rect x="459.8" y="213" width="0.4" height="15.0" fill="rgb(250,66,18)" rx="2" ry="2" />
<text  x="462.76" y="223.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:496 (5 samples, 0.03%)</title><rect x="271.4" y="277" width="0.4" height="15.0" fill="rgb(215,161,40)" rx="2" ry="2" />
<text  x="274.38" y="287.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:201 (3 samples, 0.02%)</title><rect x="180.4" y="309" width="0.2" height="15.0" fill="rgb(227,32,34)" rx="2" ry="2" />
<text  x="183.35" y="319.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;2&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:53 (19 samples, 0.13%)</title><rect x="1178.8" y="149" width="1.5" height="15.0" fill="rgb(229,139,36)" rx="2" ry="2" />
<text  x="1181.77" y="159.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (51 samples, 0.35%)</title><rect x="960.2" y="165" width="4.2" height="15.0" fill="rgb(209,46,33)" rx="2" ry="2" />
<text  x="963.24" y="175.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2630 (2 samples, 0.01%)</title><rect x="1008.7" y="117" width="0.1" height="15.0" fill="rgb(248,21,14)" rx="2" ry="2" />
<text  x="1011.67" y="127.5" ></text>
</g>
<g >
<title>DB::MergeTreeBaseSelectProcessor::readFromPartImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:184 (3 samples, 0.02%)</title><rect x="1185.9" y="277" width="0.2" height="15.0" fill="rgb(209,62,15)" rx="2" ry="2" />
<text  x="1188.90" y="287.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionHelper&lt;DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::addBatch(unsigned long, char**, unsigned long, DB::IColumn const**, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:173 (1,256 samples, 8.72%)</title><rect x="797.1" y="325" width="102.9" height="15.0" fill="rgb(229,18,37)" rx="2" ry="2" />
<text  x="800.10" y="335.5" >DB::IAggrega..</text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:54 (6 samples, 0.04%)</title><rect x="930.3" y="101" width="0.5" height="15.0" fill="rgb(225,153,51)" rx="2" ry="2" />
<text  x="933.34" y="111.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:82 (2 samples, 0.01%)</title><rect x="25.9" y="341" width="0.2" height="15.0" fill="rgb(215,176,2)" rx="2" ry="2" />
<text  x="28.90" y="351.5" ></text>
</g>
<g >
<title>extent_alloc_wrapper#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1450 (2 samples, 0.01%)</title><rect x="911.2" y="261" width="0.2" height="15.0" fill="rgb(240,163,19)" rx="2" ry="2" />
<text  x="914.24" y="271.5" ></text>
</g>
<g >
<title>pages_purge_forced#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/pages.c:344 (24 samples, 0.17%)</title><rect x="336.8" y="181" width="1.9" height="15.0" fill="rgb(241,106,40)" rx="2" ry="2" />
<text  x="339.77" y="191.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:536 (11 samples, 0.08%)</title><rect x="152.9" y="357" width="0.9" height="15.0" fill="rgb(235,199,12)" rx="2" ry="2" />
<text  x="155.90" y="367.5" ></text>
</g>
<g >
<title>DB::Arena::alloc(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Arena.h:145 (14 samples, 0.10%)</title><rect x="908.0" y="325" width="1.1" height="15.0" fill="rgb(221,113,41)" rx="2" ry="2" />
<text  x="910.97" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (92 samples, 0.64%)</title><rect x="1117.8" y="69" width="7.6" height="15.0" fill="rgb(210,52,39)" rx="2" ry="2" />
<text  x="1120.81" y="79.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:96 (2 samples, 0.01%)</title><rect x="988.8" y="165" width="0.2" height="15.0" fill="rgb(233,66,39)" rx="2" ry="2" />
<text  x="991.84" y="175.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:106 (3 samples, 0.02%)</title><rect x="390.1" y="325" width="0.3" height="15.0" fill="rgb(251,184,0)" rx="2" ry="2" />
<text  x="393.11" y="335.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (4 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.4" height="15.0" fill="rgb(212,101,43)" rx="2" ry="2" />
<text  x="1192.34" y="415.5" ></text>
</g>
<g >
<title>tcache_alloc_small_hard#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/cache_bin.h:91 (2 samples, 0.01%)</title><rect x="911.2" y="309" width="0.2" height="15.0" fill="rgb(224,20,43)" rx="2" ry="2" />
<text  x="914.24" y="319.5" ></text>
</g>
<g >
<title>arena_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:339 (14 samples, 0.10%)</title><rect x="804.0" y="261" width="1.1" height="15.0" fill="rgb(208,35,51)" rx="2" ry="2" />
<text  x="806.99" y="271.5" ></text>
</g>
<g >
<title>Allocator&lt;false, false&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:124 (2 samples, 0.01%)</title><rect x="1175.9" y="133" width="0.2" height="15.0" fill="rgb(219,131,38)" rx="2" ry="2" />
<text  x="1178.91" y="143.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferFromFile::nextImpl()#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferFromFile.cpp:22 (2 samples, 0.01%)</title><rect x="1178.8" y="133" width="0.1" height="15.0" fill="rgb(225,226,29)" rx="2" ry="2" />
<text  x="1181.77" y="143.5" ></text>
</g>
<g >
<title>DB::MergeTreeThreadSelectBlockInputProcessor::getNewTask()#/usr/include/c++/9/bits/unique_ptr.h:288 (2 samples, 0.01%)</title><rect x="915.6" y="277" width="0.2" height="15.0" fill="rgb(211,24,26)" rx="2" ry="2" />
<text  x="918.59" y="287.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::decompress(char*, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:168 (3 samples, 0.02%)</title><rect x="920.3" y="149" width="0.3" height="15.0" fill="rgb(253,206,30)" rx="2" ry="2" />
<text  x="923.34" y="159.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:127 (3 samples, 0.02%)</title><rect x="91.6" y="357" width="0.3" height="15.0" fill="rgb(211,118,3)" rx="2" ry="2" />
<text  x="94.61" y="367.5" ></text>
</g>
<g >
<title>DB::ICompressionCodec::decompress(char const*, unsigned int, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/ICompressionCodec.cpp:54 (3 samples, 0.02%)</title><rect x="920.3" y="133" width="0.3" height="15.0" fill="rgb(214,3,2)" rx="2" ry="2" />
<text  x="923.34" y="143.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (24 samples, 0.17%)</title><rect x="263.8" y="213" width="2.0" height="15.0" fill="rgb(228,103,27)" rx="2" ry="2" />
<text  x="266.85" y="223.5" ></text>
</g>
<g >
<title>pthread_cond_wait#/lib/x86_64-linux-gnu/libpthread-2.27.so (7 samples, 0.05%)</title><rect x="22.5" y="373" width="0.5" height="15.0" fill="rgb(223,25,45)" rx="2" ry="2" />
<text  x="25.45" y="383.5" ></text>
</g>
<g >
<title>arena_bin_malloc_hard#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:1143 (2 samples, 0.01%)</title><rect x="911.2" y="277" width="0.2" height="15.0" fill="rgb(254,97,31)" rx="2" ry="2" />
<text  x="914.24" y="287.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:448 (8 samples, 0.06%)</title><rect x="1072.3" y="69" width="0.6" height="15.0" fill="rgb(226,165,15)" rx="2" ry="2" />
<text  x="1075.25" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:81 (3 samples, 0.02%)</title><rect x="1138.0" y="149" width="0.2" height="15.0" fill="rgb(248,34,15)" rx="2" ry="2" />
<text  x="1140.97" y="159.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ColumnsHashingImpl.h:121 (18 samples, 0.12%)</title><rect x="386.3" y="341" width="1.5" height="15.0" fill="rgb(247,7,3)" rx="2" ry="2" />
<text  x="389.34" y="351.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:478 (3 samples, 0.02%)</title><rect x="1074.3" y="69" width="0.2" height="15.0" fill="rgb(212,51,48)" rx="2" ry="2" />
<text  x="1077.30" y="79.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:490 (2 samples, 0.01%)</title><rect x="1126.2" y="69" width="0.1" height="15.0" fill="rgb(211,203,17)" rx="2" ry="2" />
<text  x="1129.17" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;4&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:142 (6 samples, 0.04%)</title><rect x="1142.0" y="149" width="0.5" height="15.0" fill="rgb(241,164,29)" rx="2" ry="2" />
<text  x="1144.98" y="159.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:94 (5 samples, 0.03%)</title><rect x="959.1" y="165" width="0.4" height="15.0" fill="rgb(209,181,43)" rx="2" ry="2" />
<text  x="962.10" y="175.5" ></text>
</g>
<g >
<title>extent_split_interior.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1021 (2 samples, 0.01%)</title><rect x="459.4" y="197" width="0.2" height="15.0" fill="rgb(222,21,0)" rx="2" ry="2" />
<text  x="462.43" y="207.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionHelper&lt;DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::addBatch(unsigned long, char**, unsigned long, DB::IColumn const**, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:336 (15 samples, 0.10%)</title><rect x="900.7" y="325" width="1.2" height="15.0" fill="rgb(208,228,22)" rx="2" ry="2" />
<text  x="903.67" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:235 (2 samples, 0.01%)</title><rect x="1183.4" y="37" width="0.2" height="15.0" fill="rgb(210,198,34)" rx="2" ry="2" />
<text  x="1186.44" y="47.5" ></text>
</g>
<g >
<title>DB::Block DB::Aggregator::prepareBlockAndFill&lt;DB::Aggregator::convertOneBucketToBlock&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregatedDataVariants&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, bool, unsigned long) const::{lambda(std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;DB::PODArray&lt;char*, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;*, std::allocator&lt;DB::PODArray&lt;char*, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;*&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, bool)#1}&gt;(DB::AggregatedDataVariants&amp;, bool, unsigned long, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:1028 (1,606 samples, 11.15%)</title><rect x="243.9" y="341" width="131.6" height="15.0" fill="rgb(224,65,42)" rx="2" ry="2" />
<text  x="246.94" y="351.5" >DB::Block DB::Ag..</text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (6 samples, 0.04%)</title><rect x="936.3" y="133" width="0.5" height="15.0" fill="rgb(236,88,17)" rx="2" ry="2" />
<text  x="939.32" y="143.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Columns/ColumnsCommon.cpp:183 (17 samples, 0.12%)</title><rect x="972.7" y="181" width="1.4" height="15.0" fill="rgb(233,132,4)" rx="2" ry="2" />
<text  x="975.70" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (), std::_Bind&lt;void (DB::MergingAndConvertingBlockInputStream::*(DB::MergingAndConvertingBlockInputStream*, int, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;))(int, std::shared_ptr&lt;DB::ThreadGroupStatus&gt;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;)#/usr/include/c++/9/bits/shared_ptr_base.h:729 (4,282 samples, 29.73%)</title><rect x="24.7" y="389" width="350.9" height="15.0" fill="rgb(221,102,18)" rx="2" ry="2" />
<text  x="27.75" y="399.5" >std::_Function_handler&lt;void (), std::_Bind&lt;void..</text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:377 (11 samples, 0.08%)</title><rect x="935.4" y="229" width="0.9" height="15.0" fill="rgb(224,51,44)" rx="2" ry="2" />
<text  x="938.42" y="239.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionHelper&lt;DB::AggregateFunctionCount&gt;::addBatch(unsigned long, char**, unsigned long, DB::IColumn const**, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionCount.h:43 (9 samples, 0.06%)</title><rect x="778.6" y="325" width="0.7" height="15.0" fill="rgb(240,117,34)" rx="2" ry="2" />
<text  x="781.59" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:521 (2 samples, 0.01%)</title><rect x="1081.4" y="69" width="0.2" height="15.0" fill="rgb(236,224,44)" rx="2" ry="2" />
<text  x="1084.43" y="79.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (16 samples, 0.11%)</title><rect x="1045.9" y="101" width="1.3" height="15.0" fill="rgb(205,218,8)" rx="2" ry="2" />
<text  x="1048.87" y="111.5" ></text>
</g>
<g >
<title>DB::ReadBufferFromFileDescriptor::nextImpl()#/usr/include/x86_64-linux-gnu/bits/unistd.h:44 (19 samples, 0.13%)</title><rect x="918.6" y="133" width="1.6" height="15.0" fill="rgb(241,73,25)" rx="2" ry="2" />
<text  x="921.62" y="143.5" ></text>
</g>
<g >
<title>DB::ParallelInputsProcessor&lt;DB::ParallelAggregatingBlockInputStream::Handler&gt;::thread(std::shared_ptr&lt;DB::ThreadGroupStatus&gt;, unsigned long)#/usr/include/c++/9/bits/atomic_base.h:419 (3,342 samples, 23.21%)</title><rect x="913.4" y="405" width="273.8" height="15.0" fill="rgb(235,141,41)" rx="2" ry="2" />
<text  x="916.37" y="415.5" >DB::ParallelInputsProcessor&lt;DB::Para..</text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:201 (4 samples, 0.03%)</title><rect x="820.7" y="309" width="0.3" height="15.0" fill="rgb(212,112,28)" rx="2" ry="2" />
<text  x="823.70" y="319.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:78 (10 samples, 0.07%)</title><rect x="391.7" y="325" width="0.8" height="15.0" fill="rgb(237,45,44)" rx="2" ry="2" />
<text  x="394.67" y="335.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTableKeyHolder.h:91 (2 samples, 0.01%)</title><rect x="707.7" y="341" width="0.2" height="15.0" fill="rgb(246,98,42)" rx="2" ry="2" />
<text  x="710.71" y="351.5" ></text>
</g>
<g >
<title>TwoLevelStringHashTable&lt;StringHashMapSubMaps&lt;char*, Allocator&lt;true, true&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;, 8ul&gt;::TwoLevelStringHashTable&lt;StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:217 (14 samples, 0.10%)</title><rect x="911.2" y="341" width="1.2" height="15.0" fill="rgb(208,171,31)" rx="2" ry="2" />
<text  x="914.24" y="351.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:721 (7 samples, 0.05%)</title><rect x="929.4" y="149" width="0.5" height="15.0" fill="rgb(227,109,12)" rx="2" ry="2" />
<text  x="932.35" y="159.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:57 (2 samples, 0.01%)</title><rect x="446.5" y="341" width="0.2" height="15.0" fill="rgb(229,12,46)" rx="2" ry="2" />
<text  x="449.49" y="351.5" ></text>
</g>
<g >
<title>pthread_cond_wait#/lib/x86_64-linux-gnu/libpthread-2.27.so (4 samples, 0.03%)</title><rect x="23.1" y="117" width="0.3" height="15.0" fill="rgb(220,172,53)" rx="2" ry="2" />
<text  x="26.11" y="127.5" ></text>
</g>
<g >
<title>CRC32Hash::operator()(StringRef) const [clone .isra.0]#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:247 (10 samples, 0.07%)</title><rect x="714.3" y="325" width="0.9" height="15.0" fill="rgb(223,154,18)" rx="2" ry="2" />
<text  x="717.35" y="335.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:93 (2 samples, 0.01%)</title><rect x="395.8" y="325" width="0.2" height="15.0" fill="rgb(208,122,53)" rx="2" ry="2" />
<text  x="398.85" y="335.5" ></text>
</g>
<g >
<title>memcpy#/build/obj-x86_64-linux-gnu/../libs/libmemcpy/impl/FastMemcpy.h:382 (4 samples, 0.03%)</title><rect x="267.4" y="277" width="0.3" height="15.0" fill="rgb(253,206,52)" rx="2" ry="2" />
<text  x="270.37" y="287.5" ></text>
</g>
<g >
<title>__libc_realloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/sz.h:199 (13 samples, 0.09%)</title><rect x="174.7" y="309" width="1.1" height="15.0" fill="rgb(216,150,2)" rx="2" ry="2" />
<text  x="177.70" y="319.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:313 (91 samples, 0.63%)</title><rect x="258.4" y="229" width="7.4" height="15.0" fill="rgb(246,7,36)" rx="2" ry="2" />
<text  x="261.36" y="239.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ColumnsHashing.h:91 (28 samples, 0.19%)</title><rect x="384.1" y="341" width="2.2" height="15.0" fill="rgb(217,160,5)" rx="2" ry="2" />
<text  x="387.05" y="351.5" ></text>
</g>
<g >
<title>DB::IBlockInputStream::read()#/usr/include/c++/9/bits/stl_vector.h:108 (4 samples, 0.03%)</title><rect x="1189.3" y="373" width="0.4" height="15.0" fill="rgb(224,89,50)" rx="2" ry="2" />
<text  x="1192.34" y="383.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (5 samples, 0.03%)</title><rect x="804.7" y="245" width="0.4" height="15.0" fill="rgb(214,103,44)" rx="2" ry="2" />
<text  x="807.72" y="255.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (4 samples, 0.03%)</title><rect x="1184.5" y="37" width="0.3" height="15.0" fill="rgb(210,43,21)" rx="2" ry="2" />
<text  x="1187.51" y="47.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/Hash.h:26 (252 samples, 1.75%)</title><rect x="875.9" y="309" width="20.7" height="15.0" fill="rgb(236,228,49)" rx="2" ry="2" />
<text  x="878.93" y="319.5" ></text>
</g>
<g >
<title>DB::AsynchronousBlockInputStream::calculate()#/usr/include/c++/9/bits/stl_vector.h:108 (21 samples, 0.15%)</title><rect x="23.0" y="373" width="1.7" height="15.0" fill="rgb(208,184,12)" rx="2" ry="2" />
<text  x="26.03" y="383.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionDataHelper&lt;DB::AggregateFunctionUniqUniquesHashSetData, DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::create(char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:202 (2 samples, 0.01%)</title><rect x="758.1" y="309" width="0.2" height="15.0" fill="rgb(220,101,21)" rx="2" ry="2" />
<text  x="761.10" y="319.5" ></text>
</g>
<g >
<title>HashTable&lt;StringRef, StringHashMapCell&lt;StringRef, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:431 (281 samples, 1.95%)</title><rect x="459.2" y="325" width="23.0" height="15.0" fill="rgb(209,88,5)" rx="2" ry="2" />
<text  x="462.19" y="335.5" >H..</text>
</g>
<g >
<title>DB::Block::getPositionByName(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const#/usr/include/c++/9/bits/stl_tree.h:1015 (2 samples, 0.01%)</title><rect x="1185.9" y="245" width="0.2" height="15.0" fill="rgb(207,177,24)" rx="2" ry="2" />
<text  x="1188.90" y="255.5" ></text>
</g>
<g >
<title>tcache_bin_flush_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/tcache.c:149 (3 samples, 0.02%)</title><rect x="177.2" y="277" width="0.3" height="15.0" fill="rgb(216,86,22)" rx="2" ry="2" />
<text  x="180.24" y="287.5" ></text>
</g>
<g >
<title>DB::IAggregateFunctionHelper&lt;DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt; &gt;::addBatch(unsigned long, char**, unsigned long, DB::IColumn const**, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/IAggregateFunction.h:174 (8 samples, 0.06%)</title><rect x="900.0" y="325" width="0.7" height="15.0" fill="rgb(212,68,41)" rx="2" ry="2" />
<text  x="903.02" y="335.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:520 (2 samples, 0.01%)</title><rect x="1179.6" y="69" width="0.2" height="15.0" fill="rgb(228,169,9)" rx="2" ry="2" />
<text  x="1182.59" y="79.5" ></text>
</g>
<g >
<title>malloc_default#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/arena_inlines_b.h:151 (2 samples, 0.01%)</title><rect x="983.4" y="133" width="0.1" height="15.0" fill="rgb(214,128,31)" rx="2" ry="2" />
<text  x="986.35" y="143.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/usr/include/c++/9/bits/stl_vector.h:1005 (125 samples, 0.87%)</title><rect x="932.1" y="261" width="10.3" height="15.0" fill="rgb(212,53,54)" rx="2" ry="2" />
<text  x="935.14" y="271.5" ></text>
</g>
<g >
<title>DB::Aggregator::createAggregateStates(char*&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.cpp:355 (2 samples, 0.01%)</title><rect x="757.3" y="325" width="0.1" height="15.0" fill="rgb(209,53,3)" rx="2" ry="2" />
<text  x="760.28" y="335.5" ></text>
</g>
<g >
<title>void DB::Aggregator::convertToBlockImplFinal&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, std::vector&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::mutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/Aggregator.h:255 (15 samples, 0.10%)</title><rect x="333.6" y="309" width="1.2" height="15.0" fill="rgb(248,205,16)" rx="2" ry="2" />
<text  x="336.58" y="319.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/TwoLevelStringHashTable.h:140 (2 samples, 0.01%)</title><rect x="710.4" y="341" width="0.2" height="15.0" fill="rgb(231,113,1)" rx="2" ry="2" />
<text  x="713.41" y="351.5" ></text>
</g>
<g >
<title>extent_split_interior.constprop.0#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1021 (9 samples, 0.06%)</title><rect x="806.5" y="165" width="0.8" height="15.0" fill="rgb(210,35,1)" rx="2" ry="2" />
<text  x="809.53" y="175.5" ></text>
</g>
<g >
<title>arena_extents_dirty_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:67 (4 samples, 0.03%)</title><rect x="902.1" y="277" width="0.3" height="15.0" fill="rgb(246,65,30)" rx="2" ry="2" />
<text  x="905.07" y="287.5" ></text>
</g>
<g >
<title>DB::sortBlock(DB::Block&amp;, std::vector&lt;DB::SortColumnDescription, std::allocator&lt;DB::SortColumnDescription&gt; &gt; const&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Interpreters/sortBlock.cpp:119 (9 samples, 0.06%)</title><rect x="24.0" y="229" width="0.7" height="15.0" fill="rgb(233,140,45)" rx="2" ry="2" />
<text  x="27.01" y="239.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (2 samples, 0.01%)</title><rect x="1008.3" y="85" width="0.1" height="15.0" fill="rgb(250,103,38)" rx="2" ry="2" />
<text  x="1011.26" y="95.5" ></text>
</g>
<g >
<title>__libc_free#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/jemalloc.c:2689 (2 samples, 0.01%)</title><rect x="942.2" y="213" width="0.2" height="15.0" fill="rgb(226,4,21)" rx="2" ry="2" />
<text  x="945.22" y="223.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:270 (8 samples, 0.06%)</title><rect x="220.1" y="341" width="0.6" height="15.0" fill="rgb(212,181,49)" rx="2" ry="2" />
<text  x="223.09" y="351.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (10 samples, 0.07%)</title><rect x="1004.7" y="165" width="0.8" height="15.0" fill="rgb(205,126,38)" rx="2" ry="2" />
<text  x="1007.65" y="175.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::filterColumns(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;) const#/build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:115 (667 samples, 4.63%)</title><rect x="952.3" y="213" width="54.6" height="15.0" fill="rgb(225,96,50)" rx="2" ry="2" />
<text  x="955.30" y="223.5" >DB::M..</text>
</g>
<g >
<title>ThreadPoolImpl&lt;ThreadFromGlobalPool&gt;::worker(std::_List_iterator&lt;ThreadFromGlobalPool&gt;)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ThreadPool.cpp:199 (7 samples, 0.05%)</title><rect x="22.5" y="405" width="0.5" height="15.0" fill="rgb(233,122,3)" rx="2" ry="2" />
<text  x="25.45" y="415.5" ></text>
</g>
<g >
<title>DB::DataTypeString::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypeString.cpp:205 (2,018 samples, 14.01%)</title><rect x="1008.7" y="165" width="165.3" height="15.0" fill="rgb(239,36,38)" rx="2" ry="2" />
<text  x="1011.67" y="175.5" >DB::DataTypeString::d..</text>
</g>
<g >
<title>void DB::PODArrayBase&lt;1ul, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;::reserve&lt;&gt;(unsigned long) [clone .part.0]#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:105 (2 samples, 0.01%)</title><rect x="983.4" y="165" width="0.1" height="15.0" fill="rgb(247,132,18)" rx="2" ry="2" />
<text  x="986.35" y="175.5" ></text>
</g>
<g >
<title>DB::ColumnVector&lt;unsigned long&gt;::filter(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:75 (2 samples, 0.01%)</title><rect x="940.1" y="229" width="0.2" height="15.0" fill="rgb(232,55,40)" rx="2" ry="2" />
<text  x="943.09" y="239.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:134 (3 samples, 0.02%)</title><rect x="1189.4" y="213" width="0.3" height="15.0" fill="rgb(232,213,2)" rx="2" ry="2" />
<text  x="1192.43" y="223.5" ></text>
</g>
<g >
<title>tcache_bin_flush_small#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/tcache.c:164 (2 samples, 0.01%)</title><rect x="341.4" y="261" width="0.1" height="15.0" fill="rgb(212,180,5)" rx="2" ry="2" />
<text  x="344.36" y="271.5" ></text>
</g>
<g >
<title>getrusage#/build/glibc-OTsEL5/glibc-2.27/resource/../sysdeps/unix/syscall-template.S:78 (2 samples, 0.01%)</title><rect x="1186.3" y="229" width="0.2" height="15.0" fill="rgb(221,47,49)" rx="2" ry="2" />
<text  x="1189.31" y="239.5" ></text>
</g>
<g >
<title>__memset_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:141 (4 samples, 0.03%)</title><rect x="808.9" y="277" width="0.3" height="15.0" fill="rgb(218,28,35)" rx="2" ry="2" />
<text  x="811.90" y="287.5" ></text>
</g>
<g >
<title>HashTable&lt;StringKey24, StringHashMapCell&lt;StringKey24, char*&gt;, StringHashTableHash, StringHashTableGrower&lt;8ul&gt;, Allocator&lt;true, true&gt; &gt;::resize(unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashTable.h:432 (3 samples, 0.02%)</title><rect x="93.3" y="341" width="0.3" height="15.0" fill="rgb(211,105,6)" rx="2" ry="2" />
<text  x="96.33" y="351.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/build/obj-x86_64-linux-gnu/../libs/libcommon/include/common/StringRef.h:115 (2 samples, 0.01%)</title><rect x="25.3" y="341" width="0.2" height="15.0" fill="rgb(242,50,30)" rx="2" ry="2" />
<text  x="28.32" y="351.5" ></text>
</g>
<g >
<title>__read#/lib/x86_64-linux-gnu/libpthread-2.27.so (177 samples, 1.23%)</title><rect x="1047.3" y="85" width="14.5" height="15.0" fill="rgb(232,218,49)" rx="2" ry="2" />
<text  x="1050.34" y="95.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:108 (23 samples, 0.16%)</title><rect x="798.0" y="309" width="1.9" height="15.0" fill="rgb(219,212,40)" rx="2" ry="2" />
<text  x="801.00" y="319.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1311 (84 samples, 0.58%)</title><rect x="449.7" y="309" width="6.9" height="15.0" fill="rgb(227,166,51)" rx="2" ry="2" />
<text  x="452.68" y="319.5" ></text>
</g>
<g >
<title>void DB::Aggregator::mergeDataImpl&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt; &gt;(StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, StringHashMap&lt;char*, Allocator&lt;true, true&gt; &gt;&amp;, DB::Arena*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/HashMap.h:155 (5 samples, 0.03%)</title><rect x="91.9" y="357" width="0.4" height="15.0" fill="rgb(216,213,31)" rx="2" ry="2" />
<text  x="94.86" y="367.5" ></text>
</g>
<g >
<title>DB::Block::insert(DB::ColumnWithTypeAndName&amp;&amp;)#/usr/include/c++/9/bits/vector.tcc:112 (3 samples, 0.02%)</title><rect x="945.2" y="149" width="0.3" height="15.0" fill="rgb(230,54,27)" rx="2" ry="2" />
<text  x="948.25" y="159.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1409 (11 samples, 0.08%)</title><rect x="445.5" y="325" width="0.9" height="15.0" fill="rgb(238,16,46)" rx="2" ry="2" />
<text  x="448.50" y="335.5" ></text>
</g>
<g >
<title>DB::DataTypeString::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:106 (3 samples, 0.02%)</title><rect x="1008.4" y="165" width="0.3" height="15.0" fill="rgb(217,93,21)" rx="2" ry="2" />
<text  x="1011.42" y="175.5" ></text>
</g>
<g >
<title>__memset_erms#/build/glibc-OTsEL5/glibc-2.27/string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:141 (138 samples, 0.96%)</title><rect x="470.9" y="293" width="11.3" height="15.0" fill="rgb(216,99,26)" rx="2" ry="2" />
<text  x="473.91" y="303.5" ></text>
</g>
<g >
<title>memcpy#/usr/lib/gcc/x86_64-linux-gnu/9/include/xmmintrin.h:54 (2 samples, 0.01%)</title><rect x="707.4" y="325" width="0.1" height="15.0" fill="rgb(234,56,6)" rx="2" ry="2" />
<text  x="710.38" y="335.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;1&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:53 (15 samples, 0.10%)</title><rect x="1176.6" y="149" width="1.2" height="15.0" fill="rgb(243,42,19)" rx="2" ry="2" />
<text  x="1179.56" y="159.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (), DB::AsynchronousBlockInputStream::next()::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;)#/usr/include/c++/9/bits/atomic_base.h:551 (21 samples, 0.15%)</title><rect x="23.0" y="389" width="1.7" height="15.0" fill="rgb(238,154,33)" rx="2" ry="2" />
<text  x="26.03" y="399.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/usr/include/c++/9/bits/stl_vector.h:110 (2,971 samples, 20.63%)</title><rect x="942.4" y="261" width="243.4" height="15.0" fill="rgb(238,126,34)" rx="2" ry="2" />
<text  x="945.38" y="271.5" >DB::MergeTreeRangeReader::read(u..</text>
</g>
<g >
<title>DB::FunctionComparison&lt;DB::NotEqualsOp, DB::NameNotEquals&gt;::executeString(DB::Block&amp;, unsigned long, DB::IColumn const*, DB::IColumn const*)#/usr/lib/debug/usr/bin/clickhouse (75 samples, 0.52%)</title><rect x="945.6" y="149" width="6.1" height="15.0" fill="rgb(217,117,16)" rx="2" ry="2" />
<text  x="948.58" y="159.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (2 samples, 0.01%)</title><rect x="930.1" y="85" width="0.2" height="15.0" fill="rgb(241,7,8)" rx="2" ry="2" />
<text  x="933.09" y="95.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:554 (81 samples, 0.56%)</title><rect x="920.6" y="117" width="6.6" height="15.0" fill="rgb(237,49,33)" rx="2" ry="2" />
<text  x="923.59" y="127.5" ></text>
</g>
<g >
<title>DB::PODArrayBase&lt;8ul, 4096ul, Allocator&lt;false, false&gt;, 0ul, 0ul&gt;::dealloc()#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:104 (10 samples, 0.07%)</title><rect x="902.0" y="325" width="0.8" height="15.0" fill="rgb(230,14,1)" rx="2" ry="2" />
<text  x="904.99" y="335.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:713 (112 samples, 0.78%)</title><rect x="942.7" y="229" width="9.2" height="15.0" fill="rgb(228,15,29)" rx="2" ry="2" />
<text  x="945.71" y="239.5" ></text>
</g>
<g >
<title>arena_decay_to_limit#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/arena.c:770 (5 samples, 0.03%)</title><rect x="336.4" y="213" width="0.4" height="15.0" fill="rgb(221,228,47)" rx="2" ry="2" />
<text  x="339.36" y="223.5" ></text>
</g>
<g >
<title>LZ4::decompress(char const*, char*, unsigned long, unsigned long, LZ4::PerformanceStatistics&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:554 (32 samples, 0.22%)</title><rect x="1182.2" y="53" width="2.6" height="15.0" fill="rgb(254,32,1)" rx="2" ry="2" />
<text  x="1185.22" y="63.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:116 (11 samples, 0.08%)</title><rect x="801.9" y="309" width="0.9" height="15.0" fill="rgb(212,224,31)" rx="2" ry="2" />
<text  x="804.94" y="319.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/CompressedReadBufferBase.cpp:43 (3 samples, 0.02%)</title><rect x="1174.5" y="117" width="0.3" height="15.0" fill="rgb(231,64,35)" rx="2" ry="2" />
<text  x="1177.51" y="127.5" ></text>
</g>
<g >
<title>DB::ICompressionCodec::decompress(char const*, unsigned int, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/ICompressionCodec.cpp:54 (17 samples, 0.12%)</title><rect x="1178.9" y="101" width="1.4" height="15.0" fill="rgb(216,168,18)" rx="2" ry="2" />
<text  x="1181.94" y="111.5" ></text>
</g>
<g >
<title>arena_extents_dirty_dalloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/atomic.h:67 (11 samples, 0.08%)</title><rect x="1187.5" y="341" width="0.9" height="15.0" fill="rgb(224,30,16)" rx="2" ry="2" />
<text  x="1190.54" y="351.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:54 (11 samples, 0.08%)</title><rect x="1181.3" y="85" width="0.9" height="15.0" fill="rgb(229,209,2)" rx="2" ry="2" />
<text  x="1184.31" y="95.5" ></text>
</g>
<g >
<title>start_thread#/lib/x86_64-linux-gnu/libpthread-2.27.so (4 samples, 0.03%)</title><rect x="1189.3" y="485" width="0.4" height="15.0" fill="rgb(252,213,34)" rx="2" ry="2" />
<text  x="1192.34" y="495.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:703 (3 samples, 0.02%)</title><rect x="1006.7" y="181" width="0.2" height="15.0" fill="rgb(235,181,10)" rx="2" ry="2" />
<text  x="1009.70" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock#/lib/x86_64-linux-gnu/libpthread-2.27.so (5 samples, 0.03%)</title><rect x="339.6" y="245" width="0.4" height="15.0" fill="rgb(222,221,53)" rx="2" ry="2" />
<text  x="342.56" y="255.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::insert(unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/Hash.h:27 (18 samples, 0.12%)</title><rect x="896.6" y="309" width="1.5" height="15.0" fill="rgb(234,8,9)" rx="2" ry="2" />
<text  x="899.58" y="319.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::read(unsigned long, std::vector&lt;DB::MarkRange, std::allocator&lt;DB::MarkRange&gt; &gt;&amp;)#/usr/include/c++/9/bits/stl_vector.h:110 (4 samples, 0.03%)</title><rect x="1189.3" y="277" width="0.4" height="15.0" fill="rgb(216,205,5)" rx="2" ry="2" />
<text  x="1192.34" y="287.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:167 (3 samples, 0.02%)</title><rect x="1180.8" y="69" width="0.3" height="15.0" fill="rgb(242,158,5)" rx="2" ry="2" />
<text  x="1183.82" y="79.5" ></text>
</g>
<g >
<title>DB::ICompressionCodec::decompress(char const*, unsigned int, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/ICompressionCodec.cpp:54 (925 samples, 6.42%)</title><rect x="1062.0" y="101" width="75.8" height="15.0" fill="rgb(235,89,40)" rx="2" ry="2" />
<text  x="1065.01" y="111.5" >DB::ICom..</text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;32ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:478 (2 samples, 0.01%)</title><rect x="1131.2" y="69" width="0.1" height="15.0" fill="rgb(237,165,25)" rx="2" ry="2" />
<text  x="1134.17" y="79.5" ></text>
</g>
<g >
<title>void std::vector&lt;DB::ColumnWithTypeAndName, std::allocator&lt;DB::ColumnWithTypeAndName&gt; &gt;::_M_realloc_insert&lt;DB::ColumnWithTypeAndName&gt;(__gnu_cxx::__normal_iterator&lt;DB::ColumnWithTypeAndName*, std::vector&lt;DB::ColumnWithTypeAndName, std::allocator&lt;DB::ColumnWithTypeAndName&gt; &gt; &gt;, DB::ColumnWithTypeAndName&amp;&amp;)#/usr/lib/debug/usr/bin/clickhouse (3 samples, 0.02%)</title><rect x="945.0" y="133" width="0.2" height="15.0" fill="rgb(234,79,42)" rx="2" ry="2" />
<text  x="948.00" y="143.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:41 (6 samples, 0.04%)</title><rect x="1125.4" y="69" width="0.4" height="15.0" fill="rgb(205,138,53)" rx="2" ry="2" />
<text  x="1128.35" y="79.5" ></text>
</g>
<g >
<title>void DB::deserializeBinarySSE2&lt;2&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::ReadBuffer&amp;, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:727 (5 samples, 0.03%)</title><rect x="1180.3" y="149" width="0.4" height="15.0" fill="rgb(215,187,1)" rx="2" ry="2" />
<text  x="1183.33" y="159.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:172 (2 samples, 0.01%)</title><rect x="170.6" y="341" width="0.2" height="15.0" fill="rgb(244,203,39)" rx="2" ry="2" />
<text  x="173.60" y="351.5" ></text>
</g>
<g >
<title>DB::MergeTreeRangeReader::DelayedStream::finalize(std::vector&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt;, std::allocator&lt;COW&lt;DB::IColumn&gt;::immutable_ptr&lt;DB::IColumn&gt; &gt; &gt;&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeRangeReader.cpp:34 (188 samples, 1.31%)</title><rect x="916.2" y="229" width="15.4" height="15.0" fill="rgb(207,112,7)" rx="2" ry="2" />
<text  x="919.24" y="239.5" ></text>
</g>
<g >
<title>UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt;::merge(UniquesHashSet&lt;DefaultHash&lt;unsigned long, void&gt; &gt; const&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/UniquesHashSet.h:213 (6 samples, 0.04%)</title><rect x="186.3" y="341" width="0.4" height="15.0" fill="rgb(252,1,27)" rx="2" ry="2" />
<text  x="189.25" y="351.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/build/obj-x86_64-linux-gnu/../dbms/src/IO/ReadBuffer.h:145 (17 samples, 0.12%)</title><rect x="1045.9" y="117" width="1.4" height="15.0" fill="rgb(229,164,38)" rx="2" ry="2" />
<text  x="1048.87" y="127.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, false&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:486 (3 samples, 0.02%)</title><rect x="1075.4" y="69" width="0.3" height="15.0" fill="rgb(227,159,38)" rx="2" ry="2" />
<text  x="1078.45" y="79.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;8ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:514 (4 samples, 0.03%)</title><rect x="1126.4" y="69" width="0.3" height="15.0" fill="rgb(206,151,44)" rx="2" ry="2" />
<text  x="1129.42" y="79.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)#/usr/lib/debug/usr/bin/clickhouse (4 samples, 0.03%)</title><rect x="23.1" y="133" width="0.3" height="15.0" fill="rgb(212,184,24)" rx="2" ry="2" />
<text  x="26.11" y="143.5" ></text>
</g>
<g >
<title>DB::AggregateFunctionUniq&lt;unsigned long, DB::AggregateFunctionUniqUniquesHashSetData&gt;::insertResultInto(char const*, DB::IColumn&amp;) const#/build/obj-x86_64-linux-gnu/../dbms/src/AggregateFunctions/AggregateFunctionUniq.h:242 (3 samples, 0.02%)</title><rect x="18.8" y="485" width="0.2" height="15.0" fill="rgb(218,69,34)" rx="2" ry="2" />
<text  x="21.77" y="495.5" ></text>
</g>
<g >
<title>CityHash_v1_0_2::CityHash128WithSeed(char const*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt;)#/build/obj-x86_64-linux-gnu/../contrib/cityhash102/src/city.cc:314 (3 samples, 0.02%)</title><rect x="918.2" y="133" width="0.3" height="15.0" fill="rgb(245,176,28)" rx="2" ry="2" />
<text  x="921.21" y="143.5" ></text>
</g>
<g >
<title>DB::IDataType::deserializeBinaryBulkWithMultipleStreams(DB::IColumn&amp;, unsigned long, DB::IDataType::DeserializeBinaryBulkSettings&amp;, std::shared_ptr&lt;DB::IDataType::DeserializeBinaryBulkState&gt;&amp;) const#/usr/include/c++/9/bits/std_function.h:690 (9 samples, 0.06%)</title><rect x="930.3" y="181" width="0.7" height="15.0" fill="rgb(219,42,36)" rx="2" ry="2" />
<text  x="933.25" y="191.5" ></text>
</g>
<g >
<title>DB::DataTypeString::deserializeBinaryBulk(DB::IColumn&amp;, DB::ReadBuffer&amp;, unsigned long, double) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:97 (2 samples, 0.01%)</title><rect x="1189.4" y="181" width="0.2" height="15.0" fill="rgb(213,6,50)" rx="2" ry="2" />
<text  x="1192.43" y="191.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/Allocator.h:167 (2 samples, 0.01%)</title><rect x="808.7" y="293" width="0.2" height="15.0" fill="rgb(254,87,33)" rx="2" ry="2" />
<text  x="811.74" y="303.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:454 (4 samples, 0.03%)</title><rect x="923.5" y="101" width="0.3" height="15.0" fill="rgb(237,211,19)" rx="2" ry="2" />
<text  x="926.45" y="111.5" ></text>
</g>
<g >
<title>ThreadPoolImpl&lt;ThreadFromGlobalPool&gt;::worker(std::_List_iterator&lt;ThreadFromGlobalPool&gt;)#/usr/include/c++/9/bits/atomic_base.h:551 (4,303 samples, 29.88%)</title><rect x="23.0" y="405" width="352.6" height="15.0" fill="rgb(250,5,31)" rx="2" ry="2" />
<text  x="26.03" y="415.5" >ThreadPoolImpl&lt;ThreadFromGlobalPool&gt;::worker(st..</text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/HashTable/TwoLevelStringHashTable.h:99 (15 samples, 0.10%)</title><rect x="754.0" y="341" width="1.2" height="15.0" fill="rgb(216,197,6)" rx="2" ry="2" />
<text  x="757.00" y="351.5" ></text>
</g>
<g >
<title>DB::TreeExecutorBlockInputStream::execute()#/build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/TreeExecutorBlockInputStream.cpp:154 (3,319 samples, 23.05%)</title><rect x="915.1" y="325" width="272.0" height="15.0" fill="rgb(253,224,46)" rx="2" ry="2" />
<text  x="918.10" y="335.5" >DB::TreeExecutorBlockInputStream::ex..</text>
</g>
<g >
<title>DB::ICompressionCodec::decompress(char const*, unsigned int, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/ICompressionCodec.cpp:54 (36 samples, 0.25%)</title><rect x="1182.2" y="69" width="3.0" height="15.0" fill="rgb(236,145,29)" rx="2" ry="2" />
<text  x="1185.22" y="79.5" ></text>
</g>
<g >
<title>extents_alloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:562 (2 samples, 0.01%)</title><rect x="983.4" y="85" width="0.1" height="15.0" fill="rgb(224,185,38)" rx="2" ry="2" />
<text  x="986.35" y="95.5" ></text>
</g>
<g >
<title>DB::CompressedReadBufferBase::readCompressedData(unsigned long&amp;, unsigned long&amp;)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34 (2 samples, 0.01%)</title><rect x="1061.8" y="117" width="0.2" height="15.0" fill="rgb(214,104,8)" rx="2" ry="2" />
<text  x="1064.85" y="127.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:496 (20 samples, 0.14%)</title><rect x="1109.0" y="69" width="1.6" height="15.0" fill="rgb(220,35,2)" rx="2" ry="2" />
<text  x="1111.96" y="79.5" ></text>
</g>
<g >
<title>void DB::filterArraysImpl&lt;unsigned char&gt;(DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned long, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt;&amp;, DB::PODArray&lt;unsigned char, 4096ul, Allocator&lt;false, false&gt;, 15ul, 16ul&gt; const&amp;, long)#/build/obj-x86_64-linux-gnu/../dbms/src/Common/PODArray.h:377 (10 samples, 0.07%)</title><rect x="984.0" y="181" width="0.8" height="15.0" fill="rgb(220,84,11)" rx="2" ry="2" />
<text  x="987.01" y="191.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:697 (2 samples, 0.01%)</title><rect x="926.2" y="101" width="0.2" height="15.0" fill="rgb(246,34,22)" rx="2" ry="2" />
<text  x="929.24" y="111.5" ></text>
</g>
<g >
<title>arena_dalloc_bin_junked_locked#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/include/jemalloc/internal/extent_inlines.h:258 (8 samples, 0.06%)</title><rect x="340.0" y="245" width="0.7" height="15.0" fill="rgb(217,218,37)" rx="2" ry="2" />
<text  x="343.05" y="255.5" ></text>
</g>
<g >
<title>DB::MergeTreeReader::readData(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, DB::IDataType const&amp;, DB::IColumn&amp;, unsigned long, bool, unsigned long, bool)#/build/obj-x86_64-linux-gnu/../dbms/src/Storages/MergeTree/MergeTreeReader.cpp:258 (180 samples, 1.25%)</title><rect x="916.2" y="197" width="14.8" height="15.0" fill="rgb(250,131,53)" rx="2" ry="2" />
<text  x="919.24" y="207.5" ></text>
</g>
<g >
<title>void LZ4::(anonymous namespace)::decompressImpl&lt;16ul, true&gt;(char const*, char*, unsigned long)#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/LZ4_decompress_faster.cpp:454 (13 samples, 0.09%)</title><rect x="1101.8" y="69" width="1.0" height="15.0" fill="rgb(249,104,27)" rx="2" ry="2" />
<text  x="1104.75" y="79.5" ></text>
</g>
<g >
<title>extent_alloc_default_impl#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1201 (2 samples, 0.01%)</title><rect x="257.9" y="149" width="0.2" height="15.0" fill="rgb(238,165,31)" rx="2" ry="2" />
<text  x="260.95" y="159.5" ></text>
</g>
<g >
<title>large_ralloc#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/large.c:287 (5 samples, 0.03%)</title><rect x="460.2" y="261" width="0.4" height="15.0" fill="rgb(220,175,39)" rx="2" ry="2" />
<text  x="463.17" y="271.5" ></text>
</g>
<g >
<title>void DB::Aggregator::executeImplBatch&lt;DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt; &gt;(DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;&amp;, DB::AggregationMethodStringNoCache&lt;TwoLevelStringHashMap&lt;char*, Allocator&lt;true, true&gt;, StringHashMap&gt; &gt;::State&amp;, DB::Arena*, unsigned long, DB::Aggregator::AggregateFunctionInstruction*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Common/ColumnsHashingImpl.h:70 (4 samples, 0.03%)</title><rect x="387.8" y="341" width="0.3" height="15.0" fill="rgb(222,101,36)" rx="2" ry="2" />
<text  x="390.82" y="351.5" ></text>
</g>
<g >
<title>Allocator&lt;true, true&gt;::realloc(void*, unsigned long, unsigned long, unsigned long)#/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71 (138 samples, 0.96%)</title><rect x="470.9" y="309" width="11.3" height="15.0" fill="rgb(225,85,7)" rx="2" ry="2" />
<text  x="473.91" y="319.5" ></text>
</g>
<g >
<title>extent_alloc_wrapper#/build/obj-x86_64-linux-gnu/../contrib/jemalloc/src/extent.c:1517 (2 samples, 0.01%)</title><rect x="257.9" y="181" width="0.2" height="15.0" fill="rgb(234,152,44)" rx="2" ry="2" />
<text  x="260.95" y="191.5" ></text>
</g>
<g >
<title>DB::ICompressionCodec::decompress(char const*, unsigned int, char*) const#/build/obj-x86_64-linux-gnu/../dbms/src/Compression/ICompressionCodec.cpp:54 (96 samples, 0.67%)</title><rect x="920.6" y="133" width="7.9" height="15.0" fill="rgb(221,205,19)" rx="2" ry="2" />
<text  x="923.59" y="143.5" ></text>
</g>
<g >
<title>memequalSSE2Wide(char const*, char const*, unsigned long)#/usr/lib/gcc/x86_64-linux-gnu/9/include/emmintrin.h:1287 (13 samples, 0.09%)</title><rect x="396.5" y="325" width="1.1" height="15.0" fill="rgb(249,197,51)" rx="2" ry="2" />
<text  x="399.51" y="335.5" ></text>
</g>
</g>
</svg>
